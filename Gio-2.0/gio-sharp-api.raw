<?xml version="1.0" encoding="UTF-8"?>
<api>
  <namespace name="Gio" library="gio-2.0">
    <enum name="BusType" cname="GBusType" gtype="g_bus_type_get_type" type="enum">
      <member cname="G_BUS_TYPE_STARTER" name="Starter"/>
      <member cname="G_BUS_TYPE_NONE" name="None"/>
      <member cname="G_BUS_TYPE_SYSTEM" name="System"/>
      <member cname="G_BUS_TYPE_SESSION" name="Session"/>
    </enum>
    <enum name="ConverterResult" cname="GConverterResult" gtype="g_converter_result_get_type" type="enum">
      <member cname="G_CONVERTER_ERROR" name="Error"/>
      <member cname="G_CONVERTER_CONVERTED" name="Converted"/>
      <member cname="G_CONVERTER_FINISHED" name="Finished"/>
      <member cname="G_CONVERTER_FLUSHED" name="Flushed"/>
    </enum>
    <enum name="CredentialsType" cname="GCredentialsType" gtype="g_credentials_type_get_type" type="enum">
      <member cname="G_CREDENTIALS_TYPE_INVALID" name="Invalid"/>
      <member cname="G_CREDENTIALS_TYPE_LINUX_UCRED" name="LinuxUcred"/>
      <member cname="G_CREDENTIALS_TYPE_FREEBSD_CMSGCRED" name="FreebsdCmsgcred"/>
      <member cname="G_CREDENTIALS_TYPE_OPENBSD_SOCKPEERCRED" name="OpenbsdSockpeercred"/>
    </enum>
    <enum name="DBusError" cname="GDBusError" gtype="g_dbus_error_get_type" type="enum">
      <member cname="G_DBUS_ERROR_FAILED" name="Failed"/>
      <member cname="G_DBUS_ERROR_NO_MEMORY" name="NoMemory"/>
      <member cname="G_DBUS_ERROR_AUTH_FAILED" name="AuthFailed"/>
      <member cname="G_DBUS_ERROR_NO_SERVER" name="NoServer"/>
      <member cname="G_DBUS_ERROR_TIMEOUT" name="Timeout"/>
      <member cname="G_DBUS_ERROR_NO_NETWORK" name="NoNetwork"/>
      <member cname="G_DBUS_ERROR_ADDRESS_IN_USE" name="AddressInUse"/>
      <member cname="G_DBUS_ERROR_DISCONNECTED" name="Disconnected"/>
      <member cname="G_DBUS_ERROR_INVALID_ARGS" name="InvalidArgs"/>
      <member cname="G_DBUS_ERROR_FILE_NOT_FOUND" name="FileNotFound"/>
      <member cname="G_DBUS_ERROR_FILE_EXISTS" name="FileExists"/>
      <member cname="G_DBUS_ERROR_UNKNOWN_METHOD" name="UnknownMethod"/>
      <member cname="G_DBUS_ERROR_SERVICE_UNKNOWN" name="ServiceUnknown"/>
      <member cname="G_DBUS_ERROR_TIMED_OUT" name="TimedOut"/>
      <member cname="G_DBUS_ERROR_MATCH_RULE_NOT_FOUND" name="MatchRuleNotFound"/>
      <member cname="G_DBUS_ERROR_MATCH_RULE_INVALID" name="MatchRuleInvalid"/>
      <member cname="G_DBUS_ERROR_SPAWN_EXEC_FAILED" name="SpawnExecFailed"/>
      <member cname="G_DBUS_ERROR_SPAWN_FORK_FAILED" name="SpawnForkFailed"/>
      <member cname="G_DBUS_ERROR_SPAWN_CHILD_EXITED" name="SpawnChildExited"/>
      <member cname="G_DBUS_ERROR_SPAWN_CHILD_SIGNALED" name="SpawnChildSignaled"/>
      <member cname="G_DBUS_ERROR_SPAWN_FAILED" name="SpawnFailed"/>
      <member cname="G_DBUS_ERROR_SPAWN_SETUP_FAILED" name="SpawnSetupFailed"/>
      <member cname="G_DBUS_ERROR_SPAWN_CONFIG_INVALID" name="SpawnConfigInvalid"/>
      <member cname="G_DBUS_ERROR_NAME_HAS_NO_OWNER" name="NameHasNoOwner"/>
      <member cname="G_DBUS_ERROR_SPAWN_SERVICE_INVALID" name="SpawnServiceInvalid"/>
      <member cname="G_DBUS_ERROR_SPAWN_SERVICE_NOT_FOUND" name="SpawnServiceNotFound"/>
      <member cname="G_DBUS_ERROR_SPAWN_PERMISSIONS_INVALID" name="SpawnPermissionsInvalid"/>
      <member cname="G_DBUS_ERROR_SPAWN_FILE_INVALID" name="SpawnFileInvalid"/>
      <member cname="G_DBUS_ERROR_SPAWN_NO_MEMORY" name="SpawnNoMemory"/>
      <member cname="G_DBUS_ERROR_UNIX_PROCESS_ID_UNKNOWN" name="UnixProcessIdUnknown"/>
      <member cname="G_DBUS_ERROR_INVALID_SIGNATURE" name="InvalidSignature"/>
      <member cname="G_DBUS_ERROR_INVALID_FILE_CONTENT" name="InvalidFileContent"/>
      <member cname="G_DBUS_ERROR_SELINUX_SECURITY_CONTEXT_UNKNOWN" name="SelinuxSecurityContextUnknown"/>
      <member cname="G_DBUS_ERROR_ADT_AUDIT_DATA_UNKNOWN" name="AdtAuditDataUnknown"/>
      <member cname="G_DBUS_ERROR_NO_REPLY" name="NoReply"/>
      <member cname="G_DBUS_ERROR_OBJECT_PATH_IN_USE" name="ObjectPathInUse"/>
      <member cname="G_DBUS_ERROR_IO_ERROR" name="IoError"/>
      <member cname="G_DBUS_ERROR_BAD_ADDRESS" name="BadAddress"/>
      <member cname="G_DBUS_ERROR_NOT_SUPPORTED" name="NotSupported"/>
      <member cname="G_DBUS_ERROR_LIMITS_EXCEEDED" name="LimitsExceeded"/>
      <member cname="G_DBUS_ERROR_ACCESS_DENIED" name="AccessDenied"/>
    </enum>
    <enum name="DBusMessageByteOrder" cname="GDBusMessageByteOrder" gtype="g_dbus_message_byte_order_get_type" type="enum">
      <member cname="G_DBUS_MESSAGE_BYTE_ORDER_LITTLE_ENDIAN" name="LittleEndian"/>
      <member cname="G_DBUS_MESSAGE_BYTE_ORDER_BIG_ENDIAN" name="BigEndian"/>
    </enum>
    <enum name="DBusMessageHeaderField" cname="GDBusMessageHeaderField" gtype="g_dbus_message_header_field_get_type" type="enum">
      <member cname="G_DBUS_MESSAGE_HEADER_FIELD_INVALID" name="Invalid"/>
      <member cname="G_DBUS_MESSAGE_HEADER_FIELD_PATH" name="Path"/>
      <member cname="G_DBUS_MESSAGE_HEADER_FIELD_INTERFACE" name="Interface"/>
      <member cname="G_DBUS_MESSAGE_HEADER_FIELD_MEMBER" name="Member"/>
      <member cname="G_DBUS_MESSAGE_HEADER_FIELD_ERROR_NAME" name="ErrorName"/>
      <member cname="G_DBUS_MESSAGE_HEADER_FIELD_REPLY_SERIAL" name="ReplySerial"/>
      <member cname="G_DBUS_MESSAGE_HEADER_FIELD_DESTINATION" name="Destination"/>
      <member cname="G_DBUS_MESSAGE_HEADER_FIELD_SENDER" name="Sender"/>
      <member cname="G_DBUS_MESSAGE_HEADER_FIELD_SIGNATURE" name="Signature"/>
      <member cname="G_DBUS_MESSAGE_HEADER_FIELD_NUM_UNIX_FDS" name="NumUnixFds"/>
    </enum>
    <enum name="DBusMessageType" cname="GDBusMessageType" gtype="g_dbus_message_type_get_type" type="enum">
      <member cname="G_DBUS_MESSAGE_TYPE_INVALID" name="Invalid"/>
      <member cname="G_DBUS_MESSAGE_TYPE_METHOD_CALL" name="MethodCall"/>
      <member cname="G_DBUS_MESSAGE_TYPE_METHOD_RETURN" name="MethodReturn"/>
      <member cname="G_DBUS_MESSAGE_TYPE_ERROR" name="Error"/>
      <member cname="G_DBUS_MESSAGE_TYPE_SIGNAL" name="Signal"/>
    </enum>
    <enum name="DataStreamByteOrder" cname="GDataStreamByteOrder" gtype="g_data_stream_byte_order_get_type" type="enum">
      <member cname="G_DATA_STREAM_BYTE_ORDER_BIG_ENDIAN" name="BigEndian"/>
      <member cname="G_DATA_STREAM_BYTE_ORDER_LITTLE_ENDIAN" name="LittleEndian"/>
      <member cname="G_DATA_STREAM_BYTE_ORDER_HOST_ENDIAN" name="HostEndian"/>
    </enum>
    <enum name="DataStreamNewlineType" cname="GDataStreamNewlineType" gtype="g_data_stream_newline_type_get_type" type="enum">
      <member cname="G_DATA_STREAM_NEWLINE_TYPE_LF" name="Lf"/>
      <member cname="G_DATA_STREAM_NEWLINE_TYPE_CR" name="Cr"/>
      <member cname="G_DATA_STREAM_NEWLINE_TYPE_CR_LF" name="CrLf"/>
      <member cname="G_DATA_STREAM_NEWLINE_TYPE_ANY" name="Any"/>
    </enum>
    <enum name="DriveStartStopType" cname="GDriveStartStopType" gtype="g_drive_start_stop_type_get_type" type="enum">
      <member cname="G_DRIVE_START_STOP_TYPE_UNKNOWN" name="Unknown"/>
      <member cname="G_DRIVE_START_STOP_TYPE_SHUTDOWN" name="Shutdown"/>
      <member cname="G_DRIVE_START_STOP_TYPE_NETWORK" name="Network"/>
      <member cname="G_DRIVE_START_STOP_TYPE_MULTIDISK" name="Multidisk"/>
      <member cname="G_DRIVE_START_STOP_TYPE_PASSWORD" name="Password"/>
    </enum>
    <enum name="EmblemOrigin" cname="GEmblemOrigin" gtype="g_emblem_origin_get_type" type="enum">
      <member cname="G_EMBLEM_ORIGIN_UNKNOWN" name="Unknown"/>
      <member cname="G_EMBLEM_ORIGIN_DEVICE" name="Device"/>
      <member cname="G_EMBLEM_ORIGIN_LIVEMETADATA" name="Livemetadata"/>
      <member cname="G_EMBLEM_ORIGIN_TAG" name="Tag"/>
    </enum>
    <enum name="FileAttributeStatus" cname="GFileAttributeStatus" gtype="g_file_attribute_status_get_type" type="enum">
      <member cname="G_FILE_ATTRIBUTE_STATUS_UNSET" name="Unset"/>
      <member cname="G_FILE_ATTRIBUTE_STATUS_SET" name="Set"/>
      <member cname="G_FILE_ATTRIBUTE_STATUS_ERROR_SETTING" name="ErrorSetting"/>
    </enum>
    <enum name="FileAttributeType" cname="GFileAttributeType" gtype="g_file_attribute_type_get_type" type="enum">
      <member cname="G_FILE_ATTRIBUTE_TYPE_INVALID" name="Invalid"/>
      <member cname="G_FILE_ATTRIBUTE_TYPE_STRING" name="String"/>
      <member cname="G_FILE_ATTRIBUTE_TYPE_BYTE_STRING" name="ByteString"/>
      <member cname="G_FILE_ATTRIBUTE_TYPE_BOOLEAN" name="Boolean"/>
      <member cname="G_FILE_ATTRIBUTE_TYPE_UINT32" name="Uint32"/>
      <member cname="G_FILE_ATTRIBUTE_TYPE_INT32" name="Int32"/>
      <member cname="G_FILE_ATTRIBUTE_TYPE_UINT64" name="Uint64"/>
      <member cname="G_FILE_ATTRIBUTE_TYPE_INT64" name="Int64"/>
      <member cname="G_FILE_ATTRIBUTE_TYPE_OBJECT" name="Object"/>
      <member cname="G_FILE_ATTRIBUTE_TYPE_STRINGV" name="Stringv"/>
    </enum>
    <enum name="FileMonitorEvent" cname="GFileMonitorEvent" gtype="g_file_monitor_event_get_type" type="enum">
      <member cname="G_FILE_MONITOR_EVENT_CHANGED" name="Changed"/>
      <member cname="G_FILE_MONITOR_EVENT_CHANGES_DONE_HINT" name="ChangesDoneHint"/>
      <member cname="G_FILE_MONITOR_EVENT_DELETED" name="Deleted"/>
      <member cname="G_FILE_MONITOR_EVENT_CREATED" name="Created"/>
      <member cname="G_FILE_MONITOR_EVENT_ATTRIBUTE_CHANGED" name="AttributeChanged"/>
      <member cname="G_FILE_MONITOR_EVENT_PRE_UNMOUNT" name="PreUnmount"/>
      <member cname="G_FILE_MONITOR_EVENT_UNMOUNTED" name="Unmounted"/>
      <member cname="G_FILE_MONITOR_EVENT_MOVED" name="Moved"/>
    </enum>
    <enum name="FileType" cname="GFileType" gtype="g_file_type_get_type" type="enum">
      <member cname="G_FILE_TYPE_UNKNOWN" name="Unknown"/>
      <member cname="G_FILE_TYPE_REGULAR" name="Regular"/>
      <member cname="G_FILE_TYPE_DIRECTORY" name="Directory"/>
      <member cname="G_FILE_TYPE_SYMBOLIC_LINK" name="SymbolicLink"/>
      <member cname="G_FILE_TYPE_SPECIAL" name="Special"/>
      <member cname="G_FILE_TYPE_SHORTCUT" name="Shortcut"/>
      <member cname="G_FILE_TYPE_MOUNTABLE" name="Mountable"/>
    </enum>
    <enum name="FilesystemPreviewType" cname="GFilesystemPreviewType" gtype="g_filesystem_preview_type_get_type" type="enum">
      <member cname="G_FILESYSTEM_PREVIEW_TYPE_IF_ALWAYS" name="IfAlways"/>
      <member cname="G_FILESYSTEM_PREVIEW_TYPE_IF_LOCAL" name="IfLocal"/>
      <member cname="G_FILESYSTEM_PREVIEW_TYPE_NEVER" name="Never"/>
    </enum>
    <enum name="IOErrorEnum" cname="GIOErrorEnum" gtype="g_io_error_enum_get_type" type="enum">
      <member cname="G_IO_ERROR_FAILED" name="Failed"/>
      <member cname="G_IO_ERROR_NOT_FOUND" name="NotFound"/>
      <member cname="G_IO_ERROR_INVALID_FILENAME" name="InvalidFilename"/>
      <member cname="G_IO_ERROR_TOO_MANY_LINKS" name="TooManyLinks"/>
      <member cname="G_IO_ERROR_NO_SPACE" name="NoSpace"/>
      <member cname="G_IO_ERROR_INVALID_ARGUMENT" name="InvalidArgument"/>
      <member cname="G_IO_ERROR_PERMISSION_DENIED" name="PermissionDenied"/>
      <member cname="G_IO_ERROR_NOT_SUPPORTED" name="NotSupported"/>
      <member cname="G_IO_ERROR_NOT_MOUNTED" name="NotMounted"/>
      <member cname="G_IO_ERROR_ALREADY_MOUNTED" name="AlreadyMounted"/>
      <member cname="G_IO_ERROR_CLOSED" name="Closed"/>
      <member cname="G_IO_ERROR_CANCELLED" name="Cancelled"/>
      <member cname="G_IO_ERROR_EXISTS" name="Exists"/>
      <member cname="G_IO_ERROR_PENDING" name="Pending"/>
      <member cname="G_IO_ERROR_READ_ONLY" name="ReadOnly"/>
      <member cname="G_IO_ERROR_CANT_CREATE_BACKUP" name="CantCreateBackup"/>
      <member cname="G_IO_ERROR_WRONG_ETAG" name="WrongEtag"/>
      <member cname="G_IO_ERROR_TIMED_OUT" name="TimedOut"/>
      <member cname="G_IO_ERROR_WOULD_RECURSE" name="WouldRecurse"/>
      <member cname="G_IO_ERROR_BUSY" name="Busy"/>
      <member cname="G_IO_ERROR_WOULD_BLOCK" name="WouldBlock"/>
      <member cname="G_IO_ERROR_HOST_NOT_FOUND" name="HostNotFound"/>
      <member cname="G_IO_ERROR_WOULD_MERGE" name="WouldMerge"/>
      <member cname="G_IO_ERROR_IS_DIRECTORY" name="IsDirectory"/>
      <member cname="G_IO_ERROR_FAILED_HANDLED" name="FailedHandled"/>
      <member cname="G_IO_ERROR_TOO_MANY_OPEN_FILES" name="TooManyOpenFiles"/>
      <member cname="G_IO_ERROR_NOT_INITIALIZED" name="NotInitialized"/>
      <member cname="G_IO_ERROR_ADDRESS_IN_USE" name="AddressInUse"/>
      <member cname="G_IO_ERROR_PARTIAL_INPUT" name="PartialInput"/>
      <member cname="G_IO_ERROR_INVALID_DATA" name="InvalidData"/>
      <member cname="G_IO_ERROR_DBUS_ERROR" name="DbusError"/>
      <member cname="G_IO_ERROR_HOST_UNREACHABLE" name="HostUnreachable"/>
      <member cname="G_IO_ERROR_NETWORK_UNREACHABLE" name="NetworkUnreachable"/>
      <member cname="G_IO_ERROR_CONNECTION_REFUSED" name="ConnectionRefused"/>
      <member cname="G_IO_ERROR_NOT_DIRECTORY" name="NotDirectory"/>
      <member cname="G_IO_ERROR_PROXY_FAILED" name="ProxyFailed"/>
      <member cname="G_IO_ERROR_PROXY_AUTH_FAILED" name="ProxyAuthFailed"/>
      <member cname="G_IO_ERROR_PROXY_NEED_AUTH" name="ProxyNeedAuth"/>
      <member cname="G_IO_ERROR_PROXY_NOT_ALLOWED" name="ProxyNotAllowed"/>
      <member cname="G_IO_ERROR_NOT_EMPTY" name="NotEmpty"/>
      <member cname="G_IO_ERROR_NOT_REGULAR_FILE" name="NotRegularFile"/>
      <member cname="G_IO_ERROR_NOT_SYMBOLIC_LINK" name="NotSymbolicLink"/>
      <member cname="G_IO_ERROR_NOT_MOUNTABLE_FILE" name="NotMountableFile"/>
      <member cname="G_IO_ERROR_FILENAME_TOO_LONG" name="FilenameTooLong"/>
    </enum>
    <enum name="IOModuleScopeFlags" cname="GIOModuleScopeFlags" gtype="g_io_module_scope_flags_get_type" type="enum">
      <member cname="G_IO_MODULE_SCOPE_NONE" name="None"/>
      <member cname="G_IO_MODULE_SCOPE_BLOCK_DUPLICATES" name="BlockDuplicates"/>
    </enum>
    <enum name="MountOperationResult" cname="GMountOperationResult" gtype="g_mount_operation_result_get_type" type="enum">
      <member cname="G_MOUNT_OPERATION_HANDLED" name="Handled"/>
      <member cname="G_MOUNT_OPERATION_ABORTED" name="Aborted"/>
      <member cname="G_MOUNT_OPERATION_UNHANDLED" name="Unhandled"/>
    </enum>
    <enum name="PasswordSave" cname="GPasswordSave" gtype="g_password_save_get_type" type="enum">
      <member cname="G_PASSWORD_SAVE_NEVER" name="Never"/>
      <member cname="G_PASSWORD_SAVE_FOR_SESSION" name="ForSession"/>
      <member cname="G_PASSWORD_SAVE_PERMANENTLY" name="Permanently"/>
    </enum>
    <enum name="ResolverError" cname="GResolverError" gtype="g_resolver_error_get_type" type="enum">
      <member cname="G_RESOLVER_ERROR_NOT_FOUND" name="NotFound"/>
      <member cname="G_RESOLVER_ERROR_TEMPORARY_FAILURE" name="TemporaryFailure"/>
      <member cname="G_RESOLVER_ERROR_INTERNAL" name="Internal"/>
    </enum>
    <enum name="ResourceError" cname="GResourceError" gtype="g_resource_error_get_type" type="enum">
      <member cname="G_RESOURCE_ERROR_NOT_FOUND" name="NotFound"/>
      <member cname="G_RESOURCE_ERROR_INTERNAL" name="Internal"/>
    </enum>
    <enum name="SocketClientEvent" cname="GSocketClientEvent" gtype="g_socket_client_event_get_type" type="enum">
      <member cname="G_SOCKET_CLIENT_RESOLVING" name="Resolving"/>
      <member cname="G_SOCKET_CLIENT_RESOLVED" name="Resolved"/>
      <member cname="G_SOCKET_CLIENT_CONNECTING" name="Connecting"/>
      <member cname="G_SOCKET_CLIENT_CONNECTED" name="Connected"/>
      <member cname="G_SOCKET_CLIENT_PROXY_NEGOTIATING" name="ProxyNegotiating"/>
      <member cname="G_SOCKET_CLIENT_PROXY_NEGOTIATED" name="ProxyNegotiated"/>
      <member cname="G_SOCKET_CLIENT_TLS_HANDSHAKING" name="TlsHandshaking"/>
      <member cname="G_SOCKET_CLIENT_TLS_HANDSHAKED" name="TlsHandshaked"/>
      <member cname="G_SOCKET_CLIENT_COMPLETE" name="Complete"/>
    </enum>
    <enum name="SocketFamily" cname="GSocketFamily" gtype="g_socket_family_get_type" type="enum">
      <member cname="G_SOCKET_FAMILY_INVALID" name="Invalid"/>
      <member cname="G_SOCKET_FAMILY_UNIX" name="Unix"/>
      <member cname="G_SOCKET_FAMILY_IPV6" name="Ipv6"/>
      <member cname="G_SOCKET_FAMILY_IPV4" name="Ipv4"/>
    </enum>
    <enum name="SocketProtocol" cname="GSocketProtocol" gtype="g_socket_protocol_get_type" type="enum">
      <member cname="G_SOCKET_PROTOCOL_UNKNOWN" name="Unknown"/>
      <member cname="G_SOCKET_PROTOCOL_DEFAULT" name="Default"/>
      <member cname="G_SOCKET_PROTOCOL_SCTP" name="Sctp"/>
      <member cname="G_SOCKET_PROTOCOL_UDP" name="Udp"/>
      <member cname="G_SOCKET_PROTOCOL_TCP" name="Tcp"/>
    </enum>
    <enum name="SocketType" cname="GSocketType" gtype="g_socket_type_get_type" type="enum">
      <member cname="G_SOCKET_TYPE_INVALID" name="Invalid"/>
      <member cname="G_SOCKET_TYPE_STREAM" name="Stream"/>
      <member cname="G_SOCKET_TYPE_DATAGRAM" name="Datagram"/>
      <member cname="G_SOCKET_TYPE_SEQPACKET" name="Seqpacket"/>
    </enum>
    <enum name="TlsAuthenticationMode" cname="GTlsAuthenticationMode" gtype="g_tls_authentication_mode_get_type" type="enum">
      <member cname="G_TLS_AUTHENTICATION_NONE" name="None"/>
      <member cname="G_TLS_AUTHENTICATION_REQUESTED" name="Requested"/>
      <member cname="G_TLS_AUTHENTICATION_REQUIRED" name="Required"/>
    </enum>
    <enum name="TlsDatabaseLookupFlags" cname="GTlsDatabaseLookupFlags" gtype="g_tls_database_lookup_flags_get_type" type="enum">
      <member cname="G_TLS_DATABASE_LOOKUP_NONE" name="None"/>
      <member cname="G_TLS_DATABASE_LOOKUP_KEYPAIR" name="Keypair"/>
    </enum>
    <enum name="TlsError" cname="GTlsError" gtype="g_tls_error_get_type" type="enum">
      <member cname="G_TLS_ERROR_UNAVAILABLE" name="Unavailable"/>
      <member cname="G_TLS_ERROR_MISC" name="Misc"/>
      <member cname="G_TLS_ERROR_BAD_CERTIFICATE" name="BadCertificate"/>
      <member cname="G_TLS_ERROR_NOT_TLS" name="NotTls"/>
      <member cname="G_TLS_ERROR_HANDSHAKE" name="Handshake"/>
      <member cname="G_TLS_ERROR_CERTIFICATE_REQUIRED" name="CertificateRequired"/>
      <member cname="G_TLS_ERROR_EOF" name="Eof"/>
    </enum>
    <enum name="TlsInteractionResult" cname="GTlsInteractionResult" gtype="g_tls_interaction_result_get_type" type="enum">
      <member cname="G_TLS_INTERACTION_UNHANDLED" name="Unhandled"/>
      <member cname="G_TLS_INTERACTION_HANDLED" name="Handled"/>
      <member cname="G_TLS_INTERACTION_FAILED" name="Failed"/>
    </enum>
    <enum name="TlsRehandshakeMode" cname="GTlsRehandshakeMode" gtype="g_tls_rehandshake_mode_get_type" type="enum">
      <member cname="G_TLS_REHANDSHAKE_NEVER" name="Never"/>
      <member cname="G_TLS_REHANDSHAKE_SAFELY" name="Safely"/>
      <member cname="G_TLS_REHANDSHAKE_UNSAFELY" name="Unsafely"/>
    </enum>
    <enum name="UnixSocketAddressType" cname="GUnixSocketAddressType" gtype="g_unix_socket_address_type_get_type" type="enum">
      <member cname="G_UNIX_SOCKET_ADDRESS_INVALID" name="Invalid"/>
      <member cname="G_UNIX_SOCKET_ADDRESS_ANONYMOUS" name="Anonymous"/>
      <member cname="G_UNIX_SOCKET_ADDRESS_PATH" name="Path"/>
      <member cname="G_UNIX_SOCKET_ADDRESS_ABSTRACT" name="Abstract"/>
      <member cname="G_UNIX_SOCKET_ADDRESS_ABSTRACT_PADDED" name="AbstractPadded"/>
    </enum>
    <enum name="ZlibCompressorFormat" cname="GZlibCompressorFormat" gtype="g_zlib_compressor_format_get_type" type="enum">
      <member cname="G_ZLIB_COMPRESSOR_FORMAT_ZLIB" name="Zlib"/>
      <member cname="G_ZLIB_COMPRESSOR_FORMAT_GZIP" name="Gzip"/>
      <member cname="G_ZLIB_COMPRESSOR_FORMAT_RAW" name="Raw"/>
    </enum>
    <enum name="AppInfoCreateFlags" cname="GAppInfoCreateFlags" type="enum" gtype="g_app_info_create_flags_get_type">
      <member cname="G_APP_INFO_CREATE_NONE" name="None"/>
      <member cname="G_APP_INFO_CREATE_NEEDS_TERMINAL" name="NeedsTerminal"/>
      <member cname="G_APP_INFO_CREATE_SUPPORTS_URIS" name="SupportsUris"/>
      <member cname="G_APP_INFO_CREATE_SUPPORTS_STARTUP_NOTIFICATION" name="SupportsStartupNotification"/>
    </enum>
    <enum name="ApplicationFlags" cname="GApplicationFlags" type="enum" gtype="g_application_flags_get_type">
      <member cname="G_APPLICATION_FLAGS_NONE" name="FlagsNone"/>
      <member cname="G_APPLICATION_IS_SERVICE" name="IsService"/>
      <member cname="G_APPLICATION_SEND_ENVIRONMENT" name="SendEnvironment"/>
      <member cname="G_APPLICATION_IS_LAUNCHER" name="IsLauncher"/>
      <member cname="G_APPLICATION_NON_UNIQUE" name="NonUnique"/>
      <member cname="G_APPLICATION_HANDLES_OPEN" name="HandlesOpen"/>
      <member cname="G_APPLICATION_HANDLES_COMMAND_LINE" name="HandlesCommandLine"/>
    </enum>
    <enum name="AskPasswordFlags" cname="GAskPasswordFlags" type="enum" gtype="g_ask_password_flags_get_type">
      <member cname="G_ASK_PASSWORD_NEED_PASSWORD" name="NeedPassword"/>
      <member cname="G_ASK_PASSWORD_ANONYMOUS_SUPPORTED" name="AnonymousSupported"/>
      <member cname="G_ASK_PASSWORD_NEED_USERNAME" name="NeedUsername"/>
      <member cname="G_ASK_PASSWORD_NEED_DOMAIN" name="NeedDomain"/>
      <member cname="G_ASK_PASSWORD_SAVING_SUPPORTED" name="SavingSupported"/>
    </enum>
    <enum name="BusNameOwnerFlags" cname="GBusNameOwnerFlags" type="enum" gtype="g_bus_name_owner_flags_get_type">
      <member cname="G_BUS_NAME_OWNER_FLAGS_NONE" name="None"/>
      <member cname="G_BUS_NAME_OWNER_FLAGS_ALLOW_REPLACEMENT" name="AllowReplacement"/>
      <member cname="G_BUS_NAME_OWNER_FLAGS_REPLACE" name="Replace"/>
    </enum>
    <enum name="BusNameWatcherFlags" cname="GBusNameWatcherFlags" type="enum" gtype="g_bus_name_watcher_flags_get_type">
      <member cname="G_BUS_NAME_WATCHER_FLAGS_NONE" name="None"/>
      <member cname="G_BUS_NAME_WATCHER_FLAGS_AUTO_START" name="AutoStart"/>
    </enum>
    <enum name="ConverterFlags" cname="GConverterFlags" type="enum" gtype="g_converter_flags_get_type">
      <member cname="G_CONVERTER_NO_FLAGS" name="None"/>
      <member cname="G_CONVERTER_INPUT_AT_END" name="InputAtEnd"/>
      <member cname="G_CONVERTER_FLUSH" name="Flush"/>
    </enum>
    <enum name="DBusCallFlags" cname="GDBusCallFlags" type="enum" gtype="g_dbus_call_flags_get_type">
      <member cname="G_DBUS_CALL_FLAGS_NONE" name="None"/>
      <member cname="G_DBUS_CALL_FLAGS_NO_AUTO_START" name="NoAutoStart"/>
    </enum>
    <enum name="DBusCapabilityFlags" cname="GDBusCapabilityFlags" type="enum" gtype="g_dbus_capability_flags_get_type">
      <member cname="G_DBUS_CAPABILITY_FLAGS_NONE" name="None"/>
      <member cname="G_DBUS_CAPABILITY_FLAGS_UNIX_FD_PASSING" name="UnixFdPassing"/>
    </enum>
    <enum name="DBusConnectionFlags" cname="GDBusConnectionFlags" type="enum" gtype="g_dbus_connection_flags_get_type">
      <member cname="G_DBUS_CONNECTION_FLAGS_NONE" name="None"/>
      <member cname="G_DBUS_CONNECTION_FLAGS_AUTHENTICATION_CLIENT" name="AuthenticationClient"/>
      <member cname="G_DBUS_CONNECTION_FLAGS_DELAY_MESSAGE_PROCESSING" name="DelayMessageProcessing"/>
      <member cname="G_DBUS_CONNECTION_FLAGS_AUTHENTICATION_SERVER" name="AuthenticationServer"/>
      <member cname="G_DBUS_CONNECTION_FLAGS_AUTHENTICATION_ALLOW_ANONYMOUS" name="AuthenticationAllowAnonymous"/>
      <member cname="G_DBUS_CONNECTION_FLAGS_MESSAGE_BUS_CONNECTION" name="MessageBusConnection"/>
    </enum>
    <enum name="DBusInterfaceSkeletonFlags" cname="GDBusInterfaceSkeletonFlags" type="enum" gtype="g_dbus_interface_skeleton_flags_get_type">
      <member cname="G_DBUS_INTERFACE_SKELETON_FLAGS_NONE" name="None"/>
      <member cname="G_DBUS_INTERFACE_SKELETON_FLAGS_HANDLE_METHOD_INVOCATIONS_IN_THREAD" name="HandleMethodInvocationsInThread"/>
    </enum>
    <enum name="DBusMessageFlags" cname="GDBusMessageFlags" type="enum" gtype="g_dbus_message_flags_get_type">
      <member cname="G_DBUS_MESSAGE_FLAGS_NONE" name="None"/>
      <member cname="G_DBUS_MESSAGE_FLAGS_NO_REPLY_EXPECTED" name="NoReplyExpected"/>
      <member cname="G_DBUS_MESSAGE_FLAGS_NO_AUTO_START" name="NoAutoStart"/>
    </enum>
    <enum name="DBusObjectManagerClientFlags" cname="GDBusObjectManagerClientFlags" type="enum" gtype="g_dbus_object_manager_client_flags_get_type">
      <member cname="G_DBUS_OBJECT_MANAGER_CLIENT_FLAGS_NONE" name="None"/>
      <member cname="G_DBUS_OBJECT_MANAGER_CLIENT_FLAGS_DO_NOT_AUTO_START" name="DoNotAutoStart"/>
    </enum>
    <enum name="DBusPropertyInfoFlags" cname="GDBusPropertyInfoFlags" type="enum" gtype="g_dbus_property_info_flags_get_type">
      <member cname="G_DBUS_PROPERTY_INFO_FLAGS_NONE" name="None"/>
      <member cname="G_DBUS_PROPERTY_INFO_FLAGS_READABLE" name="Readable"/>
      <member cname="G_DBUS_PROPERTY_INFO_FLAGS_WRITABLE" name="Writable"/>
    </enum>
    <enum name="DBusProxyFlags" cname="GDBusProxyFlags" type="enum" gtype="g_dbus_proxy_flags_get_type">
      <member cname="G_DBUS_PROXY_FLAGS_NONE" name="None"/>
      <member cname="G_DBUS_PROXY_FLAGS_DO_NOT_LOAD_PROPERTIES" name="DoNotLoadProperties"/>
      <member cname="G_DBUS_PROXY_FLAGS_DO_NOT_CONNECT_SIGNALS" name="DoNotConnectSignals"/>
      <member cname="G_DBUS_PROXY_FLAGS_DO_NOT_AUTO_START" name="DoNotAutoStart"/>
      <member cname="G_DBUS_PROXY_FLAGS_GET_INVALIDATED_PROPERTIES" name="GetInvalidatedProperties"/>
    </enum>
    <enum name="DBusSendMessageFlags" cname="GDBusSendMessageFlags" type="enum" gtype="g_dbus_send_message_flags_get_type">
      <member cname="G_DBUS_SEND_MESSAGE_FLAGS_NONE" name="None"/>
      <member cname="G_DBUS_SEND_MESSAGE_FLAGS_PRESERVE_SERIAL" name="PreserveSerial"/>
    </enum>
    <enum name="DBusServerFlags" cname="GDBusServerFlags" type="enum" gtype="g_dbus_server_flags_get_type">
      <member cname="G_DBUS_SERVER_FLAGS_NONE" name="None"/>
      <member cname="G_DBUS_SERVER_FLAGS_RUN_IN_THREAD" name="RunInThread"/>
      <member cname="G_DBUS_SERVER_FLAGS_AUTHENTICATION_ALLOW_ANONYMOUS" name="AuthenticationAllowAnonymous"/>
    </enum>
    <enum name="DBusSignalFlags" cname="GDBusSignalFlags" type="enum" gtype="g_dbus_signal_flags_get_type">
      <member cname="G_DBUS_SIGNAL_FLAGS_NONE" name="None"/>
      <member cname="G_DBUS_SIGNAL_FLAGS_NO_MATCH_RULE" name="NoMatchRule"/>
    </enum>
    <enum name="DBusSubtreeFlags" cname="GDBusSubtreeFlags" type="enum" gtype="g_dbus_subtree_flags_get_type">
      <member cname="G_DBUS_SUBTREE_FLAGS_NONE" name="None"/>
      <member cname="G_DBUS_SUBTREE_FLAGS_DISPATCH_TO_UNENUMERATED_NODES" name="DispatchToUnenumeratedNodes"/>
    </enum>
    <enum name="DriveStartFlags" cname="GDriveStartFlags" type="enum" gtype="g_drive_start_flags_get_type">
      <member cname="G_DRIVE_START_NONE" name="None"/>
    </enum>
    <enum name="FileAttributeInfoFlags" cname="GFileAttributeInfoFlags" type="enum" gtype="g_file_attribute_info_flags_get_type">
      <member cname="G_FILE_ATTRIBUTE_INFO_NONE" name="None"/>
      <member cname="G_FILE_ATTRIBUTE_INFO_COPY_WITH_FILE" name="CopyWithFile"/>
      <member cname="G_FILE_ATTRIBUTE_INFO_COPY_WHEN_MOVED" name="CopyWhenMoved"/>
    </enum>
    <enum name="FileCopyFlags" cname="GFileCopyFlags" type="enum" gtype="g_file_copy_flags_get_type">
      <member cname="G_FILE_COPY_NONE" name="None"/>
      <member cname="G_FILE_COPY_OVERWRITE" name="Overwrite"/>
      <member cname="G_FILE_COPY_NO_FALLBACK_FOR_MOVE" name="NoFallbackForMove"/>
      <member cname="G_FILE_COPY_BACKUP" name="Backup"/>
      <member cname="G_FILE_COPY_TARGET_DEFAULT_PERMS" name="TargetDefaultPerms"/>
      <member cname="G_FILE_COPY_NOFOLLOW_SYMLINKS" name="NofollowSymlinks"/>
      <member cname="G_FILE_COPY_ALL_METADATA" name="AllMetadata"/>
    </enum>
    <enum name="FileCreateFlags" cname="GFileCreateFlags" type="enum" gtype="g_file_create_flags_get_type">
      <member cname="G_FILE_CREATE_NONE" name="None"/>
      <member cname="G_FILE_CREATE_PRIVATE" name="Private"/>
      <member cname="G_FILE_CREATE_REPLACE_DESTINATION" name="ReplaceDestination"/>
    </enum>
    <enum name="FileMonitorFlags" cname="GFileMonitorFlags" type="enum" gtype="g_file_monitor_flags_get_type">
      <member cname="G_FILE_MONITOR_NONE" name="None"/>
      <member cname="G_FILE_MONITOR_WATCH_MOUNTS" name="WatchMounts"/>
      <member cname="G_FILE_MONITOR_SEND_MOVED" name="SendMoved"/>
    </enum>
    <enum name="FileQueryInfoFlags" cname="GFileQueryInfoFlags" type="enum" gtype="g_file_query_info_flags_get_type">
      <member cname="G_FILE_QUERY_INFO_NONE" name="None"/>
      <member cname="G_FILE_QUERY_INFO_NOFOLLOW_SYMLINKS" name="NofollowSymlinks"/>
    </enum>
    <enum name="IOStreamSpliceFlags" cname="GIOStreamSpliceFlags" type="enum" gtype="g_io_stream_splice_flags_get_type">
      <member cname="G_IO_STREAM_SPLICE_NONE" name="None"/>
      <member cname="G_IO_STREAM_SPLICE_CLOSE_STREAM1" name="CloseStream1"/>
      <member cname="G_IO_STREAM_SPLICE_CLOSE_STREAM2" name="CloseStream2"/>
      <member cname="G_IO_STREAM_SPLICE_WAIT_FOR_BOTH" name="WaitForBoth"/>
    </enum>
    <enum name="MountMountFlags" cname="GMountMountFlags" type="enum" gtype="g_mount_mount_flags_get_type">
      <member cname="G_MOUNT_MOUNT_NONE" name="None"/>
    </enum>
    <enum name="MountUnmountFlags" cname="GMountUnmountFlags" type="enum" gtype="g_mount_unmount_flags_get_type">
      <member cname="G_MOUNT_UNMOUNT_NONE" name="None"/>
      <member cname="G_MOUNT_UNMOUNT_FORCE" name="Force"/>
    </enum>
    <enum name="OutputStreamSpliceFlags" cname="GOutputStreamSpliceFlags" type="enum" gtype="g_output_stream_splice_flags_get_type">
      <member cname="G_OUTPUT_STREAM_SPLICE_NONE" name="None"/>
      <member cname="G_OUTPUT_STREAM_SPLICE_CLOSE_SOURCE" name="CloseSource"/>
      <member cname="G_OUTPUT_STREAM_SPLICE_CLOSE_TARGET" name="CloseTarget"/>
    </enum>
    <enum name="ResourceFlags" cname="GResourceFlags" type="enum" gtype="g_resource_flags_get_type">
      <member cname="G_RESOURCE_FLAGS_NONE" name="None"/>
      <member cname="G_RESOURCE_FLAGS_COMPRESSED" name="Compressed"/>
    </enum>
    <enum name="ResourceLookupFlags" cname="GResourceLookupFlags" type="enum" gtype="g_resource_lookup_flags_get_type">
      <member cname="G_RESOURCE_LOOKUP_FLAGS_NONE" name="None"/>
    </enum>
    <enum name="SettingsBindFlags" cname="GSettingsBindFlags" type="enum" gtype="g_settings_bind_flags_get_type">
      <member cname="G_SETTINGS_BIND_DEFAULT" name="Default"/>
      <member cname="G_SETTINGS_BIND_GET" name="Get"/>
      <member cname="G_SETTINGS_BIND_INVERT_BOOLEAN" name="InvertBoolean"/>
      <member cname="G_SETTINGS_BIND_SET" name="Set"/>
      <member cname="G_SETTINGS_BIND_NO_SENSITIVITY" name="NoSensitivity"/>
      <member cname="G_SETTINGS_BIND_GET_NO_CHANGES" name="GetNoChanges"/>
    </enum>
    <enum name="SocketMsgFlags" cname="GSocketMsgFlags" type="enum" gtype="g_socket_msg_flags_get_type">
      <member cname="G_SOCKET_MSG_NONE" name="None"/>
      <member cname="G_SOCKET_MSG_OOB" name="Oob"/>
      <member cname="G_SOCKET_MSG_PEEK" name="Peek"/>
      <member cname="G_SOCKET_MSG_DONTROUTE" name="Dontroute"/>
    </enum>
    <enum name="TlsCertificateFlags" cname="GTlsCertificateFlags" type="enum" gtype="g_tls_certificate_flags_get_type">
      <member cname="G_TLS_CERTIFICATE_UNKNOWN_CA" name="UnknownCa"/>
      <member cname="G_TLS_CERTIFICATE_VALIDATE_ALL" name="ValidateAll"/>
      <member cname="G_TLS_CERTIFICATE_REVOKED" name="Revoked"/>
      <member cname="G_TLS_CERTIFICATE_BAD_IDENTITY" name="BadIdentity"/>
      <member cname="G_TLS_CERTIFICATE_INSECURE" name="Insecure"/>
      <member cname="G_TLS_CERTIFICATE_NOT_ACTIVATED" name="NotActivated"/>
      <member cname="G_TLS_CERTIFICATE_GENERIC_ERROR" name="GenericError"/>
      <member cname="G_TLS_CERTIFICATE_EXPIRED" name="Expired"/>
    </enum>
    <enum name="TlsDatabaseVerifyFlags" cname="GTlsDatabaseVerifyFlags" type="enum" gtype="g_tls_database_verify_flags_get_type">
      <member cname="G_TLS_DATABASE_VERIFY_NONE" name="None"/>
    </enum>
    <enum name="TlsPasswordFlags" cname="GTlsPasswordFlags" type="enum" gtype="g_tls_password_flags_get_type">
      <member cname="G_TLS_PASSWORD_NONE" name="None"/>
      <member cname="G_TLS_PASSWORD_RETRY" name="Retry"/>
      <member cname="G_TLS_PASSWORD_MANY_TRIES" name="ManyTries"/>
      <member cname="G_TLS_PASSWORD_FINAL_TRY" name="FinalTry"/>
    </enum>
    <object name="AppLaunchContext" cname="GAppLaunchContext" parent="GObject" abstract="" opaque="">
      <method name="GetType" cname="g_app_launch_context_get_type" shared="true">
        <return-type type="GType"/>
      </method>
      <constructor cname="g_app_launch_context_new" disable_void_ctor=""/>
      <virtual_method name="GetDisplay" cname="get_display">
        <return-type type="gchar*"/>
        <parameters>
          <parameter name="app_launch_context" type="GAppLaunchContext*"/>
          <parameter name="info" type="GAppInfo*"/>
          <parameter name="files" type="GList*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </virtual_method>
      <virtual_method name="GetStartupNotifyId" cname="get_startup_notify_id">
        <return-type type="gchar*"/>
        <parameters>
          <parameter name="app_launch_context" type="GAppLaunchContext*"/>
          <parameter name="info" type="GAppInfo*"/>
          <parameter name="files" type="GList*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </virtual_method>
      <virtual_method name="LaunchFailed" cname="launch_failed">
        <return-type type="void"/>
        <parameters>
          <parameter name="app_launch_context" type="GAppLaunchContext*"/>
          <parameter name="startup_notify_id" type="const-gchar*"/>
        </parameters>
      </virtual_method>
      <method name="GetDisplay" cname="g_app_launch_context_get_display">
        <return-type type="gchar*"/>
        <parameters>
          <parameter name="info" type="GAppInfo*"/>
          <parameter name="files" type="GList*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="GetEnvironment" cname="g_app_launch_context_get_environment">
        <return-type type="char***" array="true"/>
      </method>
      <method name="GetStartupNotifyId" cname="g_app_launch_context_get_startup_notify_id">
        <return-type type="gchar*"/>
        <parameters>
          <parameter name="info" type="GAppInfo*"/>
          <parameter name="files" type="GList*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="LaunchFailed" cname="g_app_launch_context_launch_failed">
        <return-type type="void"/>
        <parameters>
          <parameter name="startup_notify_id" type="const-gchar*"/>
        </parameters>
      </method>
      <method name="Setenv" cname="g_app_launch_context_setenv">
        <return-type type="void"/>
        <parameters>
          <parameter name="variable" type="const-gchar*"/>
          <parameter name="value" type="const-gchar*"/>
        </parameters>
      </method>
      <method name="Unsetenv" cname="g_app_launch_context_unsetenv">
        <return-type type="void"/>
        <parameters>
          <parameter name="variable" type="const-gchar*"/>
        </parameters>
      </method>
      <field cname="parent_instance" name="ParentInstance" type="GObject*"/>
    </object>
    <object name="Application" cname="GApplication" parent="GObject" abstract="" opaque="">
      <method name="GetType" cname="g_application_get_type" shared="true">
        <return-type type="GType"/>
      </method>
      <constructor cname="g_application_new">
        <parameters>
          <parameter name="application_id" type="const-gchar*"/>
          <parameter name="flags" type="GApplicationFlags"/>
        </parameters>
      </constructor>
      <method name="GetDefault" cname="g_application_get_default" shared="true">
        <return-type type="GApplication*"/>
      </method>
      <method name="IdIsValid" cname="g_application_id_is_valid" shared="true">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="application_id" type="const-gchar*"/>
        </parameters>
      </method>
      <virtual_method name="Activate" cname="activate">
        <return-type type="void"/>
      </virtual_method>
      <virtual_method name="AddPlatformData" cname="add_platform_data">
        <return-type type="void"/>
        <parameters>
          <parameter name="application" type="GApplication*"/>
          <parameter name="builder" type="GVariantBuilder*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </virtual_method>
      <virtual_method name="AfterEmit" cname="after_emit">
        <return-type type="void"/>
        <parameters>
          <parameter name="application" type="GApplication*"/>
          <parameter name="platform_data" type="GVariant*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </virtual_method>
      <virtual_method name="BeforeEmit" cname="before_emit">
        <return-type type="void"/>
        <parameters>
          <parameter name="application" type="GApplication*"/>
          <parameter name="platform_data" type="GVariant*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </virtual_method>
      <virtual_method name="CommandLine" cname="command_line">
        <return-type type="gint"/>
        <parameters>
          <parameter name="application" type="GApplication*"/>
          <parameter name="command_line" type="GApplicationCommandLine*"/>
        </parameters>
      </virtual_method>
      <virtual_method name="LocalCommandLine" cname="local_command_line">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="application" type="GApplication*"/>
          <parameter name="arguments" type="const-gchar*"/>
          <parameter name="exit_status" type="gint"/>
        </parameters>
      </virtual_method>
      <virtual_method name="Open" cname="open">
        <return-type type="void"/>
        <parameters>
          <parameter name="application" type="GApplication*"/>
          <parameter name="files" type="GFile**" array_len="1"/>
          <parameter name="n_files" type="gint"/>
          <parameter name="hint" type="const-gchar*"/>
        </parameters>
      </virtual_method>
      <virtual_method name="QuitMainloop" cname="quit_mainloop">
        <return-type type="void"/>
      </virtual_method>
      <virtual_method name="RunMainloop" cname="run_mainloop">
        <return-type type="void"/>
      </virtual_method>
      <virtual_method name="Shutdown" cname="shutdown">
        <return-type type="void"/>
      </virtual_method>
      <virtual_method name="Startup" cname="startup">
        <return-type type="void"/>
      </virtual_method>
      <method name="Activate" cname="g_application_activate">
        <return-type type="void"/>
      </method>
      <method name="GetApplicationId" cname="g_application_get_application_id">
        <return-type type="const-gchar*"/>
      </method>
      <method name="GetFlags" cname="g_application_get_flags">
        <return-type type="GApplicationFlags"/>
      </method>
      <method name="GetInactivityTimeout" cname="g_application_get_inactivity_timeout">
        <return-type type="guint"/>
      </method>
      <method name="GetIsRegistered" cname="g_application_get_is_registered">
        <return-type type="gboolean"/>
      </method>
      <method name="GetIsRemote" cname="g_application_get_is_remote">
        <return-type type="gboolean"/>
      </method>
      <method name="Hold" cname="g_application_hold">
        <return-type type="void"/>
      </method>
      <method name="Open" cname="g_application_open">
        <return-type type="void"/>
        <parameters>
          <parameter name="files" type="GFile**" array_len="1"/>
          <parameter name="n_files" type="gint"/>
          <parameter name="hint" type="const-gchar*"/>
        </parameters>
      </method>
      <method name="Quit" cname="g_application_quit">
        <return-type type="void"/>
      </method>
      <method name="Register" cname="g_application_register">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="cancellable" type="GCancellable*"/>
        </parameters>
      </method>
      <method name="Release" cname="g_application_release">
        <return-type type="void"/>
      </method>
      <method name="Run" cname="g_application_run">
        <return-type type="gint"/>
        <parameters>
          <parameter name="argc" type="gint"/>
          <parameter name="argv" type="char**" array_len="0"/>
        </parameters>
      </method>
      <method name="SetActionGroup" cname="g_application_set_action_group">
        <return-type type="void"/>
        <parameters>
          <parameter name="action_group" type="GActionGroup*"/>
        </parameters>
      </method>
      <method name="SetApplicationId" cname="g_application_set_application_id">
        <return-type type="void"/>
        <parameters>
          <parameter name="application_id" type="const-gchar*"/>
        </parameters>
      </method>
      <method name="SetDefault" cname="g_application_set_default">
        <return-type type="void"/>
      </method>
      <method name="SetFlags" cname="g_application_set_flags">
        <return-type type="void"/>
        <parameters>
          <parameter name="flags" type="GApplicationFlags"/>
        </parameters>
      </method>
      <method name="SetInactivityTimeout" cname="g_application_set_inactivity_timeout">
        <return-type type="void"/>
        <parameters>
          <parameter name="inactivity_timeout" type="guint"/>
        </parameters>
      </method>
      <property name="ActionGroup" cname="action-group" type="GActionGroup*" readable="true" writable="true"/>
      <property name="ApplicationId" cname="application-id" type="gchar*" readable="true" writable="true"/>
      <property name="Flags" cname="flags" type="GApplicationFlags" readable="true" writable="true"/>
      <property name="InactivityTimeout" cname="inactivity-timeout" type="guint" readable="true" writable="true"/>
      <property name="IsRegistered" cname="is-registered" type="gboolean" readable="true" writable="false"/>
      <property name="IsRemote" cname="is-remote" type="gboolean" readable="true" writable="false"/>
    </object>
    <object name="ApplicationCommandLine" cname="GApplicationCommandLine" parent="GObject" abstract="" opaque="">
      <method name="GetType" cname="g_application_command_line_get_type" shared="true">
        <return-type type="GType"/>
      </method>
      <virtual_method name="PrintLiteral" cname="print_literal">
        <return-type type="void"/>
        <parameters>
          <parameter name="application_command_line" type="GApplicationCommandLine*"/>
          <parameter name="message" type="const-gchar*"/>
        </parameters>
      </virtual_method>
      <virtual_method name="PrinterrLiteral" cname="printerr_literal">
        <return-type type="void"/>
        <parameters>
          <parameter name="application_command_line" type="GApplicationCommandLine*"/>
          <parameter name="message" type="const-gchar*"/>
        </parameters>
      </virtual_method>
      <method name="GetArguments" cname="g_application_command_line_get_arguments">
        <return-type type="gchar***" array_len="0"/>
        <parameters>
          <parameter name="argc" type="gint*"/>
        </parameters>
      </method>
      <method name="GetCwd" cname="g_application_command_line_get_cwd">
        <return-type type="const-gchar*"/>
      </method>
      <method name="GetEnviron" cname="g_application_command_line_get_environ">
        <return-type type="gchar**" array="true"/>
      </method>
      <method name="GetExitStatus" cname="g_application_command_line_get_exit_status">
        <return-type type="gint"/>
      </method>
      <method name="GetIsRemote" cname="g_application_command_line_get_is_remote">
        <return-type type="gboolean"/>
      </method>
      <method name="GetPlatformData" cname="g_application_command_line_get_platform_data">
        <return-type type="GVariant*">
          <warning>missing glib:type-name</warning>
        </return-type>
      </method>
      <method name="Getenv" cname="g_application_command_line_getenv">
        <return-type type="const-gchar*"/>
        <parameters>
          <parameter name="name" type="const-gchar*"/>
        </parameters>
      </method>
      <method name="Print" cname="g_application_command_line_print">
        <return-type type="void"/>
        <parameters>
          <parameter name="format" type="const-gchar*"/>
          <parameter name="var_args" type="va_list"/>
        </parameters>
      </method>
      <method name="Printerr" cname="g_application_command_line_printerr">
        <return-type type="void"/>
        <parameters>
          <parameter name="format" type="const-gchar*"/>
          <parameter name="var_args" type="va_list"/>
        </parameters>
      </method>
      <method name="SetExitStatus" cname="g_application_command_line_set_exit_status">
        <return-type type="void"/>
        <parameters>
          <parameter name="exit_status" type="gint"/>
        </parameters>
      </method>
      <property name="Arguments" cname="arguments" type="GVariant*" readable="true" writable="true"/>
      <property name="IsRemote" cname="is-remote" type="gboolean" readable="true" writable="false"/>
      <property name="PlatformData" cname="platform-data" type="GVariant*" readable="true" writable="true"/>
    </object>
    <object name="BufferedInputStream" cname="GBufferedInputStream" parent="GFilterInputStream" abstract="" opaque="">
      <method name="GetType" cname="g_buffered_input_stream_get_type" shared="true">
        <return-type type="GType"/>
      </method>
      <constructor cname="g_buffered_input_stream_new">
        <parameters>
          <parameter name="base_stream" type="GInputStream*"/>
        </parameters>
      </constructor>
      <constructor cname="g_buffered_input_stream_new_sized">
        <parameters>
          <parameter name="base_stream" type="GInputStream*"/>
          <parameter name="size" type="gsize"/>
        </parameters>
      </constructor>
      <virtual_method name="Fill" cname="fill">
        <return-type type="gssize"/>
        <parameters>
          <parameter name="buffered_input_stream" type="GBufferedInputStream*"/>
          <parameter name="count" type="gssize"/>
          <parameter name="cancellable" type="GCancellable*"/>
        </parameters>
      </virtual_method>
      <virtual_method name="FillAsync" cname="fill_async">
        <return-type type="void"/>
        <parameters>
          <parameter name="buffered_input_stream" type="GBufferedInputStream*"/>
          <parameter name="count" type="gssize"/>
          <parameter name="io_priority" type="gint"/>
          <parameter name="cancellable" type="GCancellable*"/>
          <parameter name="callback" type="GAsyncReadyCallback"/>
          <parameter name="user_data" type="gpointer"/>
        </parameters>
      </virtual_method>
      <virtual_method name="FillFinish" cname="fill_finish">
        <return-type type="gssize"/>
        <parameters>
          <parameter name="buffered_input_stream" type="GBufferedInputStream*"/>
          <parameter name="_result" type="GAsyncResult*"/>
        </parameters>
      </virtual_method>
      <method name="Fill" cname="g_buffered_input_stream_fill">
        <return-type type="gssize"/>
        <parameters>
          <parameter name="count" type="gssize"/>
          <parameter name="cancellable" type="GCancellable*"/>
        </parameters>
      </method>
      <method name="FillAsync" cname="g_buffered_input_stream_fill_async">
        <return-type type="void"/>
        <parameters>
          <parameter name="count" type="gssize"/>
          <parameter name="io_priority" type="gint"/>
          <parameter name="cancellable" type="GCancellable*"/>
          <parameter name="callback" type="GAsyncReadyCallback"/>
          <parameter name="user_data" type="gpointer"/>
        </parameters>
      </method>
      <method name="FillFinish" cname="g_buffered_input_stream_fill_finish">
        <return-type type="gssize"/>
        <parameters>
          <parameter name="_result" type="GAsyncResult*"/>
        </parameters>
      </method>
      <method name="GetAvailable" cname="g_buffered_input_stream_get_available">
        <return-type type="gsize"/>
      </method>
      <method name="GetBufferSize" cname="g_buffered_input_stream_get_buffer_size">
        <return-type type="gsize"/>
      </method>
      <method name="Peek" cname="g_buffered_input_stream_peek">
        <return-type type="gsize"/>
        <parameters>
          <parameter name="buffer" type="void*" array_len="2"/>
          <parameter name="offset" type="gsize"/>
          <parameter name="count" type="gsize"/>
        </parameters>
      </method>
      <method name="PeekBuffer" cname="g_buffered_input_stream_peek_buffer">
        <return-type type="void*" array_len="0"/>
        <parameters>
          <parameter name="count" type="gsize*"/>
        </parameters>
      </method>
      <method name="ReadByte" cname="g_buffered_input_stream_read_byte">
        <return-type type="gint"/>
        <parameters>
          <parameter name="cancellable" type="GCancellable*"/>
        </parameters>
      </method>
      <method name="SetBufferSize" cname="g_buffered_input_stream_set_buffer_size">
        <return-type type="void"/>
        <parameters>
          <parameter name="size" type="gsize"/>
        </parameters>
      </method>
      <property name="BufferSize" cname="buffer-size" type="guint" readable="true" writable="true"/>
      <field cname="parent_instance" name="ParentInstance" type="GFilterInputStream*"/>
    </object>
    <object name="BufferedOutputStream" cname="GBufferedOutputStream" parent="GFilterOutputStream" abstract="" opaque="">
      <method name="GetType" cname="g_buffered_output_stream_get_type" shared="true">
        <return-type type="GType"/>
      </method>
      <constructor cname="g_buffered_output_stream_new">
        <parameters>
          <parameter name="base_stream" type="GOutputStream*"/>
        </parameters>
      </constructor>
      <constructor cname="g_buffered_output_stream_new_sized">
        <parameters>
          <parameter name="base_stream" type="GOutputStream*"/>
          <parameter name="size" type="gsize"/>
        </parameters>
      </constructor>
      <method name="GetAutoGrow" cname="g_buffered_output_stream_get_auto_grow">
        <return-type type="gboolean"/>
      </method>
      <method name="GetBufferSize" cname="g_buffered_output_stream_get_buffer_size">
        <return-type type="gsize"/>
      </method>
      <method name="SetAutoGrow" cname="g_buffered_output_stream_set_auto_grow">
        <return-type type="void"/>
        <parameters>
          <parameter name="auto_grow" type="gboolean"/>
        </parameters>
      </method>
      <method name="SetBufferSize" cname="g_buffered_output_stream_set_buffer_size">
        <return-type type="void"/>
        <parameters>
          <parameter name="size" type="gsize"/>
        </parameters>
      </method>
      <property name="AutoGrow" cname="auto-grow" type="gboolean" readable="true" writable="true"/>
      <property name="BufferSize" cname="buffer-size" type="guint" readable="true" writable="true"/>
      <field cname="parent_instance" name="ParentInstance" type="GFilterOutputStream*"/>
      <field cname="priv" name="Priv" type="GBufferedOutputStreamPrivate*">
        <warning>missing glib:type-name</warning>
      </field>
    </object>
    <object name="Cancellable" cname="GCancellable" parent="GObject" abstract="" opaque="">
      <method name="GetType" cname="g_cancellable_get_type" shared="true">
        <return-type type="GType"/>
      </method>
      <constructor cname="g_cancellable_new" disable_void_ctor=""/>
      <method name="GetCurrent" cname="g_cancellable_get_current" shared="true">
        <return-type type="GCancellable*"/>
      </method>
      <virtual_method name="Cancelled" cname="cancelled">
        <return-type type="void"/>
      </virtual_method>
      <method name="Cancel" cname="g_cancellable_cancel">
        <return-type type="void"/>
      </method>
      <method name="Connect" cname="g_cancellable_connect">
        <return-type type="gulong"/>
        <parameters>
          <parameter name="callback" type="GCallback"/>
          <parameter name="data" type="gpointer"/>
          <parameter name="data_destroy_func" type="GDestroyNotify"/>
        </parameters>
      </method>
      <method name="Disconnect" cname="g_cancellable_disconnect">
        <return-type type="void"/>
        <parameters>
          <parameter name="handler_id" type="gulong"/>
        </parameters>
      </method>
      <method name="GetFd" cname="g_cancellable_get_fd">
        <return-type type="gint"/>
      </method>
      <method name="IsCancelled" cname="g_cancellable_is_cancelled">
        <return-type type="gboolean"/>
      </method>
      <method name="MakePollfd" cname="g_cancellable_make_pollfd">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="pollfd" type="GPollFD*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="PopCurrent" cname="g_cancellable_pop_current">
        <return-type type="void"/>
      </method>
      <method name="PushCurrent" cname="g_cancellable_push_current">
        <return-type type="void"/>
      </method>
      <method name="ReleaseFd" cname="g_cancellable_release_fd">
        <return-type type="void"/>
      </method>
      <method name="Reset" cname="g_cancellable_reset">
        <return-type type="void"/>
      </method>
      <method name="SetErrorIfCancelled" cname="g_cancellable_set_error_if_cancelled">
        <return-type type="gboolean"/>
      </method>
      <method name="SourceNew" cname="g_cancellable_source_new">
        <return-type type="GSource*">
          <warning>missing glib:type-name</warning>
        </return-type>
      </method>
      <field cname="parent_instance" name="ParentInstance" type="GObject*"/>
    </object>
    <object name="CharsetConverter" cname="GCharsetConverter" parent="GObject" abstract="" opaque="">
      <method name="GetType" cname="g_charset_converter_get_type" shared="true">
        <return-type type="GType"/>
      </method>
      <constructor cname="g_charset_converter_new">
        <parameters>
          <parameter name="to_charset" type="const-gchar*"/>
          <parameter name="from_charset" type="const-gchar*"/>
        </parameters>
      </constructor>
      <method name="GetNumFallbacks" cname="g_charset_converter_get_num_fallbacks">
        <return-type type="guint"/>
      </method>
      <method name="GetUseFallback" cname="g_charset_converter_get_use_fallback">
        <return-type type="gboolean"/>
      </method>
      <method name="SetUseFallback" cname="g_charset_converter_set_use_fallback">
        <return-type type="void"/>
        <parameters>
          <parameter name="use_fallback" type="gboolean"/>
        </parameters>
      </method>
      <property name="FromCharset" cname="from-charset" type="gchar*" readable="true" writable="true"/>
      <property name="ToCharset" cname="to-charset" type="gchar*" readable="true" writable="true"/>
      <property name="UseFallback" cname="use-fallback" type="gboolean" readable="true" writable="true"/>
    </object>
    <object name="ConverterInputStream" cname="GConverterInputStream" parent="GFilterInputStream" abstract="" opaque="">
      <method name="GetType" cname="g_converter_input_stream_get_type" shared="true">
        <return-type type="GType"/>
      </method>
      <constructor cname="g_converter_input_stream_new">
        <parameters>
          <parameter name="base_stream" type="GInputStream*"/>
          <parameter name="converter" type="GConverter*"/>
        </parameters>
      </constructor>
      <method name="GetConverter" cname="g_converter_input_stream_get_converter">
        <return-type type="GConverter*"/>
      </method>
      <property name="Converter" cname="converter" type="GConverter*" readable="true" writable="true"/>
      <field cname="parent_instance" name="ParentInstance" type="GFilterInputStream*"/>
    </object>
    <object name="ConverterOutputStream" cname="GConverterOutputStream" parent="GFilterOutputStream" abstract="" opaque="">
      <method name="GetType" cname="g_converter_output_stream_get_type" shared="true">
        <return-type type="GType"/>
      </method>
      <constructor cname="g_converter_output_stream_new">
        <parameters>
          <parameter name="base_stream" type="GOutputStream*"/>
          <parameter name="converter" type="GConverter*"/>
        </parameters>
      </constructor>
      <method name="GetConverter" cname="g_converter_output_stream_get_converter">
        <return-type type="GConverter*"/>
      </method>
      <property name="Converter" cname="converter" type="GConverter*" readable="true" writable="true"/>
      <field cname="parent_instance" name="ParentInstance" type="GFilterOutputStream*"/>
    </object>
    <object name="Credentials" cname="GCredentials" parent="GObject" abstract="" opaque="">
      <method name="GetType" cname="g_credentials_get_type" shared="true">
        <return-type type="GType"/>
      </method>
      <constructor cname="g_credentials_new" disable_void_ctor=""/>
      <method name="GetNative" cname="g_credentials_get_native">
        <return-type type="gpointer"/>
        <parameters>
          <parameter name="native_type" type="GCredentialsType"/>
        </parameters>
      </method>
      <method name="GetUnixUser" cname="g_credentials_get_unix_user">
        <return-type type="guint"/>
      </method>
      <method name="IsSameUser" cname="g_credentials_is_same_user">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="other_credentials" type="GCredentials*"/>
        </parameters>
      </method>
      <method name="SetNative" cname="g_credentials_set_native">
        <return-type type="void"/>
        <parameters>
          <parameter name="native_type" type="GCredentialsType"/>
          <parameter name="native" type="gpointer"/>
        </parameters>
      </method>
      <method name="SetUnixUser" cname="g_credentials_set_unix_user">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="uid" type="guint"/>
        </parameters>
      </method>
      <method name="ToString" cname="g_credentials_to_string">
        <return-type type="gchar*"/>
      </method>
    </object>
    <object name="DBusActionGroup" cname="GDBusActionGroup" parent="GObject" abstract="" opaque="">
      <method name="GetType" cname="g_dbus_action_group_get_type" shared="true">
        <return-type type="GType"/>
      </method>
      <method name="Get" cname="g_dbus_action_group_get" shared="true">
        <return-type type="GDBusActionGroup*"/>
        <parameters>
          <parameter name="connection" type="GDBusConnection*"/>
          <parameter name="bus_name" type="const-gchar*"/>
          <parameter name="object_path" type="const-gchar*"/>
        </parameters>
      </method>
    </object>
    <object name="DBusAuthObserver" cname="GDBusAuthObserver" parent="GObject" abstract="" opaque="">
      <method name="GetType" cname="g_dbus_auth_observer_get_type" shared="true">
        <return-type type="GType"/>
      </method>
      <constructor cname="g_dbus_auth_observer_new" disable_void_ctor=""/>
      <method name="AuthorizeAuthenticatedPeer" cname="g_dbus_auth_observer_authorize_authenticated_peer">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="stream" type="GIOStream*"/>
          <parameter name="credentials" type="GCredentials*"/>
        </parameters>
      </method>
    </object>
    <object name="DBusConnection" cname="GDBusConnection" parent="GObject" abstract="" opaque="">
      <method name="GetType" cname="g_dbus_connection_get_type" shared="true">
        <return-type type="GType"/>
      </method>
      <constructor cname="g_dbus_connection_new_finish">
        <parameters>
          <parameter name="res" type="GAsyncResult*"/>
        </parameters>
      </constructor>
      <constructor cname="g_dbus_connection_new_for_address_finish">
        <parameters>
          <parameter name="res" type="GAsyncResult*"/>
        </parameters>
      </constructor>
      <constructor cname="g_dbus_connection_new_for_address_sync">
        <parameters>
          <parameter name="address" type="const-gchar*"/>
          <parameter name="flags" type="GDBusConnectionFlags"/>
          <parameter name="observer" type="GDBusAuthObserver*"/>
          <parameter name="cancellable" type="GCancellable*"/>
        </parameters>
      </constructor>
      <constructor cname="g_dbus_connection_new_sync">
        <parameters>
          <parameter name="stream" type="GIOStream*"/>
          <parameter name="guid" type="const-gchar*"/>
          <parameter name="flags" type="GDBusConnectionFlags"/>
          <parameter name="observer" type="GDBusAuthObserver*"/>
          <parameter name="cancellable" type="GCancellable*"/>
        </parameters>
      </constructor>
      <method name="New" cname="g_dbus_connection_new" shared="true">
        <return-type type="void"/>
        <parameters>
          <parameter name="stream" type="GIOStream*"/>
          <parameter name="guid" type="const-gchar*"/>
          <parameter name="flags" type="GDBusConnectionFlags"/>
          <parameter name="observer" type="GDBusAuthObserver*"/>
          <parameter name="cancellable" type="GCancellable*"/>
          <parameter name="callback" type="GAsyncReadyCallback"/>
          <parameter name="user_data" type="gpointer"/>
        </parameters>
      </method>
      <method name="NewForAddress" cname="g_dbus_connection_new_for_address" shared="true">
        <return-type type="void"/>
        <parameters>
          <parameter name="address" type="const-gchar*"/>
          <parameter name="flags" type="GDBusConnectionFlags"/>
          <parameter name="observer" type="GDBusAuthObserver*"/>
          <parameter name="cancellable" type="GCancellable*"/>
          <parameter name="callback" type="GAsyncReadyCallback"/>
          <parameter name="user_data" type="gpointer"/>
        </parameters>
      </method>
      <method name="AddFilter" cname="g_dbus_connection_add_filter">
        <return-type type="guint"/>
        <parameters>
          <parameter name="filter_function" type="GDBusMessageFilterFunction"/>
          <parameter name="user_data" type="gpointer"/>
          <parameter name="user_data_free_func" type="GDestroyNotify"/>
        </parameters>
      </method>
      <method name="Call" cname="g_dbus_connection_call">
        <return-type type="void"/>
        <parameters>
          <parameter name="bus_name" type="const-gchar*"/>
          <parameter name="object_path" type="const-gchar*"/>
          <parameter name="interface_name" type="const-gchar*"/>
          <parameter name="method_name" type="const-gchar*"/>
          <parameter name="parameters" type="GVariant*">
            <warning>missing glib:type-name</warning>
          </parameter>
          <parameter name="reply_type" type="GVariantType*">
            <warning>missing glib:type-name</warning>
          </parameter>
          <parameter name="flags" type="GDBusCallFlags"/>
          <parameter name="timeout_msec" type="gint"/>
          <parameter name="cancellable" type="GCancellable*"/>
          <parameter name="callback" type="GAsyncReadyCallback"/>
          <parameter name="user_data" type="gpointer"/>
        </parameters>
      </method>
      <method name="CallFinish" cname="g_dbus_connection_call_finish">
        <return-type type="GVariant*">
          <warning>missing glib:type-name</warning>
        </return-type>
        <parameters>
          <parameter name="res" type="GAsyncResult*"/>
        </parameters>
      </method>
      <method name="CallSync" cname="g_dbus_connection_call_sync">
        <return-type type="GVariant*">
          <warning>missing glib:type-name</warning>
        </return-type>
        <parameters>
          <parameter name="bus_name" type="const-gchar*"/>
          <parameter name="object_path" type="const-gchar*"/>
          <parameter name="interface_name" type="const-gchar*"/>
          <parameter name="method_name" type="const-gchar*"/>
          <parameter name="parameters" type="GVariant*">
            <warning>missing glib:type-name</warning>
          </parameter>
          <parameter name="reply_type" type="GVariantType*">
            <warning>missing glib:type-name</warning>
          </parameter>
          <parameter name="flags" type="GDBusCallFlags"/>
          <parameter name="timeout_msec" type="gint"/>
          <parameter name="cancellable" type="GCancellable*"/>
        </parameters>
      </method>
      <method name="CallWithUnixFdList" cname="g_dbus_connection_call_with_unix_fd_list">
        <return-type type="void"/>
        <parameters>
          <parameter name="bus_name" type="const-gchar*"/>
          <parameter name="object_path" type="const-gchar*"/>
          <parameter name="interface_name" type="const-gchar*"/>
          <parameter name="method_name" type="const-gchar*"/>
          <parameter name="parameters" type="GVariant*">
            <warning>missing glib:type-name</warning>
          </parameter>
          <parameter name="reply_type" type="GVariantType*">
            <warning>missing glib:type-name</warning>
          </parameter>
          <parameter name="flags" type="GDBusCallFlags"/>
          <parameter name="timeout_msec" type="gint"/>
          <parameter name="fd_list" type="GUnixFDList*"/>
          <parameter name="cancellable" type="GCancellable*"/>
          <parameter name="callback" type="GAsyncReadyCallback"/>
          <parameter name="user_data" type="gpointer"/>
        </parameters>
      </method>
      <method name="CallWithUnixFdListFinish" cname="g_dbus_connection_call_with_unix_fd_list_finish">
        <return-type type="GVariant*">
          <warning>missing glib:type-name</warning>
        </return-type>
        <parameters>
          <parameter name="out_fd_list" type="GUnixFDList*"/>
          <parameter name="res" type="GAsyncResult*"/>
        </parameters>
      </method>
      <method name="CallWithUnixFdListSync" cname="g_dbus_connection_call_with_unix_fd_list_sync">
        <return-type type="GVariant*">
          <warning>missing glib:type-name</warning>
        </return-type>
        <parameters>
          <parameter name="bus_name" type="const-gchar*"/>
          <parameter name="object_path" type="const-gchar*"/>
          <parameter name="interface_name" type="const-gchar*"/>
          <parameter name="method_name" type="const-gchar*"/>
          <parameter name="parameters" type="GVariant*">
            <warning>missing glib:type-name</warning>
          </parameter>
          <parameter name="reply_type" type="GVariantType*">
            <warning>missing glib:type-name</warning>
          </parameter>
          <parameter name="flags" type="GDBusCallFlags"/>
          <parameter name="timeout_msec" type="gint"/>
          <parameter name="fd_list" type="GUnixFDList*"/>
          <parameter name="out_fd_list" type="GUnixFDList*"/>
          <parameter name="cancellable" type="GCancellable*"/>
        </parameters>
      </method>
      <method name="Close" cname="g_dbus_connection_close">
        <return-type type="void"/>
        <parameters>
          <parameter name="cancellable" type="GCancellable*"/>
          <parameter name="callback" type="GAsyncReadyCallback"/>
          <parameter name="user_data" type="gpointer"/>
        </parameters>
      </method>
      <method name="CloseFinish" cname="g_dbus_connection_close_finish">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="res" type="GAsyncResult*"/>
        </parameters>
      </method>
      <method name="CloseSync" cname="g_dbus_connection_close_sync">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="cancellable" type="GCancellable*"/>
        </parameters>
      </method>
      <method name="EmitSignal" cname="g_dbus_connection_emit_signal">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="destination_bus_name" type="const-gchar*"/>
          <parameter name="object_path" type="const-gchar*"/>
          <parameter name="interface_name" type="const-gchar*"/>
          <parameter name="signal_name" type="const-gchar*"/>
          <parameter name="parameters" type="GVariant*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="ExportActionGroup" cname="g_dbus_connection_export_action_group">
        <return-type type="guint"/>
        <parameters>
          <parameter name="object_path" type="const-gchar*"/>
          <parameter name="action_group" type="GActionGroup*"/>
        </parameters>
      </method>
      <method name="ExportMenuModel" cname="g_dbus_connection_export_menu_model">
        <return-type type="guint"/>
        <parameters>
          <parameter name="object_path" type="const-gchar*"/>
          <parameter name="menu" type="GMenuModel*"/>
        </parameters>
      </method>
      <method name="Flush" cname="g_dbus_connection_flush">
        <return-type type="void"/>
        <parameters>
          <parameter name="cancellable" type="GCancellable*"/>
          <parameter name="callback" type="GAsyncReadyCallback"/>
          <parameter name="user_data" type="gpointer"/>
        </parameters>
      </method>
      <method name="FlushFinish" cname="g_dbus_connection_flush_finish">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="res" type="GAsyncResult*"/>
        </parameters>
      </method>
      <method name="FlushSync" cname="g_dbus_connection_flush_sync">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="cancellable" type="GCancellable*"/>
        </parameters>
      </method>
      <method name="GetCapabilities" cname="g_dbus_connection_get_capabilities">
        <return-type type="GDBusCapabilityFlags"/>
      </method>
      <method name="GetExitOnClose" cname="g_dbus_connection_get_exit_on_close">
        <return-type type="gboolean"/>
      </method>
      <method name="GetGuid" cname="g_dbus_connection_get_guid">
        <return-type type="const-gchar*"/>
      </method>
      <method name="GetPeerCredentials" cname="g_dbus_connection_get_peer_credentials">
        <return-type type="GCredentials*"/>
      </method>
      <method name="GetStream" cname="g_dbus_connection_get_stream">
        <return-type type="GIOStream*"/>
      </method>
      <method name="GetUniqueName" cname="g_dbus_connection_get_unique_name">
        <return-type type="const-gchar*"/>
      </method>
      <method name="IsClosed" cname="g_dbus_connection_is_closed">
        <return-type type="gboolean"/>
      </method>
      <method name="RegisterObject" cname="g_dbus_connection_register_object">
        <return-type type="guint"/>
        <parameters>
          <parameter name="object_path" type="const-gchar*"/>
          <parameter name="interface_info" type="GDBusInterfaceInfo*">
            <warning>missing glib:type-name</warning>
          </parameter>
          <parameter name="vtable" type="GDBusInterfaceVTable*">
            <warning>missing glib:type-name</warning>
          </parameter>
          <parameter name="user_data" type="gpointer"/>
          <parameter name="user_data_free_func" type="GDestroyNotify"/>
        </parameters>
      </method>
      <method name="RegisterSubtree" cname="g_dbus_connection_register_subtree">
        <return-type type="guint"/>
        <parameters>
          <parameter name="object_path" type="const-gchar*"/>
          <parameter name="vtable" type="GDBusSubtreeVTable*">
            <warning>missing glib:type-name</warning>
          </parameter>
          <parameter name="flags" type="GDBusSubtreeFlags"/>
          <parameter name="user_data" type="gpointer"/>
          <parameter name="user_data_free_func" type="GDestroyNotify"/>
        </parameters>
      </method>
      <method name="RemoveFilter" cname="g_dbus_connection_remove_filter">
        <return-type type="void"/>
        <parameters>
          <parameter name="filter_id" type="guint"/>
        </parameters>
      </method>
      <method name="SendMessage" cname="g_dbus_connection_send_message">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="message" type="GDBusMessage*"/>
          <parameter name="flags" type="GDBusSendMessageFlags"/>
          <parameter name="out_serial" type="guint32*"/>
        </parameters>
      </method>
      <method name="SendMessageWithReply" cname="g_dbus_connection_send_message_with_reply">
        <return-type type="void"/>
        <parameters>
          <parameter name="message" type="GDBusMessage*"/>
          <parameter name="flags" type="GDBusSendMessageFlags"/>
          <parameter name="timeout_msec" type="gint"/>
          <parameter name="out_serial" type="guint32*"/>
          <parameter name="cancellable" type="GCancellable*"/>
          <parameter name="callback" type="GAsyncReadyCallback"/>
          <parameter name="user_data" type="gpointer"/>
        </parameters>
      </method>
      <method name="SendMessageWithReplyFinish" cname="g_dbus_connection_send_message_with_reply_finish">
        <return-type type="GDBusMessage*"/>
        <parameters>
          <parameter name="res" type="GAsyncResult*"/>
        </parameters>
      </method>
      <method name="SendMessageWithReplySync" cname="g_dbus_connection_send_message_with_reply_sync">
        <return-type type="GDBusMessage*"/>
        <parameters>
          <parameter name="message" type="GDBusMessage*"/>
          <parameter name="flags" type="GDBusSendMessageFlags"/>
          <parameter name="timeout_msec" type="gint"/>
          <parameter name="out_serial" type="guint32*"/>
          <parameter name="cancellable" type="GCancellable*"/>
        </parameters>
      </method>
      <method name="SetExitOnClose" cname="g_dbus_connection_set_exit_on_close">
        <return-type type="void"/>
        <parameters>
          <parameter name="exit_on_close" type="gboolean"/>
        </parameters>
      </method>
      <method name="SignalSubscribe" cname="g_dbus_connection_signal_subscribe">
        <return-type type="guint"/>
        <parameters>
          <parameter name="sender" type="const-gchar*"/>
          <parameter name="interface_name" type="const-gchar*"/>
          <parameter name="member" type="const-gchar*"/>
          <parameter name="object_path" type="const-gchar*"/>
          <parameter name="arg0" type="const-gchar*"/>
          <parameter name="flags" type="GDBusSignalFlags"/>
          <parameter name="callback" type="GDBusSignalCallback"/>
          <parameter name="user_data" type="gpointer"/>
          <parameter name="user_data_free_func" type="GDestroyNotify"/>
        </parameters>
      </method>
      <method name="SignalUnsubscribe" cname="g_dbus_connection_signal_unsubscribe">
        <return-type type="void"/>
        <parameters>
          <parameter name="subscription_id" type="guint"/>
        </parameters>
      </method>
      <method name="StartMessageProcessing" cname="g_dbus_connection_start_message_processing">
        <return-type type="void"/>
      </method>
      <method name="UnexportActionGroup" cname="g_dbus_connection_unexport_action_group">
        <return-type type="void"/>
        <parameters>
          <parameter name="export_id" type="guint"/>
        </parameters>
      </method>
      <method name="UnexportMenuModel" cname="g_dbus_connection_unexport_menu_model">
        <return-type type="void"/>
        <parameters>
          <parameter name="export_id" type="guint"/>
        </parameters>
      </method>
      <method name="UnregisterObject" cname="g_dbus_connection_unregister_object">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="registration_id" type="guint"/>
        </parameters>
      </method>
      <method name="UnregisterSubtree" cname="g_dbus_connection_unregister_subtree">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="registration_id" type="guint"/>
        </parameters>
      </method>
      <property name="Address" cname="address" type="gchar*" readable="true" writable="true"/>
      <property name="AuthenticationObserver" cname="authentication-observer" type="GDBusAuthObserver*" readable="true" writable="true"/>
      <property name="Capabilities" cname="capabilities" type="GDBusCapabilityFlags" readable="true" writable="false"/>
      <property name="Closed" cname="closed" type="gboolean" readable="true" writable="false"/>
      <property name="ExitOnClose" cname="exit-on-close" type="gboolean" readable="true" writable="true"/>
      <property name="Flags" cname="flags" type="GDBusConnectionFlags" readable="true" writable="true"/>
      <property name="Guid" cname="guid" type="gchar*" readable="true" writable="true"/>
      <property name="Stream" cname="stream" type="GIOStream*" readable="true" writable="true"/>
      <property name="UniqueName" cname="unique-name" type="gchar*" readable="true" writable="false"/>
      <signal name="Closed" cname="closed">
        <return-type type="void"/>
        <parameters>
          <parameter name="dbusconnection" type="GDBusConnection**"/>
          <parameter name="remote_peer_vanished" type="gboolean"/>
          <parameter name="error" type="GError*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </signal>
    </object>
    <object name="DBusInterfaceSkeleton" cname="GDBusInterfaceSkeleton" parent="GObject" abstract="1" opaque="">
      <method name="GetType" cname="g_dbus_interface_skeleton_get_type" shared="true">
        <return-type type="GType"/>
      </method>
      <virtual_method name="Flush" cname="flush">
        <return-type type="void"/>
      </virtual_method>
      <virtual_method name="GAuthorizeMethod" cname="g_authorize_method">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="dbus_interface_skeleton" type="GDBusInterfaceSkeleton*"/>
          <parameter name="invocation" type="GDBusMethodInvocation*"/>
        </parameters>
      </virtual_method>
      <virtual_method name="GetInfo" cname="get_info">
        <return-type type="GDBusInterfaceInfo*">
          <warning>missing glib:type-name</warning>
        </return-type>
      </virtual_method>
      <virtual_method name="GetProperties" cname="get_properties">
        <return-type type="GVariant*">
          <warning>missing glib:type-name</warning>
        </return-type>
      </virtual_method>
      <virtual_method name="GetVtable" cname="get_vtable">
        <return-type type="GDBusInterfaceVTable*">
          <warning>missing glib:type-name</warning>
        </return-type>
      </virtual_method>
      <method name="Export" cname="g_dbus_interface_skeleton_export">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="connection" type="GDBusConnection*"/>
          <parameter name="object_path" type="const-gchar*"/>
        </parameters>
      </method>
      <method name="Flush" cname="g_dbus_interface_skeleton_flush">
        <return-type type="void"/>
      </method>
      <method name="GetConnection" cname="g_dbus_interface_skeleton_get_connection">
        <return-type type="GDBusConnection*"/>
      </method>
      <method name="GetConnections" cname="g_dbus_interface_skeleton_get_connections">
        <return-type type="GList*">
          <warning>missing glib:type-name</warning>
        </return-type>
      </method>
      <method name="GetFlags" cname="g_dbus_interface_skeleton_get_flags">
        <return-type type="GDBusInterfaceSkeletonFlags"/>
      </method>
      <method name="GetInfo" cname="g_dbus_interface_skeleton_get_info">
        <return-type type="GDBusInterfaceInfo*">
          <warning>missing glib:type-name</warning>
        </return-type>
      </method>
      <method name="GetObjectPath" cname="g_dbus_interface_skeleton_get_object_path">
        <return-type type="const-gchar*"/>
      </method>
      <method name="GetProperties" cname="g_dbus_interface_skeleton_get_properties">
        <return-type type="GVariant*">
          <warning>missing glib:type-name</warning>
        </return-type>
      </method>
      <method name="GetVtable" cname="g_dbus_interface_skeleton_get_vtable">
        <return-type type="GDBusInterfaceVTable*">
          <warning>missing glib:type-name</warning>
        </return-type>
      </method>
      <method name="HasConnection" cname="g_dbus_interface_skeleton_has_connection">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="connection" type="GDBusConnection*"/>
        </parameters>
      </method>
      <method name="SetFlags" cname="g_dbus_interface_skeleton_set_flags">
        <return-type type="void"/>
        <parameters>
          <parameter name="flags" type="GDBusInterfaceSkeletonFlags"/>
        </parameters>
      </method>
      <method name="Unexport" cname="g_dbus_interface_skeleton_unexport">
        <return-type type="void"/>
      </method>
      <method name="UnexportFromConnection" cname="g_dbus_interface_skeleton_unexport_from_connection">
        <return-type type="void"/>
        <parameters>
          <parameter name="connection" type="GDBusConnection*"/>
        </parameters>
      </method>
      <property name="GFlags" cname="g-flags" type="GDBusInterfaceSkeletonFlags" readable="true" writable="true"/>
    </object>
    <object name="DBusMenuModel" cname="GDBusMenuModel" parent="GMenuModel" abstract="" opaque="">
      <method name="GetType" cname="g_dbus_menu_model_get_type" shared="true">
        <return-type type="GType"/>
      </method>
      <method name="Get" cname="g_dbus_menu_model_get" shared="true">
        <return-type type="GDBusMenuModel*"/>
        <parameters>
          <parameter name="connection" type="GDBusConnection*"/>
          <parameter name="bus_name" type="const-gchar*"/>
          <parameter name="object_path" type="const-gchar*"/>
        </parameters>
      </method>
    </object>
    <object name="DBusMessage" cname="GDBusMessage" parent="GObject" abstract="" opaque="">
      <method name="GetType" cname="g_dbus_message_get_type" shared="true">
        <return-type type="GType"/>
      </method>
      <constructor cname="g_dbus_message_new" disable_void_ctor=""/>
      <constructor cname="g_dbus_message_new_from_blob">
        <parameters>
          <parameter name="blob" type="guchar*" array_len="1"/>
          <parameter name="blob_len" type="gsize"/>
          <parameter name="capabilities" type="GDBusCapabilityFlags"/>
        </parameters>
      </constructor>
      <constructor cname="g_dbus_message_new_method_call">
        <parameters>
          <parameter name="name" type="const-gchar*"/>
          <parameter name="path" type="const-gchar*"/>
          <parameter name="interface_" type="const-gchar*"/>
          <parameter name="method" type="const-gchar*"/>
        </parameters>
      </constructor>
      <constructor cname="g_dbus_message_new_signal">
        <parameters>
          <parameter name="path" type="const-gchar*"/>
          <parameter name="interface_" type="const-gchar*"/>
          <parameter name="signal" type="const-gchar*"/>
        </parameters>
      </constructor>
      <method name="BytesNeeded" cname="g_dbus_message_bytes_needed" shared="true">
        <return-type type="gssize"/>
        <parameters>
          <parameter name="blob" type="guchar*" array_len="1"/>
          <parameter name="blob_len" type="gsize"/>
        </parameters>
      </method>
      <method name="Copy" cname="g_dbus_message_copy">
        <return-type type="GDBusMessage*"/>
      </method>
      <method name="GetArg0" cname="g_dbus_message_get_arg0">
        <return-type type="const-gchar*"/>
      </method>
      <method name="GetBody" cname="g_dbus_message_get_body">
        <return-type type="GVariant*">
          <warning>missing glib:type-name</warning>
        </return-type>
      </method>
      <method name="GetByteOrder" cname="g_dbus_message_get_byte_order">
        <return-type type="GDBusMessageByteOrder"/>
      </method>
      <method name="GetDestination" cname="g_dbus_message_get_destination">
        <return-type type="const-gchar*"/>
      </method>
      <method name="GetErrorName" cname="g_dbus_message_get_error_name">
        <return-type type="const-gchar*"/>
      </method>
      <method name="GetFlags" cname="g_dbus_message_get_flags">
        <return-type type="GDBusMessageFlags"/>
      </method>
      <method name="GetHeader" cname="g_dbus_message_get_header">
        <return-type type="GVariant*">
          <warning>missing glib:type-name</warning>
        </return-type>
        <parameters>
          <parameter name="header_field" type="GDBusMessageHeaderField"/>
        </parameters>
      </method>
      <method name="GetHeaderFields" cname="g_dbus_message_get_header_fields">
        <return-type type="guchar*" array="true"/>
      </method>
      <method name="GetInterface" cname="g_dbus_message_get_interface">
        <return-type type="const-gchar*"/>
      </method>
      <method name="GetLocked" cname="g_dbus_message_get_locked">
        <return-type type="gboolean"/>
      </method>
      <method name="GetMember" cname="g_dbus_message_get_member">
        <return-type type="const-gchar*"/>
      </method>
      <method name="GetMessageType" cname="g_dbus_message_get_message_type">
        <return-type type="GDBusMessageType"/>
      </method>
      <method name="GetNumUnixFds" cname="g_dbus_message_get_num_unix_fds">
        <return-type type="guint32"/>
      </method>
      <method name="GetPath" cname="g_dbus_message_get_path">
        <return-type type="const-gchar*"/>
      </method>
      <method name="GetReplySerial" cname="g_dbus_message_get_reply_serial">
        <return-type type="guint32"/>
      </method>
      <method name="GetSender" cname="g_dbus_message_get_sender">
        <return-type type="const-gchar*"/>
      </method>
      <method name="GetSerial" cname="g_dbus_message_get_serial">
        <return-type type="guint32"/>
      </method>
      <method name="GetSignature" cname="g_dbus_message_get_signature">
        <return-type type="const-gchar*"/>
      </method>
      <method name="GetUnixFdList" cname="g_dbus_message_get_unix_fd_list">
        <return-type type="GUnixFDList*"/>
      </method>
      <method name="Lock" cname="g_dbus_message_lock">
        <return-type type="void"/>
      </method>
      <method name="NewMethodError" cname="g_dbus_message_new_method_error">
        <return-type type="GDBusMessage*"/>
        <parameters>
          <parameter name="error_name" type="const-gchar*"/>
          <parameter name="error_message_format" type="const-gchar*"/>
          <parameter name="var_args" type="va_list"/>
        </parameters>
      </method>
      <method name="NewMethodErrorLiteral" cname="g_dbus_message_new_method_error_literal">
        <return-type type="GDBusMessage*"/>
        <parameters>
          <parameter name="error_name" type="const-gchar*"/>
          <parameter name="error_message" type="const-gchar*"/>
        </parameters>
      </method>
      <method name="NewMethodErrorValist" cname="g_dbus_message_new_method_error_valist">
        <return-type type="GDBusMessage*"/>
        <parameters>
          <parameter name="error_name" type="const-gchar*"/>
          <parameter name="error_message_format" type="const-gchar*"/>
          <parameter name="var_args" type="va_list"/>
        </parameters>
      </method>
      <method name="NewMethodReply" cname="g_dbus_message_new_method_reply">
        <return-type type="GDBusMessage*"/>
      </method>
      <method name="Print" cname="g_dbus_message_print">
        <return-type type="gchar*"/>
        <parameters>
          <parameter name="indent" type="guint"/>
        </parameters>
      </method>
      <method name="SetBody" cname="g_dbus_message_set_body">
        <return-type type="void"/>
        <parameters>
          <parameter name="body" type="GVariant*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="SetByteOrder" cname="g_dbus_message_set_byte_order">
        <return-type type="void"/>
        <parameters>
          <parameter name="byte_order" type="GDBusMessageByteOrder"/>
        </parameters>
      </method>
      <method name="SetDestination" cname="g_dbus_message_set_destination">
        <return-type type="void"/>
        <parameters>
          <parameter name="value" type="const-gchar*"/>
        </parameters>
      </method>
      <method name="SetErrorName" cname="g_dbus_message_set_error_name">
        <return-type type="void"/>
        <parameters>
          <parameter name="value" type="const-gchar*"/>
        </parameters>
      </method>
      <method name="SetFlags" cname="g_dbus_message_set_flags">
        <return-type type="void"/>
        <parameters>
          <parameter name="flags" type="GDBusMessageFlags"/>
        </parameters>
      </method>
      <method name="SetHeader" cname="g_dbus_message_set_header">
        <return-type type="void"/>
        <parameters>
          <parameter name="header_field" type="GDBusMessageHeaderField"/>
          <parameter name="value" type="GVariant*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="SetInterface" cname="g_dbus_message_set_interface">
        <return-type type="void"/>
        <parameters>
          <parameter name="value" type="const-gchar*"/>
        </parameters>
      </method>
      <method name="SetMember" cname="g_dbus_message_set_member">
        <return-type type="void"/>
        <parameters>
          <parameter name="value" type="const-gchar*"/>
        </parameters>
      </method>
      <method name="SetMessageType" cname="g_dbus_message_set_message_type">
        <return-type type="void"/>
        <parameters>
          <parameter name="type" type="GDBusMessageType"/>
        </parameters>
      </method>
      <method name="SetNumUnixFds" cname="g_dbus_message_set_num_unix_fds">
        <return-type type="void"/>
        <parameters>
          <parameter name="value" type="guint32"/>
        </parameters>
      </method>
      <method name="SetPath" cname="g_dbus_message_set_path">
        <return-type type="void"/>
        <parameters>
          <parameter name="value" type="const-gchar*"/>
        </parameters>
      </method>
      <method name="SetReplySerial" cname="g_dbus_message_set_reply_serial">
        <return-type type="void"/>
        <parameters>
          <parameter name="value" type="guint32"/>
        </parameters>
      </method>
      <method name="SetSender" cname="g_dbus_message_set_sender">
        <return-type type="void"/>
        <parameters>
          <parameter name="value" type="const-gchar*"/>
        </parameters>
      </method>
      <method name="SetSerial" cname="g_dbus_message_set_serial">
        <return-type type="void"/>
        <parameters>
          <parameter name="serial" type="guint32"/>
        </parameters>
      </method>
      <method name="SetSignature" cname="g_dbus_message_set_signature">
        <return-type type="void"/>
        <parameters>
          <parameter name="value" type="const-gchar*"/>
        </parameters>
      </method>
      <method name="SetUnixFdList" cname="g_dbus_message_set_unix_fd_list">
        <return-type type="void"/>
        <parameters>
          <parameter name="fd_list" type="GUnixFDList*"/>
        </parameters>
      </method>
      <method name="ToBlob" cname="g_dbus_message_to_blob">
        <return-type type="guchar**" array_len="0"/>
        <parameters>
          <parameter name="out_size" type="gsize*"/>
          <parameter name="capabilities" type="GDBusCapabilityFlags"/>
        </parameters>
      </method>
      <method name="ToGerror" cname="g_dbus_message_to_gerror">
        <return-type type="gboolean"/>
      </method>
      <property name="Locked" cname="locked" type="gboolean" readable="true" writable="false"/>
    </object>
    <object name="DBusMethodInvocation" cname="GDBusMethodInvocation" parent="GObject" abstract="" opaque="">
      <method name="GetType" cname="g_dbus_method_invocation_get_type" shared="true">
        <return-type type="GType"/>
      </method>
      <method name="GetConnection" cname="g_dbus_method_invocation_get_connection">
        <return-type type="GDBusConnection*"/>
      </method>
      <method name="GetInterfaceName" cname="g_dbus_method_invocation_get_interface_name">
        <return-type type="const-gchar*"/>
      </method>
      <method name="GetMessage" cname="g_dbus_method_invocation_get_message">
        <return-type type="GDBusMessage*"/>
      </method>
      <method name="GetMethodInfo" cname="g_dbus_method_invocation_get_method_info">
        <return-type type="GDBusMethodInfo*">
          <warning>missing glib:type-name</warning>
        </return-type>
      </method>
      <method name="GetMethodName" cname="g_dbus_method_invocation_get_method_name">
        <return-type type="const-gchar*"/>
      </method>
      <method name="GetObjectPath" cname="g_dbus_method_invocation_get_object_path">
        <return-type type="const-gchar*"/>
      </method>
      <method name="GetParameters" cname="g_dbus_method_invocation_get_parameters">
        <return-type type="GVariant*">
          <warning>missing glib:type-name</warning>
        </return-type>
      </method>
      <method name="GetSender" cname="g_dbus_method_invocation_get_sender">
        <return-type type="const-gchar*"/>
      </method>
      <method name="GetUserData" cname="g_dbus_method_invocation_get_user_data">
        <return-type type="gpointer"/>
      </method>
      <method name="ReturnDbusError" cname="g_dbus_method_invocation_return_dbus_error">
        <return-type type="void"/>
        <parameters>
          <parameter name="error_name" type="const-gchar*"/>
          <parameter name="error_message" type="const-gchar*"/>
        </parameters>
      </method>
      <method name="ReturnError" cname="g_dbus_method_invocation_return_error">
        <return-type type="void"/>
        <parameters>
          <parameter name="domain" type="guint32"/>
          <parameter name="code" type="gint"/>
          <parameter name="format" type="const-gchar*"/>
          <parameter name="var_args" type="va_list"/>
        </parameters>
      </method>
      <method name="ReturnErrorLiteral" cname="g_dbus_method_invocation_return_error_literal">
        <return-type type="void"/>
        <parameters>
          <parameter name="domain" type="guint32"/>
          <parameter name="code" type="gint"/>
          <parameter name="message" type="const-gchar*"/>
        </parameters>
      </method>
      <method name="ReturnErrorValist" cname="g_dbus_method_invocation_return_error_valist">
        <return-type type="void"/>
        <parameters>
          <parameter name="domain" type="guint32"/>
          <parameter name="code" type="gint"/>
          <parameter name="format" type="const-gchar*"/>
          <parameter name="var_args" type="va_list"/>
        </parameters>
      </method>
      <method name="ReturnGerror" cname="g_dbus_method_invocation_return_gerror">
        <return-type type="void"/>
        <parameters>
          <parameter name="error" type="GError*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="ReturnValue" cname="g_dbus_method_invocation_return_value">
        <return-type type="void"/>
        <parameters>
          <parameter name="parameters" type="GVariant*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="ReturnValueWithUnixFdList" cname="g_dbus_method_invocation_return_value_with_unix_fd_list">
        <return-type type="void"/>
        <parameters>
          <parameter name="parameters" type="GVariant*">
            <warning>missing glib:type-name</warning>
          </parameter>
          <parameter name="fd_list" type="GUnixFDList*"/>
        </parameters>
      </method>
      <method name="TakeError" cname="g_dbus_method_invocation_take_error">
        <return-type type="void"/>
        <parameters>
          <parameter name="error" type="GError*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
    </object>
    <object name="DBusObjectManagerClient" cname="GDBusObjectManagerClient" parent="GObject" abstract="" opaque="">
      <method name="GetType" cname="g_dbus_object_manager_client_get_type" shared="true">
        <return-type type="GType"/>
      </method>
      <constructor cname="g_dbus_object_manager_client_new_finish">
        <parameters>
          <parameter name="res" type="GAsyncResult*"/>
        </parameters>
      </constructor>
      <constructor cname="g_dbus_object_manager_client_new_for_bus_finish">
        <parameters>
          <parameter name="res" type="GAsyncResult*"/>
        </parameters>
      </constructor>
      <constructor cname="g_dbus_object_manager_client_new_for_bus_sync">
        <parameters>
          <parameter name="bus_type" type="GBusType"/>
          <parameter name="flags" type="GDBusObjectManagerClientFlags"/>
          <parameter name="name" type="const-gchar*"/>
          <parameter name="object_path" type="const-gchar*"/>
          <parameter name="get_proxy_type_func" type="GDBusProxyTypeFunc"/>
          <parameter name="get_proxy_type_user_data" type="gpointer"/>
          <parameter name="get_proxy_type_destroy_notify" type="GDestroyNotify"/>
          <parameter name="cancellable" type="GCancellable*"/>
        </parameters>
      </constructor>
      <constructor cname="g_dbus_object_manager_client_new_sync">
        <parameters>
          <parameter name="connection" type="GDBusConnection*"/>
          <parameter name="flags" type="GDBusObjectManagerClientFlags"/>
          <parameter name="name" type="const-gchar*"/>
          <parameter name="object_path" type="const-gchar*"/>
          <parameter name="get_proxy_type_func" type="GDBusProxyTypeFunc"/>
          <parameter name="get_proxy_type_user_data" type="gpointer"/>
          <parameter name="get_proxy_type_destroy_notify" type="GDestroyNotify"/>
          <parameter name="cancellable" type="GCancellable*"/>
        </parameters>
      </constructor>
      <method name="New" cname="g_dbus_object_manager_client_new" shared="true">
        <return-type type="void"/>
        <parameters>
          <parameter name="connection" type="GDBusConnection*"/>
          <parameter name="flags" type="GDBusObjectManagerClientFlags"/>
          <parameter name="name" type="const-gchar*"/>
          <parameter name="object_path" type="const-gchar*"/>
          <parameter name="get_proxy_type_func" type="GDBusProxyTypeFunc"/>
          <parameter name="get_proxy_type_user_data" type="gpointer"/>
          <parameter name="get_proxy_type_destroy_notify" type="GDestroyNotify"/>
          <parameter name="cancellable" type="GCancellable*"/>
          <parameter name="callback" type="GAsyncReadyCallback"/>
          <parameter name="user_data" type="gpointer"/>
        </parameters>
      </method>
      <method name="NewForBus" cname="g_dbus_object_manager_client_new_for_bus" shared="true">
        <return-type type="void"/>
        <parameters>
          <parameter name="bus_type" type="GBusType"/>
          <parameter name="flags" type="GDBusObjectManagerClientFlags"/>
          <parameter name="name" type="const-gchar*"/>
          <parameter name="object_path" type="const-gchar*"/>
          <parameter name="get_proxy_type_func" type="GDBusProxyTypeFunc"/>
          <parameter name="get_proxy_type_user_data" type="gpointer"/>
          <parameter name="get_proxy_type_destroy_notify" type="GDestroyNotify"/>
          <parameter name="cancellable" type="GCancellable*"/>
          <parameter name="callback" type="GAsyncReadyCallback"/>
          <parameter name="user_data" type="gpointer"/>
        </parameters>
      </method>
      <virtual_method name="InterfaceProxyPropertiesChanged" cname="interface_proxy_properties_changed">
        <return-type type="void"/>
        <parameters>
          <parameter name="dbus_object_manager_client" type="GDBusObjectManagerClient*"/>
          <parameter name="object_proxy" type="GDBusObjectProxy*"/>
          <parameter name="interface_proxy" type="GDBusProxy*"/>
          <parameter name="changed_properties" type="GVariant*">
            <warning>missing glib:type-name</warning>
          </parameter>
          <parameter name="invalidated_properties" type="const-gchar*"/>
        </parameters>
      </virtual_method>
      <virtual_method name="InterfaceProxySignal" cname="interface_proxy_signal">
        <return-type type="void"/>
        <parameters>
          <parameter name="dbus_object_manager_client" type="GDBusObjectManagerClient*"/>
          <parameter name="object_proxy" type="GDBusObjectProxy*"/>
          <parameter name="interface_proxy" type="GDBusProxy*"/>
          <parameter name="sender_name" type="const-gchar*"/>
          <parameter name="signal_name" type="const-gchar*"/>
          <parameter name="parameters" type="GVariant*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </virtual_method>
      <method name="GetConnection" cname="g_dbus_object_manager_client_get_connection">
        <return-type type="GDBusConnection*"/>
      </method>
      <method name="GetFlags" cname="g_dbus_object_manager_client_get_flags">
        <return-type type="GDBusObjectManagerClientFlags"/>
      </method>
      <method name="GetName" cname="g_dbus_object_manager_client_get_name">
        <return-type type="const-gchar*"/>
      </method>
      <method name="GetNameOwner" cname="g_dbus_object_manager_client_get_name_owner">
        <return-type type="gchar*"/>
      </method>
      <property name="BusType" cname="bus-type" type="GBusType" readable="true" writable="true"/>
      <property name="Connection" cname="connection" type="GDBusConnection*" readable="true" writable="true"/>
      <property name="Flags" cname="flags" type="GDBusObjectManagerClientFlags" readable="true" writable="true"/>
      <property name="GetProxyTypeDestroyNotify" cname="get-proxy-type-destroy-notify" type="gpointer" readable="true" writable="true"/>
      <property name="GetProxyTypeFunc" cname="get-proxy-type-func" type="gpointer" readable="true" writable="true"/>
      <property name="GetProxyTypeUserData" cname="get-proxy-type-user-data" type="gpointer" readable="true" writable="true"/>
      <property name="Name" cname="name" type="gchar*" readable="true" writable="true"/>
      <property name="NameOwner" cname="name-owner" type="gchar*" readable="true" writable="false"/>
      <property name="ObjectPath" cname="object-path" type="gchar*" readable="true" writable="true"/>
    </object>
    <object name="DBusObjectManagerServer" cname="GDBusObjectManagerServer" parent="GObject" abstract="" opaque="">
      <method name="GetType" cname="g_dbus_object_manager_server_get_type" shared="true">
        <return-type type="GType"/>
      </method>
      <constructor cname="g_dbus_object_manager_server_new">
        <parameters>
          <parameter name="object_path" type="const-gchar*"/>
        </parameters>
      </constructor>
      <method name="Export" cname="g_dbus_object_manager_server_export">
        <return-type type="void"/>
        <parameters>
          <parameter name="_object" type="GDBusObjectSkeleton*"/>
        </parameters>
      </method>
      <method name="ExportUniquely" cname="g_dbus_object_manager_server_export_uniquely">
        <return-type type="void"/>
        <parameters>
          <parameter name="_object" type="GDBusObjectSkeleton*"/>
        </parameters>
      </method>
      <method name="GetConnection" cname="g_dbus_object_manager_server_get_connection">
        <return-type type="GDBusConnection*"/>
      </method>
      <method name="SetConnection" cname="g_dbus_object_manager_server_set_connection">
        <return-type type="void"/>
        <parameters>
          <parameter name="connection" type="GDBusConnection*"/>
        </parameters>
      </method>
      <method name="Unexport" cname="g_dbus_object_manager_server_unexport">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="object_path" type="const-gchar*"/>
        </parameters>
      </method>
      <property name="Connection" cname="connection" type="GDBusConnection*" readable="true" writable="true"/>
      <property name="ObjectPath" cname="object-path" type="gchar*" readable="true" writable="true"/>
    </object>
    <object name="DBusObjectProxy" cname="GDBusObjectProxy" parent="GObject" abstract="" opaque="">
      <method name="GetType" cname="g_dbus_object_proxy_get_type" shared="true">
        <return-type type="GType"/>
      </method>
      <constructor cname="g_dbus_object_proxy_new">
        <parameters>
          <parameter name="connection" type="GDBusConnection*"/>
          <parameter name="object_path" type="const-gchar*"/>
        </parameters>
      </constructor>
      <method name="GetConnection" cname="g_dbus_object_proxy_get_connection">
        <return-type type="GDBusConnection*"/>
      </method>
      <property name="GConnection" cname="g-connection" type="GDBusConnection*" readable="true" writable="true"/>
      <property name="GObjectPath" cname="g-object-path" type="gchar*" readable="true" writable="true"/>
    </object>
    <object name="DBusObjectSkeleton" cname="GDBusObjectSkeleton" parent="GObject" abstract="" opaque="">
      <method name="GetType" cname="g_dbus_object_skeleton_get_type" shared="true">
        <return-type type="GType"/>
      </method>
      <constructor cname="g_dbus_object_skeleton_new">
        <parameters>
          <parameter name="object_path" type="const-gchar*"/>
        </parameters>
      </constructor>
      <virtual_method name="AuthorizeMethod" cname="authorize_method">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="dbus_object_skeleton" type="GDBusObjectSkeleton*"/>
          <parameter name="interface_" type="GDBusInterfaceSkeleton*"/>
          <parameter name="invocation" type="GDBusMethodInvocation*"/>
        </parameters>
      </virtual_method>
      <method name="AddInterface" cname="g_dbus_object_skeleton_add_interface">
        <return-type type="void"/>
        <parameters>
          <parameter name="interface_" type="GDBusInterfaceSkeleton*"/>
        </parameters>
      </method>
      <method name="Flush" cname="g_dbus_object_skeleton_flush">
        <return-type type="void"/>
      </method>
      <method name="RemoveInterface" cname="g_dbus_object_skeleton_remove_interface">
        <return-type type="void"/>
        <parameters>
          <parameter name="interface_" type="GDBusInterfaceSkeleton*"/>
        </parameters>
      </method>
      <method name="RemoveInterfaceByName" cname="g_dbus_object_skeleton_remove_interface_by_name">
        <return-type type="void"/>
        <parameters>
          <parameter name="interface_name" type="const-gchar*"/>
        </parameters>
      </method>
      <method name="SetObjectPath" cname="g_dbus_object_skeleton_set_object_path">
        <return-type type="void"/>
        <parameters>
          <parameter name="object_path" type="const-gchar*"/>
        </parameters>
      </method>
      <property name="GObjectPath" cname="g-object-path" type="gchar*" readable="true" writable="true"/>
    </object>
    <object name="DBusProxy" cname="GDBusProxy" parent="GObject" abstract="" opaque="">
      <method name="GetType" cname="g_dbus_proxy_get_type" shared="true">
        <return-type type="GType"/>
      </method>
      <constructor cname="g_dbus_proxy_new_finish">
        <parameters>
          <parameter name="res" type="GAsyncResult*"/>
        </parameters>
      </constructor>
      <constructor cname="g_dbus_proxy_new_for_bus_finish">
        <parameters>
          <parameter name="res" type="GAsyncResult*"/>
        </parameters>
      </constructor>
      <constructor cname="g_dbus_proxy_new_for_bus_sync">
        <parameters>
          <parameter name="bus_type" type="GBusType"/>
          <parameter name="flags" type="GDBusProxyFlags"/>
          <parameter name="info" type="GDBusInterfaceInfo*">
            <warning>missing glib:type-name</warning>
          </parameter>
          <parameter name="name" type="const-gchar*"/>
          <parameter name="object_path" type="const-gchar*"/>
          <parameter name="interface_name" type="const-gchar*"/>
          <parameter name="cancellable" type="GCancellable*"/>
        </parameters>
      </constructor>
      <constructor cname="g_dbus_proxy_new_sync">
        <parameters>
          <parameter name="connection" type="GDBusConnection*"/>
          <parameter name="flags" type="GDBusProxyFlags"/>
          <parameter name="info" type="GDBusInterfaceInfo*">
            <warning>missing glib:type-name</warning>
          </parameter>
          <parameter name="name" type="const-gchar*"/>
          <parameter name="object_path" type="const-gchar*"/>
          <parameter name="interface_name" type="const-gchar*"/>
          <parameter name="cancellable" type="GCancellable*"/>
        </parameters>
      </constructor>
      <method name="New" cname="g_dbus_proxy_new" shared="true">
        <return-type type="void"/>
        <parameters>
          <parameter name="connection" type="GDBusConnection*"/>
          <parameter name="flags" type="GDBusProxyFlags"/>
          <parameter name="info" type="GDBusInterfaceInfo*">
            <warning>missing glib:type-name</warning>
          </parameter>
          <parameter name="name" type="const-gchar*"/>
          <parameter name="object_path" type="const-gchar*"/>
          <parameter name="interface_name" type="const-gchar*"/>
          <parameter name="cancellable" type="GCancellable*"/>
          <parameter name="callback" type="GAsyncReadyCallback"/>
          <parameter name="user_data" type="gpointer"/>
        </parameters>
      </method>
      <method name="NewForBus" cname="g_dbus_proxy_new_for_bus" shared="true">
        <return-type type="void"/>
        <parameters>
          <parameter name="bus_type" type="GBusType"/>
          <parameter name="flags" type="GDBusProxyFlags"/>
          <parameter name="info" type="GDBusInterfaceInfo*">
            <warning>missing glib:type-name</warning>
          </parameter>
          <parameter name="name" type="const-gchar*"/>
          <parameter name="object_path" type="const-gchar*"/>
          <parameter name="interface_name" type="const-gchar*"/>
          <parameter name="cancellable" type="GCancellable*"/>
          <parameter name="callback" type="GAsyncReadyCallback"/>
          <parameter name="user_data" type="gpointer"/>
        </parameters>
      </method>
      <virtual_method name="GPropertiesChanged" cname="g_properties_changed">
        <return-type type="void"/>
        <parameters>
          <parameter name="dbus_proxy" type="GDBusProxy*"/>
          <parameter name="changed_properties" type="GVariant*">
            <warning>missing glib:type-name</warning>
          </parameter>
          <parameter name="invalidated_properties" type="const-gchar*"/>
        </parameters>
      </virtual_method>
      <virtual_method name="GSignal" cname="g_signal">
        <return-type type="void"/>
        <parameters>
          <parameter name="dbus_proxy" type="GDBusProxy*"/>
          <parameter name="sender_name" type="const-gchar*"/>
          <parameter name="signal_name" type="const-gchar*"/>
          <parameter name="parameters" type="GVariant*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </virtual_method>
      <method name="Call" cname="g_dbus_proxy_call">
        <return-type type="void"/>
        <parameters>
          <parameter name="method_name" type="const-gchar*"/>
          <parameter name="parameters" type="GVariant*">
            <warning>missing glib:type-name</warning>
          </parameter>
          <parameter name="flags" type="GDBusCallFlags"/>
          <parameter name="timeout_msec" type="gint"/>
          <parameter name="cancellable" type="GCancellable*"/>
          <parameter name="callback" type="GAsyncReadyCallback"/>
          <parameter name="user_data" type="gpointer"/>
        </parameters>
      </method>
      <method name="CallFinish" cname="g_dbus_proxy_call_finish">
        <return-type type="GVariant*">
          <warning>missing glib:type-name</warning>
        </return-type>
        <parameters>
          <parameter name="res" type="GAsyncResult*"/>
        </parameters>
      </method>
      <method name="CallSync" cname="g_dbus_proxy_call_sync">
        <return-type type="GVariant*">
          <warning>missing glib:type-name</warning>
        </return-type>
        <parameters>
          <parameter name="method_name" type="const-gchar*"/>
          <parameter name="parameters" type="GVariant*">
            <warning>missing glib:type-name</warning>
          </parameter>
          <parameter name="flags" type="GDBusCallFlags"/>
          <parameter name="timeout_msec" type="gint"/>
          <parameter name="cancellable" type="GCancellable*"/>
        </parameters>
      </method>
      <method name="CallWithUnixFdList" cname="g_dbus_proxy_call_with_unix_fd_list">
        <return-type type="void"/>
        <parameters>
          <parameter name="method_name" type="const-gchar*"/>
          <parameter name="parameters" type="GVariant*">
            <warning>missing glib:type-name</warning>
          </parameter>
          <parameter name="flags" type="GDBusCallFlags"/>
          <parameter name="timeout_msec" type="gint"/>
          <parameter name="fd_list" type="GUnixFDList*"/>
          <parameter name="cancellable" type="GCancellable*"/>
          <parameter name="callback" type="GAsyncReadyCallback"/>
          <parameter name="user_data" type="gpointer"/>
        </parameters>
      </method>
      <method name="CallWithUnixFdListFinish" cname="g_dbus_proxy_call_with_unix_fd_list_finish">
        <return-type type="GVariant*">
          <warning>missing glib:type-name</warning>
        </return-type>
        <parameters>
          <parameter name="out_fd_list" type="GUnixFDList*"/>
          <parameter name="res" type="GAsyncResult*"/>
        </parameters>
      </method>
      <method name="CallWithUnixFdListSync" cname="g_dbus_proxy_call_with_unix_fd_list_sync">
        <return-type type="GVariant*">
          <warning>missing glib:type-name</warning>
        </return-type>
        <parameters>
          <parameter name="method_name" type="const-gchar*"/>
          <parameter name="parameters" type="GVariant*">
            <warning>missing glib:type-name</warning>
          </parameter>
          <parameter name="flags" type="GDBusCallFlags"/>
          <parameter name="timeout_msec" type="gint"/>
          <parameter name="fd_list" type="GUnixFDList*"/>
          <parameter name="out_fd_list" type="GUnixFDList*"/>
          <parameter name="cancellable" type="GCancellable*"/>
        </parameters>
      </method>
      <method name="GetCachedProperty" cname="g_dbus_proxy_get_cached_property">
        <return-type type="GVariant*">
          <warning>missing glib:type-name</warning>
        </return-type>
        <parameters>
          <parameter name="property_name" type="const-gchar*"/>
        </parameters>
      </method>
      <method name="GetCachedPropertyNames" cname="g_dbus_proxy_get_cached_property_names">
        <return-type type="gchar***" array="true"/>
      </method>
      <method name="GetConnection" cname="g_dbus_proxy_get_connection">
        <return-type type="GDBusConnection*"/>
      </method>
      <method name="GetDefaultTimeout" cname="g_dbus_proxy_get_default_timeout">
        <return-type type="gint"/>
      </method>
      <method name="GetFlags" cname="g_dbus_proxy_get_flags">
        <return-type type="GDBusProxyFlags"/>
      </method>
      <method name="GetInterfaceInfo" cname="g_dbus_proxy_get_interface_info">
        <return-type type="GDBusInterfaceInfo*">
          <warning>missing glib:type-name</warning>
        </return-type>
      </method>
      <method name="GetInterfaceName" cname="g_dbus_proxy_get_interface_name">
        <return-type type="const-gchar*"/>
      </method>
      <method name="GetName" cname="g_dbus_proxy_get_name">
        <return-type type="const-gchar*"/>
      </method>
      <method name="GetNameOwner" cname="g_dbus_proxy_get_name_owner">
        <return-type type="gchar*"/>
      </method>
      <method name="GetObjectPath" cname="g_dbus_proxy_get_object_path">
        <return-type type="const-gchar*"/>
      </method>
      <method name="SetCachedProperty" cname="g_dbus_proxy_set_cached_property">
        <return-type type="void"/>
        <parameters>
          <parameter name="property_name" type="const-gchar*"/>
          <parameter name="value" type="GVariant*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="SetDefaultTimeout" cname="g_dbus_proxy_set_default_timeout">
        <return-type type="void"/>
        <parameters>
          <parameter name="timeout_msec" type="gint"/>
        </parameters>
      </method>
      <method name="SetInterfaceInfo" cname="g_dbus_proxy_set_interface_info">
        <return-type type="void"/>
        <parameters>
          <parameter name="info" type="GDBusInterfaceInfo*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <property name="GBusType" cname="g-bus-type" type="GBusType" readable="true" writable="true"/>
      <property name="GConnection" cname="g-connection" type="GDBusConnection*" readable="true" writable="true"/>
      <property name="GDefaultTimeout" cname="g-default-timeout" type="gint" readable="true" writable="true"/>
      <property name="GFlags" cname="g-flags" type="GDBusProxyFlags" readable="true" writable="true"/>
      <property name="GInterfaceInfo" cname="g-interface-info" type="GDBusInterfaceInfo*" readable="true" writable="true"/>
      <property name="GInterfaceName" cname="g-interface-name" type="gchar*" readable="true" writable="true"/>
      <property name="GName" cname="g-name" type="gchar*" readable="true" writable="true"/>
      <property name="GNameOwner" cname="g-name-owner" type="gchar*" readable="true" writable="false"/>
      <property name="GObjectPath" cname="g-object-path" type="gchar*" readable="true" writable="true"/>
    </object>
    <object name="DBusServer" cname="GDBusServer" parent="GObject" abstract="" opaque="">
      <method name="GetType" cname="g_dbus_server_get_type" shared="true">
        <return-type type="GType"/>
      </method>
      <constructor cname="g_dbus_server_new_sync">
        <parameters>
          <parameter name="address" type="const-gchar*"/>
          <parameter name="flags" type="GDBusServerFlags"/>
          <parameter name="guid" type="const-gchar*"/>
          <parameter name="observer" type="GDBusAuthObserver*"/>
          <parameter name="cancellable" type="GCancellable*"/>
        </parameters>
      </constructor>
      <method name="GetClientAddress" cname="g_dbus_server_get_client_address">
        <return-type type="const-gchar*"/>
      </method>
      <method name="GetFlags" cname="g_dbus_server_get_flags">
        <return-type type="GDBusServerFlags"/>
      </method>
      <method name="GetGuid" cname="g_dbus_server_get_guid">
        <return-type type="const-gchar*"/>
      </method>
      <method name="IsActive" cname="g_dbus_server_is_active">
        <return-type type="gboolean"/>
      </method>
      <method name="Start" cname="g_dbus_server_start">
        <return-type type="void"/>
      </method>
      <method name="Stop" cname="g_dbus_server_stop">
        <return-type type="void"/>
      </method>
      <property name="Active" cname="active" type="gboolean" readable="true" writable="false"/>
      <property name="Address" cname="address" type="gchar*" readable="true" writable="true"/>
      <property name="AuthenticationObserver" cname="authentication-observer" type="GDBusAuthObserver*" readable="true" writable="true"/>
      <property name="ClientAddress" cname="client-address" type="gchar*" readable="true" writable="false"/>
      <property name="Flags" cname="flags" type="GDBusServerFlags" readable="true" writable="true"/>
      <property name="Guid" cname="guid" type="gchar*" readable="true" writable="true"/>
      <signal name="NewConnection" cname="new-connection">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="dbusserver" type="GDBusServer**"/>
          <parameter name="connection" type="GDBusConnection*"/>
        </parameters>
      </signal>
    </object>
    <object name="DataInputStream" cname="GDataInputStream" parent="GBufferedInputStream" abstract="" opaque="">
      <method name="GetType" cname="g_data_input_stream_get_type" shared="true">
        <return-type type="GType"/>
      </method>
      <constructor cname="g_data_input_stream_new">
        <parameters>
          <parameter name="base_stream" type="GInputStream*"/>
        </parameters>
      </constructor>
      <method name="GetByteOrder" cname="g_data_input_stream_get_byte_order">
        <return-type type="GDataStreamByteOrder"/>
      </method>
      <method name="GetNewlineType" cname="g_data_input_stream_get_newline_type">
        <return-type type="GDataStreamNewlineType"/>
      </method>
      <method name="ReadByte" cname="g_data_input_stream_read_byte">
        <return-type type="guint8"/>
        <parameters>
          <parameter name="cancellable" type="GCancellable*"/>
        </parameters>
      </method>
      <method name="ReadInt16" cname="g_data_input_stream_read_int16">
        <return-type type="gint16"/>
        <parameters>
          <parameter name="cancellable" type="GCancellable*"/>
        </parameters>
      </method>
      <method name="ReadInt32" cname="g_data_input_stream_read_int32">
        <return-type type="gint32"/>
        <parameters>
          <parameter name="cancellable" type="GCancellable*"/>
        </parameters>
      </method>
      <method name="ReadInt64" cname="g_data_input_stream_read_int64">
        <return-type type="gint64"/>
        <parameters>
          <parameter name="cancellable" type="GCancellable*"/>
        </parameters>
      </method>
      <method name="ReadLine" cname="g_data_input_stream_read_line">
        <return-type type="char**" array="true"/>
        <parameters>
          <parameter name="length" type="gsize*"/>
          <parameter name="cancellable" type="GCancellable*"/>
        </parameters>
      </method>
      <method name="ReadLineAsync" cname="g_data_input_stream_read_line_async">
        <return-type type="void"/>
        <parameters>
          <parameter name="io_priority" type="gint"/>
          <parameter name="cancellable" type="GCancellable*"/>
          <parameter name="callback" type="GAsyncReadyCallback"/>
          <parameter name="user_data" type="gpointer"/>
        </parameters>
      </method>
      <method name="ReadLineFinish" cname="g_data_input_stream_read_line_finish">
        <return-type type="char**" array="true"/>
        <parameters>
          <parameter name="_result" type="GAsyncResult*"/>
          <parameter name="length" type="gsize*"/>
        </parameters>
      </method>
      <method name="ReadLineFinishUtf8" cname="g_data_input_stream_read_line_finish_utf8">
        <return-type type="gchar*"/>
        <parameters>
          <parameter name="_result" type="GAsyncResult*"/>
          <parameter name="length" type="gsize*"/>
        </parameters>
      </method>
      <method name="ReadLineUtf8" cname="g_data_input_stream_read_line_utf8">
        <return-type type="gchar*"/>
        <parameters>
          <parameter name="length" type="gsize*"/>
          <parameter name="cancellable" type="GCancellable*"/>
        </parameters>
      </method>
      <method name="ReadUint16" cname="g_data_input_stream_read_uint16">
        <return-type type="guint16"/>
        <parameters>
          <parameter name="cancellable" type="GCancellable*"/>
        </parameters>
      </method>
      <method name="ReadUint32" cname="g_data_input_stream_read_uint32">
        <return-type type="guint32"/>
        <parameters>
          <parameter name="cancellable" type="GCancellable*"/>
        </parameters>
      </method>
      <method name="ReadUint64" cname="g_data_input_stream_read_uint64">
        <return-type type="guint64"/>
        <parameters>
          <parameter name="cancellable" type="GCancellable*"/>
        </parameters>
      </method>
      <method name="ReadUntil" cname="g_data_input_stream_read_until">
        <return-type type="gchar*"/>
        <parameters>
          <parameter name="stop_chars" type="const-gchar*"/>
          <parameter name="length" type="gsize*"/>
          <parameter name="cancellable" type="GCancellable*"/>
        </parameters>
      </method>
      <method name="ReadUntilAsync" cname="g_data_input_stream_read_until_async">
        <return-type type="void"/>
        <parameters>
          <parameter name="stop_chars" type="const-gchar*"/>
          <parameter name="io_priority" type="gint"/>
          <parameter name="cancellable" type="GCancellable*"/>
          <parameter name="callback" type="GAsyncReadyCallback"/>
          <parameter name="user_data" type="gpointer"/>
        </parameters>
      </method>
      <method name="ReadUntilFinish" cname="g_data_input_stream_read_until_finish">
        <return-type type="gchar*"/>
        <parameters>
          <parameter name="_result" type="GAsyncResult*"/>
          <parameter name="length" type="gsize*"/>
        </parameters>
      </method>
      <method name="ReadUpto" cname="g_data_input_stream_read_upto">
        <return-type type="gchar*"/>
        <parameters>
          <parameter name="stop_chars" type="const-gchar*"/>
          <parameter name="stop_chars_len" type="gssize"/>
          <parameter name="length" type="gsize*"/>
          <parameter name="cancellable" type="GCancellable*"/>
        </parameters>
      </method>
      <method name="ReadUptoAsync" cname="g_data_input_stream_read_upto_async">
        <return-type type="void"/>
        <parameters>
          <parameter name="stop_chars" type="const-gchar*"/>
          <parameter name="stop_chars_len" type="gssize"/>
          <parameter name="io_priority" type="gint"/>
          <parameter name="cancellable" type="GCancellable*"/>
          <parameter name="callback" type="GAsyncReadyCallback"/>
          <parameter name="user_data" type="gpointer"/>
        </parameters>
      </method>
      <method name="ReadUptoFinish" cname="g_data_input_stream_read_upto_finish">
        <return-type type="gchar*"/>
        <parameters>
          <parameter name="_result" type="GAsyncResult*"/>
          <parameter name="length" type="gsize*"/>
        </parameters>
      </method>
      <method name="SetByteOrder" cname="g_data_input_stream_set_byte_order">
        <return-type type="void"/>
        <parameters>
          <parameter name="order" type="GDataStreamByteOrder"/>
        </parameters>
      </method>
      <method name="SetNewlineType" cname="g_data_input_stream_set_newline_type">
        <return-type type="void"/>
        <parameters>
          <parameter name="type" type="GDataStreamNewlineType"/>
        </parameters>
      </method>
      <property name="ByteOrder" cname="byte-order" type="GDataStreamByteOrder" readable="true" writable="true"/>
      <property name="NewlineType" cname="newline-type" type="GDataStreamNewlineType" readable="true" writable="true"/>
      <field cname="parent_instance" name="ParentInstance" type="GBufferedInputStream*"/>
    </object>
    <object name="DataOutputStream" cname="GDataOutputStream" parent="GFilterOutputStream" abstract="" opaque="">
      <method name="GetType" cname="g_data_output_stream_get_type" shared="true">
        <return-type type="GType"/>
      </method>
      <constructor cname="g_data_output_stream_new">
        <parameters>
          <parameter name="base_stream" type="GOutputStream*"/>
        </parameters>
      </constructor>
      <method name="GetByteOrder" cname="g_data_output_stream_get_byte_order">
        <return-type type="GDataStreamByteOrder"/>
      </method>
      <method name="PutByte" cname="g_data_output_stream_put_byte">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="data" type="guint8"/>
          <parameter name="cancellable" type="GCancellable*"/>
        </parameters>
      </method>
      <method name="PutInt16" cname="g_data_output_stream_put_int16">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="data" type="gint16"/>
          <parameter name="cancellable" type="GCancellable*"/>
        </parameters>
      </method>
      <method name="PutInt32" cname="g_data_output_stream_put_int32">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="data" type="gint32"/>
          <parameter name="cancellable" type="GCancellable*"/>
        </parameters>
      </method>
      <method name="PutInt64" cname="g_data_output_stream_put_int64">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="data" type="gint64"/>
          <parameter name="cancellable" type="GCancellable*"/>
        </parameters>
      </method>
      <method name="PutString" cname="g_data_output_stream_put_string">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="str" type="const-gchar*"/>
          <parameter name="cancellable" type="GCancellable*"/>
        </parameters>
      </method>
      <method name="PutUint16" cname="g_data_output_stream_put_uint16">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="data" type="guint16"/>
          <parameter name="cancellable" type="GCancellable*"/>
        </parameters>
      </method>
      <method name="PutUint32" cname="g_data_output_stream_put_uint32">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="data" type="guint32"/>
          <parameter name="cancellable" type="GCancellable*"/>
        </parameters>
      </method>
      <method name="PutUint64" cname="g_data_output_stream_put_uint64">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="data" type="guint64"/>
          <parameter name="cancellable" type="GCancellable*"/>
        </parameters>
      </method>
      <method name="SetByteOrder" cname="g_data_output_stream_set_byte_order">
        <return-type type="void"/>
        <parameters>
          <parameter name="order" type="GDataStreamByteOrder"/>
        </parameters>
      </method>
      <property name="ByteOrder" cname="byte-order" type="GDataStreamByteOrder" readable="true" writable="true"/>
      <field cname="parent_instance" name="ParentInstance" type="GFilterOutputStream*"/>
    </object>
    <object name="DesktopAppInfo" cname="GDesktopAppInfo" parent="GObject" abstract="" opaque="">
      <method name="GetType" cname="g_desktop_app_info_get_type" shared="true">
        <return-type type="GType"/>
      </method>
      <constructor cname="g_desktop_app_info_new">
        <parameters>
          <parameter name="desktop_id" type="const-gchar*"/>
        </parameters>
      </constructor>
      <constructor cname="g_desktop_app_info_new_from_filename">
        <parameters>
          <parameter name="filename" type="const-gchar*"/>
        </parameters>
      </constructor>
      <constructor cname="g_desktop_app_info_new_from_keyfile">
        <parameters>
          <parameter name="key_file" type="GKeyFile*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </constructor>
      <method name="SetDesktopEnv" cname="g_desktop_app_info_set_desktop_env" shared="true">
        <return-type type="void"/>
        <parameters>
          <parameter name="desktop_env" type="const-gchar*"/>
        </parameters>
      </method>
      <method name="GetCategories" cname="g_desktop_app_info_get_categories">
        <return-type type="const-gchar*"/>
      </method>
      <method name="GetFilename" cname="g_desktop_app_info_get_filename">
        <return-type type="const-gchar*"/>
      </method>
      <method name="GetGenericName" cname="g_desktop_app_info_get_generic_name">
        <return-type type="const-gchar*"/>
      </method>
      <method name="GetIsHidden" cname="g_desktop_app_info_get_is_hidden">
        <return-type type="gboolean"/>
      </method>
      <method name="GetKeywords" cname="g_desktop_app_info_get_keywords">
        <return-type type="char**" array="true"/>
      </method>
      <method name="GetNodisplay" cname="g_desktop_app_info_get_nodisplay">
        <return-type type="gboolean"/>
      </method>
      <method name="GetShowIn" cname="g_desktop_app_info_get_show_in">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="desktop_env" type="const-gchar*"/>
        </parameters>
      </method>
      <method name="LaunchUrisAsManager" cname="g_desktop_app_info_launch_uris_as_manager">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="uris" type="GList*">
            <warning>missing glib:type-name</warning>
          </parameter>
          <parameter name="launch_context" type="GAppLaunchContext*"/>
          <parameter name="spawn_flags" type="GSpawnFlags"/>
          <parameter name="user_setup" type="GSpawnChildSetupFunc"/>
          <parameter name="user_setup_data" type="gpointer"/>
          <parameter name="pid_callback" type="GDesktopAppLaunchCallback"/>
          <parameter name="pid_callback_data" type="gpointer"/>
        </parameters>
      </method>
      <property name="Filename" cname="filename" type="gchar*" readable="true" writable="true"/>
    </object>
    <object name="Emblem" cname="GEmblem" parent="GObject" abstract="" opaque="">
      <method name="GetType" cname="g_emblem_get_type" shared="true">
        <return-type type="GType"/>
      </method>
      <constructor cname="g_emblem_new">
        <parameters>
          <parameter name="icon" type="GIcon*"/>
        </parameters>
      </constructor>
      <constructor cname="g_emblem_new_with_origin">
        <parameters>
          <parameter name="icon" type="GIcon*"/>
          <parameter name="origin" type="GEmblemOrigin"/>
        </parameters>
      </constructor>
      <method name="GetIcon" cname="g_emblem_get_icon">
        <return-type type="GIcon*"/>
      </method>
      <method name="GetOrigin" cname="g_emblem_get_origin">
        <return-type type="GEmblemOrigin"/>
      </method>
      <property name="Icon" cname="icon" type="GObject*" readable="true" writable="true"/>
      <property name="Origin" cname="origin" type="GEmblemOrigin" readable="true" writable="true"/>
    </object>
    <object name="EmblemedIcon" cname="GEmblemedIcon" parent="GObject" abstract="" opaque="">
      <method name="GetType" cname="g_emblemed_icon_get_type" shared="true">
        <return-type type="GType"/>
      </method>
      <constructor cname="g_emblemed_icon_new">
        <parameters>
          <parameter name="icon" type="GIcon*"/>
          <parameter name="emblem" type="GEmblem*"/>
        </parameters>
      </constructor>
      <method name="AddEmblem" cname="g_emblemed_icon_add_emblem">
        <return-type type="void"/>
        <parameters>
          <parameter name="emblem" type="GEmblem*"/>
        </parameters>
      </method>
      <method name="ClearEmblems" cname="g_emblemed_icon_clear_emblems">
        <return-type type="void"/>
      </method>
      <method name="GetEmblems" cname="g_emblemed_icon_get_emblems">
        <return-type type="GList*">
          <warning>missing glib:type-name</warning>
        </return-type>
      </method>
      <method name="GetIcon" cname="g_emblemed_icon_get_icon">
        <return-type type="GIcon*"/>
      </method>
      <property name="Gicon" cname="gicon" type="GIcon*" readable="true" writable="true"/>
      <field cname="parent_instance" name="ParentInstance" type="GObject*"/>
    </object>
    <object name="FileEnumerator" cname="GFileEnumerator" parent="GObject" abstract="" opaque="">
      <method name="GetType" cname="g_file_enumerator_get_type" shared="true">
        <return-type type="GType"/>
      </method>
      <virtual_method name="CloseAsync" cname="close_async">
        <return-type type="void"/>
        <parameters>
          <parameter name="file_enumerator" type="GFileEnumerator*"/>
          <parameter name="io_priority" type="gint"/>
          <parameter name="cancellable" type="GCancellable*"/>
          <parameter name="callback" type="GAsyncReadyCallback"/>
          <parameter name="user_data" type="gpointer"/>
        </parameters>
      </virtual_method>
      <virtual_method name="CloseFinish" cname="close_finish">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="file_enumerator" type="GFileEnumerator*"/>
          <parameter name="_result" type="GAsyncResult*"/>
        </parameters>
      </virtual_method>
      <virtual_method name="CloseFn" cname="close_fn">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="file_enumerator" type="GFileEnumerator*"/>
          <parameter name="cancellable" type="GCancellable*"/>
        </parameters>
      </virtual_method>
      <virtual_method name="NextFile" cname="next_file">
        <return-type type="GFileInfo*"/>
        <parameters>
          <parameter name="file_enumerator" type="GFileEnumerator*"/>
          <parameter name="cancellable" type="GCancellable*"/>
        </parameters>
      </virtual_method>
      <virtual_method name="NextFilesAsync" cname="next_files_async">
        <return-type type="void"/>
        <parameters>
          <parameter name="file_enumerator" type="GFileEnumerator*"/>
          <parameter name="num_files" type="gint"/>
          <parameter name="io_priority" type="gint"/>
          <parameter name="cancellable" type="GCancellable*"/>
          <parameter name="callback" type="GAsyncReadyCallback"/>
          <parameter name="user_data" type="gpointer"/>
        </parameters>
      </virtual_method>
      <virtual_method name="NextFilesFinish" cname="next_files_finish">
        <return-type type="GList*">
          <warning>missing glib:type-name</warning>
        </return-type>
        <parameters>
          <parameter name="file_enumerator" type="GFileEnumerator*"/>
          <parameter name="_result" type="GAsyncResult*"/>
        </parameters>
      </virtual_method>
      <method name="Close" cname="g_file_enumerator_close">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="cancellable" type="GCancellable*"/>
        </parameters>
      </method>
      <method name="CloseAsync" cname="g_file_enumerator_close_async">
        <return-type type="void"/>
        <parameters>
          <parameter name="io_priority" type="gint"/>
          <parameter name="cancellable" type="GCancellable*"/>
          <parameter name="callback" type="GAsyncReadyCallback"/>
          <parameter name="user_data" type="gpointer"/>
        </parameters>
      </method>
      <method name="CloseFinish" cname="g_file_enumerator_close_finish">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="_result" type="GAsyncResult*"/>
        </parameters>
      </method>
      <method name="GetContainer" cname="g_file_enumerator_get_container">
        <return-type type="GFile*"/>
      </method>
      <method name="HasPending" cname="g_file_enumerator_has_pending">
        <return-type type="gboolean"/>
      </method>
      <method name="IsClosed" cname="g_file_enumerator_is_closed">
        <return-type type="gboolean"/>
      </method>
      <method name="NextFile" cname="g_file_enumerator_next_file">
        <return-type type="GFileInfo*"/>
        <parameters>
          <parameter name="cancellable" type="GCancellable*"/>
        </parameters>
      </method>
      <method name="NextFilesAsync" cname="g_file_enumerator_next_files_async">
        <return-type type="void"/>
        <parameters>
          <parameter name="num_files" type="gint"/>
          <parameter name="io_priority" type="gint"/>
          <parameter name="cancellable" type="GCancellable*"/>
          <parameter name="callback" type="GAsyncReadyCallback"/>
          <parameter name="user_data" type="gpointer"/>
        </parameters>
      </method>
      <method name="NextFilesFinish" cname="g_file_enumerator_next_files_finish">
        <return-type type="GList*">
          <warning>missing glib:type-name</warning>
        </return-type>
        <parameters>
          <parameter name="_result" type="GAsyncResult*"/>
        </parameters>
      </method>
      <method name="SetPending" cname="g_file_enumerator_set_pending">
        <return-type type="void"/>
        <parameters>
          <parameter name="pending" type="gboolean"/>
        </parameters>
      </method>
      <property name="Container" cname="container" type="GFile*" readable="true" writable="true"/>
      <field cname="parent_instance" name="ParentInstance" type="GObject*"/>
    </object>
    <object name="FileIOStream" cname="GFileIOStream" parent="GIOStream" abstract="" opaque="">
      <method name="GetType" cname="g_file_io_stream_get_type" shared="true">
        <return-type type="GType"/>
      </method>
      <virtual_method name="CanSeek" cname="can_seek">
        <return-type type="gboolean"/>
      </virtual_method>
      <virtual_method name="CanTruncate" cname="can_truncate">
        <return-type type="gboolean"/>
      </virtual_method>
      <virtual_method name="GetEtag" cname="get_etag">
        <return-type type="gchar*"/>
      </virtual_method>
      <virtual_method name="QueryInfo" cname="query_info">
        <return-type type="GFileInfo*"/>
        <parameters>
          <parameter name="file_io_stream" type="GFileIOStream*"/>
          <parameter name="attributes" type="const-gchar*"/>
          <parameter name="cancellable" type="GCancellable*"/>
        </parameters>
      </virtual_method>
      <virtual_method name="QueryInfoAsync" cname="query_info_async">
        <return-type type="void"/>
        <parameters>
          <parameter name="file_io_stream" type="GFileIOStream*"/>
          <parameter name="attributes" type="const-gchar*"/>
          <parameter name="io_priority" type="gint"/>
          <parameter name="cancellable" type="GCancellable*"/>
          <parameter name="callback" type="GAsyncReadyCallback"/>
          <parameter name="user_data" type="gpointer"/>
        </parameters>
      </virtual_method>
      <virtual_method name="QueryInfoFinish" cname="query_info_finish">
        <return-type type="GFileInfo*"/>
        <parameters>
          <parameter name="file_io_stream" type="GFileIOStream*"/>
          <parameter name="_result" type="GAsyncResult*"/>
        </parameters>
      </virtual_method>
      <virtual_method name="Seek" cname="seek">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="file_io_stream" type="GFileIOStream*"/>
          <parameter name="offset" type="gint64"/>
          <parameter name="type" type="GSeekType"/>
          <parameter name="cancellable" type="GCancellable*"/>
        </parameters>
      </virtual_method>
      <virtual_method name="Tell" cname="tell">
        <return-type type="gint64"/>
      </virtual_method>
      <virtual_method name="TruncateFn" cname="truncate_fn">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="file_io_stream" type="GFileIOStream*"/>
          <parameter name="size" type="gint64"/>
          <parameter name="cancellable" type="GCancellable*"/>
        </parameters>
      </virtual_method>
      <method name="GetEtag" cname="g_file_io_stream_get_etag">
        <return-type type="gchar*"/>
      </method>
      <method name="QueryInfo" cname="g_file_io_stream_query_info">
        <return-type type="GFileInfo*"/>
        <parameters>
          <parameter name="attributes" type="const-gchar*"/>
          <parameter name="cancellable" type="GCancellable*"/>
        </parameters>
      </method>
      <method name="QueryInfoAsync" cname="g_file_io_stream_query_info_async">
        <return-type type="void"/>
        <parameters>
          <parameter name="attributes" type="const-gchar*"/>
          <parameter name="io_priority" type="gint"/>
          <parameter name="cancellable" type="GCancellable*"/>
          <parameter name="callback" type="GAsyncReadyCallback"/>
          <parameter name="user_data" type="gpointer"/>
        </parameters>
      </method>
      <method name="QueryInfoFinish" cname="g_file_io_stream_query_info_finish">
        <return-type type="GFileInfo*"/>
        <parameters>
          <parameter name="_result" type="GAsyncResult*"/>
        </parameters>
      </method>
      <field cname="parent_instance" name="ParentInstance" type="GIOStream*"/>
    </object>
    <object name="FileIcon" cname="GFileIcon" parent="GObject" abstract="" opaque="">
      <method name="GetType" cname="g_file_icon_get_type" shared="true">
        <return-type type="GType"/>
      </method>
      <constructor cname="g_file_icon_new">
        <parameters>
          <parameter name="file" type="GFile*"/>
        </parameters>
      </constructor>
      <method name="GetFile" cname="g_file_icon_get_file">
        <return-type type="GFile*"/>
      </method>
      <property name="File" cname="file" type="GFile*" readable="true" writable="true"/>
    </object>
    <object name="FileInfo" cname="GFileInfo" parent="GObject" abstract="" opaque="">
      <method name="GetType" cname="g_file_info_get_type" shared="true">
        <return-type type="GType"/>
      </method>
      <constructor cname="g_file_info_new" disable_void_ctor=""/>
      <method name="ClearStatus" cname="g_file_info_clear_status">
        <return-type type="void"/>
      </method>
      <method name="CopyInto" cname="g_file_info_copy_into">
        <return-type type="void"/>
        <parameters>
          <parameter name="dest_info" type="GFileInfo*"/>
        </parameters>
      </method>
      <method name="Dup" cname="g_file_info_dup">
        <return-type type="GFileInfo*"/>
      </method>
      <method name="GetAttributeAsString" cname="g_file_info_get_attribute_as_string">
        <return-type type="gchar*"/>
        <parameters>
          <parameter name="attribute" type="const-gchar*"/>
        </parameters>
      </method>
      <method name="GetAttributeBoolean" cname="g_file_info_get_attribute_boolean">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="attribute" type="const-gchar*"/>
        </parameters>
      </method>
      <method name="GetAttributeByteString" cname="g_file_info_get_attribute_byte_string">
        <return-type type="const-gchar*"/>
        <parameters>
          <parameter name="attribute" type="const-gchar*"/>
        </parameters>
      </method>
      <method name="GetAttributeData" cname="g_file_info_get_attribute_data">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="attribute" type="const-gchar*"/>
          <parameter name="type" type="GFileAttributeType"/>
          <parameter name="value_pp" type="gpointer*"/>
          <parameter name="status" type="GFileAttributeStatus"/>
        </parameters>
      </method>
      <method name="GetAttributeInt32" cname="g_file_info_get_attribute_int32">
        <return-type type="gint32"/>
        <parameters>
          <parameter name="attribute" type="const-gchar*"/>
        </parameters>
      </method>
      <method name="GetAttributeInt64" cname="g_file_info_get_attribute_int64">
        <return-type type="gint64"/>
        <parameters>
          <parameter name="attribute" type="const-gchar*"/>
        </parameters>
      </method>
      <method name="GetAttributeObject" cname="g_file_info_get_attribute_object">
        <return-type type="GObject*"/>
        <parameters>
          <parameter name="attribute" type="const-gchar*"/>
        </parameters>
      </method>
      <method name="GetAttributeStatus" cname="g_file_info_get_attribute_status">
        <return-type type="GFileAttributeStatus"/>
        <parameters>
          <parameter name="attribute" type="const-gchar*"/>
        </parameters>
      </method>
      <method name="GetAttributeString" cname="g_file_info_get_attribute_string">
        <return-type type="const-gchar*"/>
        <parameters>
          <parameter name="attribute" type="const-gchar*"/>
        </parameters>
      </method>
      <method name="GetAttributeStringv" cname="g_file_info_get_attribute_stringv">
        <return-type type="char**" array="true"/>
        <parameters>
          <parameter name="attribute" type="const-gchar*"/>
        </parameters>
      </method>
      <method name="GetAttributeType" cname="g_file_info_get_attribute_type">
        <return-type type="GFileAttributeType"/>
        <parameters>
          <parameter name="attribute" type="const-gchar*"/>
        </parameters>
      </method>
      <method name="GetAttributeUint32" cname="g_file_info_get_attribute_uint32">
        <return-type type="guint32"/>
        <parameters>
          <parameter name="attribute" type="const-gchar*"/>
        </parameters>
      </method>
      <method name="GetAttributeUint64" cname="g_file_info_get_attribute_uint64">
        <return-type type="guint64"/>
        <parameters>
          <parameter name="attribute" type="const-gchar*"/>
        </parameters>
      </method>
      <method name="GetContentType" cname="g_file_info_get_content_type">
        <return-type type="const-gchar*"/>
      </method>
      <method name="GetDisplayName" cname="g_file_info_get_display_name">
        <return-type type="const-gchar*"/>
      </method>
      <method name="GetEditName" cname="g_file_info_get_edit_name">
        <return-type type="const-gchar*"/>
      </method>
      <method name="GetEtag" cname="g_file_info_get_etag">
        <return-type type="const-gchar*"/>
      </method>
      <method name="GetFileType" cname="g_file_info_get_file_type">
        <return-type type="GFileType"/>
      </method>
      <method name="GetIcon" cname="g_file_info_get_icon">
        <return-type type="GIcon*"/>
      </method>
      <method name="GetIsBackup" cname="g_file_info_get_is_backup">
        <return-type type="gboolean"/>
      </method>
      <method name="GetIsHidden" cname="g_file_info_get_is_hidden">
        <return-type type="gboolean"/>
      </method>
      <method name="GetIsSymlink" cname="g_file_info_get_is_symlink">
        <return-type type="gboolean"/>
      </method>
      <method name="GetModificationTime" cname="g_file_info_get_modification_time">
        <return-type type="void"/>
        <parameters>
          <parameter name="_result" type="GTimeVal*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="GetName" cname="g_file_info_get_name">
        <return-type type="const-gchar*"/>
      </method>
      <method name="GetSize" cname="g_file_info_get_size">
        <return-type type="gint64"/>
      </method>
      <method name="GetSortOrder" cname="g_file_info_get_sort_order">
        <return-type type="gint32"/>
      </method>
      <method name="GetSymlinkTarget" cname="g_file_info_get_symlink_target">
        <return-type type="const-gchar*"/>
      </method>
      <method name="HasAttribute" cname="g_file_info_has_attribute">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="attribute" type="const-gchar*"/>
        </parameters>
      </method>
      <method name="HasNamespace" cname="g_file_info_has_namespace">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="name_space" type="const-gchar*"/>
        </parameters>
      </method>
      <method name="ListAttributes" cname="g_file_info_list_attributes">
        <return-type type="char***" array="true"/>
        <parameters>
          <parameter name="name_space" type="const-gchar*"/>
        </parameters>
      </method>
      <method name="RemoveAttribute" cname="g_file_info_remove_attribute">
        <return-type type="void"/>
        <parameters>
          <parameter name="attribute" type="const-gchar*"/>
        </parameters>
      </method>
      <method name="SetAttribute" cname="g_file_info_set_attribute">
        <return-type type="void"/>
        <parameters>
          <parameter name="attribute" type="const-gchar*"/>
          <parameter name="type" type="GFileAttributeType"/>
          <parameter name="value_p" type="gpointer"/>
        </parameters>
      </method>
      <method name="SetAttributeBoolean" cname="g_file_info_set_attribute_boolean">
        <return-type type="void"/>
        <parameters>
          <parameter name="attribute" type="const-gchar*"/>
          <parameter name="attr_value" type="gboolean"/>
        </parameters>
      </method>
      <method name="SetAttributeByteString" cname="g_file_info_set_attribute_byte_string">
        <return-type type="void"/>
        <parameters>
          <parameter name="attribute" type="const-gchar*"/>
          <parameter name="attr_value" type="const-gchar*"/>
        </parameters>
      </method>
      <method name="SetAttributeInt32" cname="g_file_info_set_attribute_int32">
        <return-type type="void"/>
        <parameters>
          <parameter name="attribute" type="const-gchar*"/>
          <parameter name="attr_value" type="gint32"/>
        </parameters>
      </method>
      <method name="SetAttributeInt64" cname="g_file_info_set_attribute_int64">
        <return-type type="void"/>
        <parameters>
          <parameter name="attribute" type="const-gchar*"/>
          <parameter name="attr_value" type="gint64"/>
        </parameters>
      </method>
      <method name="SetAttributeMask" cname="g_file_info_set_attribute_mask">
        <return-type type="void"/>
        <parameters>
          <parameter name="mask" type="GFileAttributeMatcher*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="SetAttributeObject" cname="g_file_info_set_attribute_object">
        <return-type type="void"/>
        <parameters>
          <parameter name="attribute" type="const-gchar*"/>
          <parameter name="attr_value" type="GObject*"/>
        </parameters>
      </method>
      <method name="SetAttributeStatus" cname="g_file_info_set_attribute_status">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="attribute" type="const-gchar*"/>
          <parameter name="status" type="GFileAttributeStatus"/>
        </parameters>
      </method>
      <method name="SetAttributeString" cname="g_file_info_set_attribute_string">
        <return-type type="void"/>
        <parameters>
          <parameter name="attribute" type="const-gchar*"/>
          <parameter name="attr_value" type="const-gchar*"/>
        </parameters>
      </method>
      <method name="SetAttributeStringv" cname="g_file_info_set_attribute_stringv">
        <return-type type="void"/>
        <parameters>
          <parameter name="attribute" type="const-gchar*"/>
          <parameter name="attr_value" type="char**" array="true"/>
        </parameters>
      </method>
      <method name="SetAttributeUint32" cname="g_file_info_set_attribute_uint32">
        <return-type type="void"/>
        <parameters>
          <parameter name="attribute" type="const-gchar*"/>
          <parameter name="attr_value" type="guint32"/>
        </parameters>
      </method>
      <method name="SetAttributeUint64" cname="g_file_info_set_attribute_uint64">
        <return-type type="void"/>
        <parameters>
          <parameter name="attribute" type="const-gchar*"/>
          <parameter name="attr_value" type="guint64"/>
        </parameters>
      </method>
      <method name="SetContentType" cname="g_file_info_set_content_type">
        <return-type type="void"/>
        <parameters>
          <parameter name="content_type" type="const-gchar*"/>
        </parameters>
      </method>
      <method name="SetDisplayName" cname="g_file_info_set_display_name">
        <return-type type="void"/>
        <parameters>
          <parameter name="display_name" type="const-gchar*"/>
        </parameters>
      </method>
      <method name="SetEditName" cname="g_file_info_set_edit_name">
        <return-type type="void"/>
        <parameters>
          <parameter name="edit_name" type="const-gchar*"/>
        </parameters>
      </method>
      <method name="SetFileType" cname="g_file_info_set_file_type">
        <return-type type="void"/>
        <parameters>
          <parameter name="type" type="GFileType"/>
        </parameters>
      </method>
      <method name="SetIcon" cname="g_file_info_set_icon">
        <return-type type="void"/>
        <parameters>
          <parameter name="icon" type="GIcon*"/>
        </parameters>
      </method>
      <method name="SetIsHidden" cname="g_file_info_set_is_hidden">
        <return-type type="void"/>
        <parameters>
          <parameter name="is_hidden" type="gboolean"/>
        </parameters>
      </method>
      <method name="SetIsSymlink" cname="g_file_info_set_is_symlink">
        <return-type type="void"/>
        <parameters>
          <parameter name="is_symlink" type="gboolean"/>
        </parameters>
      </method>
      <method name="SetModificationTime" cname="g_file_info_set_modification_time">
        <return-type type="void"/>
        <parameters>
          <parameter name="mtime" type="GTimeVal*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="SetName" cname="g_file_info_set_name">
        <return-type type="void"/>
        <parameters>
          <parameter name="name" type="const-gchar*"/>
        </parameters>
      </method>
      <method name="SetSize" cname="g_file_info_set_size">
        <return-type type="void"/>
        <parameters>
          <parameter name="size" type="gint64"/>
        </parameters>
      </method>
      <method name="SetSortOrder" cname="g_file_info_set_sort_order">
        <return-type type="void"/>
        <parameters>
          <parameter name="sort_order" type="gint32"/>
        </parameters>
      </method>
      <method name="SetSymlinkTarget" cname="g_file_info_set_symlink_target">
        <return-type type="void"/>
        <parameters>
          <parameter name="symlink_target" type="const-gchar*"/>
        </parameters>
      </method>
      <method name="UnsetAttributeMask" cname="g_file_info_unset_attribute_mask">
        <return-type type="void"/>
      </method>
    </object>
    <object name="FileInputStream" cname="GFileInputStream" parent="GInputStream" abstract="" opaque="">
      <method name="GetType" cname="g_file_input_stream_get_type" shared="true">
        <return-type type="GType"/>
      </method>
      <virtual_method name="CanSeek" cname="can_seek">
        <return-type type="gboolean"/>
      </virtual_method>
      <virtual_method name="QueryInfo" cname="query_info">
        <return-type type="GFileInfo*"/>
        <parameters>
          <parameter name="file_input_stream" type="GFileInputStream*"/>
          <parameter name="attributes" type="const-gchar*"/>
          <parameter name="cancellable" type="GCancellable*"/>
        </parameters>
      </virtual_method>
      <virtual_method name="QueryInfoAsync" cname="query_info_async">
        <return-type type="void"/>
        <parameters>
          <parameter name="file_input_stream" type="GFileInputStream*"/>
          <parameter name="attributes" type="const-gchar*"/>
          <parameter name="io_priority" type="gint"/>
          <parameter name="cancellable" type="GCancellable*"/>
          <parameter name="callback" type="GAsyncReadyCallback"/>
          <parameter name="user_data" type="gpointer"/>
        </parameters>
      </virtual_method>
      <virtual_method name="QueryInfoFinish" cname="query_info_finish">
        <return-type type="GFileInfo*"/>
        <parameters>
          <parameter name="file_input_stream" type="GFileInputStream*"/>
          <parameter name="_result" type="GAsyncResult*"/>
        </parameters>
      </virtual_method>
      <virtual_method name="Seek" cname="seek">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="file_input_stream" type="GFileInputStream*"/>
          <parameter name="offset" type="gint64"/>
          <parameter name="type" type="GSeekType"/>
          <parameter name="cancellable" type="GCancellable*"/>
        </parameters>
      </virtual_method>
      <virtual_method name="Tell" cname="tell">
        <return-type type="gint64"/>
      </virtual_method>
      <method name="QueryInfo" cname="g_file_input_stream_query_info">
        <return-type type="GFileInfo*"/>
        <parameters>
          <parameter name="attributes" type="const-gchar*"/>
          <parameter name="cancellable" type="GCancellable*"/>
        </parameters>
      </method>
      <method name="QueryInfoAsync" cname="g_file_input_stream_query_info_async">
        <return-type type="void"/>
        <parameters>
          <parameter name="attributes" type="const-gchar*"/>
          <parameter name="io_priority" type="gint"/>
          <parameter name="cancellable" type="GCancellable*"/>
          <parameter name="callback" type="GAsyncReadyCallback"/>
          <parameter name="user_data" type="gpointer"/>
        </parameters>
      </method>
      <method name="QueryInfoFinish" cname="g_file_input_stream_query_info_finish">
        <return-type type="GFileInfo*"/>
        <parameters>
          <parameter name="_result" type="GAsyncResult*"/>
        </parameters>
      </method>
      <field cname="parent_instance" name="ParentInstance" type="GInputStream*"/>
    </object>
    <object name="FileMonitor" cname="GFileMonitor" parent="GObject" abstract="1" opaque="">
      <method name="GetType" cname="g_file_monitor_get_type" shared="true">
        <return-type type="GType"/>
      </method>
      <virtual_method name="Cancel" cname="cancel">
        <return-type type="gboolean"/>
      </virtual_method>
      <virtual_method name="Changed" cname="changed">
        <return-type type="void"/>
        <parameters>
          <parameter name="file_monitor" type="GFileMonitor*"/>
          <parameter name="file" type="GFile*"/>
          <parameter name="other_file" type="GFile*"/>
          <parameter name="event_type" type="GFileMonitorEvent"/>
        </parameters>
      </virtual_method>
      <method name="Cancel" cname="g_file_monitor_cancel">
        <return-type type="gboolean"/>
      </method>
      <method name="EmitEvent" cname="g_file_monitor_emit_event">
        <return-type type="void"/>
        <parameters>
          <parameter name="child" type="GFile*"/>
          <parameter name="other_file" type="GFile*"/>
          <parameter name="event_type" type="GFileMonitorEvent"/>
        </parameters>
      </method>
      <method name="IsCancelled" cname="g_file_monitor_is_cancelled">
        <return-type type="gboolean"/>
      </method>
      <method name="SetRateLimit" cname="g_file_monitor_set_rate_limit">
        <return-type type="void"/>
        <parameters>
          <parameter name="limit_msecs" type="gint"/>
        </parameters>
      </method>
      <property name="Cancelled" cname="cancelled" type="gboolean" readable="true" writable="false"/>
      <property name="RateLimit" cname="rate-limit" type="gint" readable="true" writable="true"/>
      <field cname="parent_instance" name="ParentInstance" type="GObject*"/>
    </object>
    <object name="FileOutputStream" cname="GFileOutputStream" parent="GOutputStream" abstract="" opaque="">
      <method name="GetType" cname="g_file_output_stream_get_type" shared="true">
        <return-type type="GType"/>
      </method>
      <virtual_method name="CanSeek" cname="can_seek">
        <return-type type="gboolean"/>
      </virtual_method>
      <virtual_method name="CanTruncate" cname="can_truncate">
        <return-type type="gboolean"/>
      </virtual_method>
      <virtual_method name="GetEtag" cname="get_etag">
        <return-type type="gchar*"/>
      </virtual_method>
      <virtual_method name="QueryInfo" cname="query_info">
        <return-type type="GFileInfo*"/>
        <parameters>
          <parameter name="file_output_stream" type="GFileOutputStream*"/>
          <parameter name="attributes" type="const-gchar*"/>
          <parameter name="cancellable" type="GCancellable*"/>
        </parameters>
      </virtual_method>
      <virtual_method name="QueryInfoAsync" cname="query_info_async">
        <return-type type="void"/>
        <parameters>
          <parameter name="file_output_stream" type="GFileOutputStream*"/>
          <parameter name="attributes" type="const-gchar*"/>
          <parameter name="io_priority" type="gint"/>
          <parameter name="cancellable" type="GCancellable*"/>
          <parameter name="callback" type="GAsyncReadyCallback"/>
          <parameter name="user_data" type="gpointer"/>
        </parameters>
      </virtual_method>
      <virtual_method name="QueryInfoFinish" cname="query_info_finish">
        <return-type type="GFileInfo*"/>
        <parameters>
          <parameter name="file_output_stream" type="GFileOutputStream*"/>
          <parameter name="_result" type="GAsyncResult*"/>
        </parameters>
      </virtual_method>
      <virtual_method name="Seek" cname="seek">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="file_output_stream" type="GFileOutputStream*"/>
          <parameter name="offset" type="gint64"/>
          <parameter name="type" type="GSeekType"/>
          <parameter name="cancellable" type="GCancellable*"/>
        </parameters>
      </virtual_method>
      <virtual_method name="Tell" cname="tell">
        <return-type type="gint64"/>
      </virtual_method>
      <virtual_method name="TruncateFn" cname="truncate_fn">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="file_output_stream" type="GFileOutputStream*"/>
          <parameter name="size" type="gint64"/>
          <parameter name="cancellable" type="GCancellable*"/>
        </parameters>
      </virtual_method>
      <method name="GetEtag" cname="g_file_output_stream_get_etag">
        <return-type type="gchar*"/>
      </method>
      <method name="QueryInfo" cname="g_file_output_stream_query_info">
        <return-type type="GFileInfo*"/>
        <parameters>
          <parameter name="attributes" type="const-gchar*"/>
          <parameter name="cancellable" type="GCancellable*"/>
        </parameters>
      </method>
      <method name="QueryInfoAsync" cname="g_file_output_stream_query_info_async">
        <return-type type="void"/>
        <parameters>
          <parameter name="attributes" type="const-gchar*"/>
          <parameter name="io_priority" type="gint"/>
          <parameter name="cancellable" type="GCancellable*"/>
          <parameter name="callback" type="GAsyncReadyCallback"/>
          <parameter name="user_data" type="gpointer"/>
        </parameters>
      </method>
      <method name="QueryInfoFinish" cname="g_file_output_stream_query_info_finish">
        <return-type type="GFileInfo*"/>
        <parameters>
          <parameter name="_result" type="GAsyncResult*"/>
        </parameters>
      </method>
      <field cname="parent_instance" name="ParentInstance" type="GOutputStream*"/>
    </object>
    <object name="FilenameCompleter" cname="GFilenameCompleter" parent="GObject" abstract="" opaque="">
      <method name="GetType" cname="g_filename_completer_get_type" shared="true">
        <return-type type="GType"/>
      </method>
      <constructor cname="g_filename_completer_new" disable_void_ctor=""/>
      <virtual_method name="GotCompletionData" cname="got_completion_data">
        <return-type type="void"/>
      </virtual_method>
      <method name="GetCompletionSuffix" cname="g_filename_completer_get_completion_suffix">
        <return-type type="gchar*"/>
        <parameters>
          <parameter name="initial_text" type="const-gchar*"/>
        </parameters>
      </method>
      <method name="GetCompletions" cname="g_filename_completer_get_completions">
        <return-type type="char***" array="true"/>
        <parameters>
          <parameter name="initial_text" type="const-gchar*"/>
        </parameters>
      </method>
      <method name="SetDirsOnly" cname="g_filename_completer_set_dirs_only">
        <return-type type="void"/>
        <parameters>
          <parameter name="dirs_only" type="gboolean"/>
        </parameters>
      </method>
    </object>
    <object name="FilterInputStream" cname="GFilterInputStream" parent="GInputStream" abstract="1" opaque="">
      <method name="GetType" cname="g_filter_input_stream_get_type" shared="true">
        <return-type type="GType"/>
      </method>
      <method name="GetBaseStream" cname="g_filter_input_stream_get_base_stream">
        <return-type type="GInputStream*"/>
      </method>
      <method name="GetCloseBaseStream" cname="g_filter_input_stream_get_close_base_stream">
        <return-type type="gboolean"/>
      </method>
      <method name="SetCloseBaseStream" cname="g_filter_input_stream_set_close_base_stream">
        <return-type type="void"/>
        <parameters>
          <parameter name="close_base" type="gboolean"/>
        </parameters>
      </method>
      <property name="BaseStream" cname="base-stream" type="GInputStream*" readable="true" writable="true"/>
      <property name="CloseBaseStream" cname="close-base-stream" type="gboolean" readable="true" writable="true"/>
      <field cname="parent_instance" name="ParentInstance" type="GInputStream*"/>
    </object>
    <object name="FilterOutputStream" cname="GFilterOutputStream" parent="GOutputStream" abstract="1" opaque="">
      <method name="GetType" cname="g_filter_output_stream_get_type" shared="true">
        <return-type type="GType"/>
      </method>
      <method name="GetBaseStream" cname="g_filter_output_stream_get_base_stream">
        <return-type type="GOutputStream*"/>
      </method>
      <method name="GetCloseBaseStream" cname="g_filter_output_stream_get_close_base_stream">
        <return-type type="gboolean"/>
      </method>
      <method name="SetCloseBaseStream" cname="g_filter_output_stream_set_close_base_stream">
        <return-type type="void"/>
        <parameters>
          <parameter name="close_base" type="gboolean"/>
        </parameters>
      </method>
      <property name="BaseStream" cname="base-stream" type="GOutputStream*" readable="true" writable="true"/>
      <property name="CloseBaseStream" cname="close-base-stream" type="gboolean" readable="true" writable="true"/>
      <field cname="parent_instance" name="ParentInstance" type="GOutputStream*"/>
    </object>
    <object name="IOModule" cname="GIOModule" parent="GTypeModule" abstract="" opaque="">
      <method name="GetType" cname="g_io_module_get_type" shared="true">
        <return-type type="GType"/>
      </method>
      <constructor cname="g_io_module_new">
        <parameters>
          <parameter name="filename" type="const-gchar*"/>
        </parameters>
      </constructor>
      <method name="Query" cname="g_io_module_query" shared="true">
        <return-type type="char***" array="true"/>
      </method>
      <method name="Load" cname="g_io_module_load">
        <return-type type="void"/>
      </method>
      <method name="Unload" cname="g_io_module_unload">
        <return-type type="void"/>
      </method>
    </object>
    <object name="IOStream" cname="GIOStream" parent="GObject" abstract="1" opaque="">
      <method name="GetType" cname="g_io_stream_get_type" shared="true">
        <return-type type="GType"/>
      </method>
      <method name="SpliceFinish" cname="g_io_stream_splice_finish" shared="true">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="_result" type="GAsyncResult*"/>
        </parameters>
      </method>
      <virtual_method name="CloseAsync" cname="close_async">
        <return-type type="void"/>
        <parameters>
          <parameter name="io_stream" type="GIOStream*"/>
          <parameter name="io_priority" type="gint"/>
          <parameter name="cancellable" type="GCancellable*"/>
          <parameter name="callback" type="GAsyncReadyCallback"/>
          <parameter name="user_data" type="gpointer"/>
        </parameters>
      </virtual_method>
      <virtual_method name="CloseFinish" cname="close_finish">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="io_stream" type="GIOStream*"/>
          <parameter name="_result" type="GAsyncResult*"/>
        </parameters>
      </virtual_method>
      <virtual_method name="CloseFn" cname="close_fn">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="io_stream" type="GIOStream*"/>
          <parameter name="cancellable" type="GCancellable*"/>
        </parameters>
      </virtual_method>
      <virtual_method name="GetInputStream" cname="get_input_stream">
        <return-type type="GInputStream*"/>
      </virtual_method>
      <virtual_method name="GetOutputStream" cname="get_output_stream">
        <return-type type="GOutputStream*"/>
      </virtual_method>
      <method name="ClearPending" cname="g_io_stream_clear_pending">
        <return-type type="void"/>
      </method>
      <method name="Close" cname="g_io_stream_close">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="cancellable" type="GCancellable*"/>
        </parameters>
      </method>
      <method name="CloseAsync" cname="g_io_stream_close_async">
        <return-type type="void"/>
        <parameters>
          <parameter name="io_priority" type="gint"/>
          <parameter name="cancellable" type="GCancellable*"/>
          <parameter name="callback" type="GAsyncReadyCallback"/>
          <parameter name="user_data" type="gpointer"/>
        </parameters>
      </method>
      <method name="CloseFinish" cname="g_io_stream_close_finish">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="_result" type="GAsyncResult*"/>
        </parameters>
      </method>
      <method name="GetInputStream" cname="g_io_stream_get_input_stream">
        <return-type type="GInputStream*"/>
      </method>
      <method name="GetOutputStream" cname="g_io_stream_get_output_stream">
        <return-type type="GOutputStream*"/>
      </method>
      <method name="HasPending" cname="g_io_stream_has_pending">
        <return-type type="gboolean"/>
      </method>
      <method name="IsClosed" cname="g_io_stream_is_closed">
        <return-type type="gboolean"/>
      </method>
      <method name="SetPending" cname="g_io_stream_set_pending">
        <return-type type="gboolean"/>
      </method>
      <method name="SpliceAsync" cname="g_io_stream_splice_async">
        <return-type type="void"/>
        <parameters>
          <parameter name="stream2" type="GIOStream*"/>
          <parameter name="flags" type="GIOStreamSpliceFlags"/>
          <parameter name="io_priority" type="gint"/>
          <parameter name="cancellable" type="GCancellable*"/>
          <parameter name="callback" type="GAsyncReadyCallback"/>
          <parameter name="user_data" type="gpointer"/>
        </parameters>
      </method>
      <property name="Closed" cname="closed" type="gboolean" readable="true" writable="false"/>
      <property name="InputStream" cname="input-stream" type="GInputStream*" readable="true" writable="false"/>
      <property name="OutputStream" cname="output-stream" type="GOutputStream*" readable="true" writable="false"/>
      <field cname="parent_instance" name="ParentInstance" type="GObject*"/>
    </object>
    <object name="InetAddress" cname="GInetAddress" parent="GObject" abstract="" opaque="">
      <method name="GetType" cname="g_inet_address_get_type" shared="true">
        <return-type type="GType"/>
      </method>
      <constructor cname="g_inet_address_new_any">
        <parameters>
          <parameter name="family" type="GSocketFamily"/>
        </parameters>
      </constructor>
      <constructor cname="g_inet_address_new_from_bytes">
        <parameters>
          <parameter name="bytes" type="guint8*" array="true"/>
          <parameter name="family" type="GSocketFamily"/>
        </parameters>
      </constructor>
      <constructor cname="g_inet_address_new_from_string">
        <parameters>
          <parameter name="string" type="const-gchar*"/>
        </parameters>
      </constructor>
      <constructor cname="g_inet_address_new_loopback">
        <parameters>
          <parameter name="family" type="GSocketFamily"/>
        </parameters>
      </constructor>
      <virtual_method name="ToBytes" cname="to_bytes">
        <return-type type="guint8"/>
      </virtual_method>
      <virtual_method name="ToString" cname="to_string">
        <return-type type="gchar*"/>
      </virtual_method>
      <method name="Equal" cname="g_inet_address_equal">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="other_address" type="GInetAddress*"/>
        </parameters>
      </method>
      <method name="GetFamily" cname="g_inet_address_get_family">
        <return-type type="GSocketFamily"/>
      </method>
      <method name="GetIsAny" cname="g_inet_address_get_is_any">
        <return-type type="gboolean"/>
      </method>
      <method name="GetIsLinkLocal" cname="g_inet_address_get_is_link_local">
        <return-type type="gboolean"/>
      </method>
      <method name="GetIsLoopback" cname="g_inet_address_get_is_loopback">
        <return-type type="gboolean"/>
      </method>
      <method name="GetIsMcGlobal" cname="g_inet_address_get_is_mc_global">
        <return-type type="gboolean"/>
      </method>
      <method name="GetIsMcLinkLocal" cname="g_inet_address_get_is_mc_link_local">
        <return-type type="gboolean"/>
      </method>
      <method name="GetIsMcNodeLocal" cname="g_inet_address_get_is_mc_node_local">
        <return-type type="gboolean"/>
      </method>
      <method name="GetIsMcOrgLocal" cname="g_inet_address_get_is_mc_org_local">
        <return-type type="gboolean"/>
      </method>
      <method name="GetIsMcSiteLocal" cname="g_inet_address_get_is_mc_site_local">
        <return-type type="gboolean"/>
      </method>
      <method name="GetIsMulticast" cname="g_inet_address_get_is_multicast">
        <return-type type="gboolean"/>
      </method>
      <method name="GetIsSiteLocal" cname="g_inet_address_get_is_site_local">
        <return-type type="gboolean"/>
      </method>
      <method name="GetNativeSize" cname="g_inet_address_get_native_size">
        <return-type type="gsize"/>
      </method>
      <method name="ToBytes" cname="g_inet_address_to_bytes">
        <return-type type="guint8"/>
      </method>
      <method name="ToString" cname="g_inet_address_to_string">
        <return-type type="gchar*"/>
      </method>
      <property name="Bytes" cname="bytes" type="gpointer" readable="true" writable="true"/>
      <property name="Family" cname="family" type="GSocketFamily" readable="true" writable="true"/>
      <property name="IsAny" cname="is-any" type="gboolean" readable="true" writable="false"/>
      <property name="IsLinkLocal" cname="is-link-local" type="gboolean" readable="true" writable="false"/>
      <property name="IsLoopback" cname="is-loopback" type="gboolean" readable="true" writable="false"/>
      <property name="IsMcGlobal" cname="is-mc-global" type="gboolean" readable="true" writable="false"/>
      <property name="IsMcLinkLocal" cname="is-mc-link-local" type="gboolean" readable="true" writable="false"/>
      <property name="IsMcNodeLocal" cname="is-mc-node-local" type="gboolean" readable="true" writable="false"/>
      <property name="IsMcOrgLocal" cname="is-mc-org-local" type="gboolean" readable="true" writable="false"/>
      <property name="IsMcSiteLocal" cname="is-mc-site-local" type="gboolean" readable="true" writable="false"/>
      <property name="IsMulticast" cname="is-multicast" type="gboolean" readable="true" writable="false"/>
      <property name="IsSiteLocal" cname="is-site-local" type="gboolean" readable="true" writable="false"/>
      <field cname="parent_instance" name="ParentInstance" type="GObject*"/>
    </object>
    <object name="InetAddressMask" cname="GInetAddressMask" parent="GObject" abstract="" opaque="">
      <method name="GetType" cname="g_inet_address_mask_get_type" shared="true">
        <return-type type="GType"/>
      </method>
      <constructor cname="g_inet_address_mask_new">
        <parameters>
          <parameter name="addr" type="GInetAddress*"/>
          <parameter name="length" type="guint"/>
        </parameters>
      </constructor>
      <constructor cname="g_inet_address_mask_new_from_string">
        <parameters>
          <parameter name="mask_string" type="const-gchar*"/>
        </parameters>
      </constructor>
      <method name="Equal" cname="g_inet_address_mask_equal">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="mask2" type="GInetAddressMask*"/>
        </parameters>
      </method>
      <method name="GetAddress" cname="g_inet_address_mask_get_address">
        <return-type type="GInetAddress*"/>
      </method>
      <method name="GetFamily" cname="g_inet_address_mask_get_family">
        <return-type type="GSocketFamily"/>
      </method>
      <method name="GetLength" cname="g_inet_address_mask_get_length">
        <return-type type="guint"/>
      </method>
      <method name="Matches" cname="g_inet_address_mask_matches">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="address" type="GInetAddress*"/>
        </parameters>
      </method>
      <method name="ToString" cname="g_inet_address_mask_to_string">
        <return-type type="gchar*"/>
      </method>
      <property name="Address" cname="address" type="GInetAddress*" readable="true" writable="true"/>
      <property name="Family" cname="family" type="GSocketFamily" readable="true" writable="false"/>
      <property name="Length" cname="length" type="guint" readable="true" writable="true"/>
      <field cname="parent_instance" name="ParentInstance" type="GObject*"/>
    </object>
    <object name="InetSocketAddress" cname="GInetSocketAddress" parent="GSocketAddress" abstract="" opaque="">
      <method name="GetType" cname="g_inet_socket_address_get_type" shared="true">
        <return-type type="GType"/>
      </method>
      <constructor cname="g_inet_socket_address_new">
        <parameters>
          <parameter name="address" type="GInetAddress*"/>
          <parameter name="port" type="guint16"/>
        </parameters>
      </constructor>
      <method name="GetAddress" cname="g_inet_socket_address_get_address">
        <return-type type="GInetAddress*"/>
      </method>
      <method name="GetFlowinfo" cname="g_inet_socket_address_get_flowinfo">
        <return-type type="guint32"/>
      </method>
      <method name="GetPort" cname="g_inet_socket_address_get_port">
        <return-type type="guint16"/>
      </method>
      <method name="GetScopeId" cname="g_inet_socket_address_get_scope_id">
        <return-type type="guint32"/>
      </method>
      <property name="Address" cname="address" type="GInetAddress*" readable="true" writable="true"/>
      <property name="Flowinfo" cname="flowinfo" type="guint" readable="true" writable="true"/>
      <property name="Port" cname="port" type="guint" readable="true" writable="true"/>
      <property name="ScopeId" cname="scope-id" type="guint" readable="true" writable="true"/>
      <field cname="parent_instance" name="ParentInstance" type="GSocketAddress*"/>
    </object>
    <object name="InputStream" cname="GInputStream" parent="GObject" abstract="1" opaque="">
      <method name="GetType" cname="g_input_stream_get_type" shared="true">
        <return-type type="GType"/>
      </method>
      <virtual_method name="CloseAsync" cname="close_async">
        <return-type type="void"/>
        <parameters>
          <parameter name="input_stream" type="GInputStream*"/>
          <parameter name="io_priority" type="gint"/>
          <parameter name="cancellable" type="GCancellable*"/>
          <parameter name="callback" type="GAsyncReadyCallback"/>
          <parameter name="user_data" type="gpointer"/>
        </parameters>
      </virtual_method>
      <virtual_method name="CloseFinish" cname="close_finish">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="input_stream" type="GInputStream*"/>
          <parameter name="_result" type="GAsyncResult*"/>
        </parameters>
      </virtual_method>
      <virtual_method name="CloseFn" cname="close_fn">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="input_stream" type="GInputStream*"/>
          <parameter name="cancellable" type="GCancellable*"/>
        </parameters>
      </virtual_method>
      <virtual_method name="ReadAsync" cname="read_async">
        <return-type type="void"/>
        <parameters>
          <parameter name="input_stream" type="GInputStream*"/>
          <parameter name="buffer" type="gpointer"/>
          <parameter name="count" type="gsize"/>
          <parameter name="io_priority" type="gint"/>
          <parameter name="cancellable" type="GCancellable*"/>
          <parameter name="callback" type="GAsyncReadyCallback"/>
          <parameter name="user_data" type="gpointer"/>
        </parameters>
      </virtual_method>
      <virtual_method name="ReadFinish" cname="read_finish">
        <return-type type="gssize"/>
        <parameters>
          <parameter name="input_stream" type="GInputStream*"/>
          <parameter name="_result" type="GAsyncResult*"/>
        </parameters>
      </virtual_method>
      <virtual_method name="ReadFn" cname="read_fn">
        <return-type type="gssize"/>
        <parameters>
          <parameter name="input_stream" type="GInputStream*"/>
          <parameter name="buffer" type="gpointer"/>
          <parameter name="count" type="gsize"/>
          <parameter name="cancellable" type="GCancellable*"/>
        </parameters>
      </virtual_method>
      <virtual_method name="Skip" cname="skip">
        <return-type type="gssize"/>
        <parameters>
          <parameter name="input_stream" type="GInputStream*"/>
          <parameter name="count" type="gsize"/>
          <parameter name="cancellable" type="GCancellable*"/>
        </parameters>
      </virtual_method>
      <virtual_method name="SkipAsync" cname="skip_async">
        <return-type type="void"/>
        <parameters>
          <parameter name="input_stream" type="GInputStream*"/>
          <parameter name="count" type="gsize"/>
          <parameter name="io_priority" type="gint"/>
          <parameter name="cancellable" type="GCancellable*"/>
          <parameter name="callback" type="GAsyncReadyCallback"/>
          <parameter name="user_data" type="gpointer"/>
        </parameters>
      </virtual_method>
      <virtual_method name="SkipFinish" cname="skip_finish">
        <return-type type="gssize"/>
        <parameters>
          <parameter name="input_stream" type="GInputStream*"/>
          <parameter name="_result" type="GAsyncResult*"/>
        </parameters>
      </virtual_method>
      <method name="ClearPending" cname="g_input_stream_clear_pending">
        <return-type type="void"/>
      </method>
      <method name="Close" cname="g_input_stream_close">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="cancellable" type="GCancellable*"/>
        </parameters>
      </method>
      <method name="CloseAsync" cname="g_input_stream_close_async">
        <return-type type="void"/>
        <parameters>
          <parameter name="io_priority" type="gint"/>
          <parameter name="cancellable" type="GCancellable*"/>
          <parameter name="callback" type="GAsyncReadyCallback"/>
          <parameter name="user_data" type="gpointer"/>
        </parameters>
      </method>
      <method name="CloseFinish" cname="g_input_stream_close_finish">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="_result" type="GAsyncResult*"/>
        </parameters>
      </method>
      <method name="HasPending" cname="g_input_stream_has_pending">
        <return-type type="gboolean"/>
      </method>
      <method name="IsClosed" cname="g_input_stream_is_closed">
        <return-type type="gboolean"/>
      </method>
      <method name="Read" cname="g_input_stream_read">
        <return-type type="gssize"/>
        <parameters>
          <parameter name="buffer" type="gpointer"/>
          <parameter name="count" type="gsize"/>
          <parameter name="cancellable" type="GCancellable*"/>
        </parameters>
      </method>
      <method name="ReadAll" cname="g_input_stream_read_all">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="buffer" type="gpointer"/>
          <parameter name="count" type="gsize"/>
          <parameter name="bytes_read" type="gsize*"/>
          <parameter name="cancellable" type="GCancellable*"/>
        </parameters>
      </method>
      <method name="ReadAsync" cname="g_input_stream_read_async">
        <return-type type="void"/>
        <parameters>
          <parameter name="buffer" type="gpointer"/>
          <parameter name="count" type="gsize"/>
          <parameter name="io_priority" type="gint"/>
          <parameter name="cancellable" type="GCancellable*"/>
          <parameter name="callback" type="GAsyncReadyCallback"/>
          <parameter name="user_data" type="gpointer"/>
        </parameters>
      </method>
      <method name="ReadFinish" cname="g_input_stream_read_finish">
        <return-type type="gssize"/>
        <parameters>
          <parameter name="_result" type="GAsyncResult*"/>
        </parameters>
      </method>
      <method name="SetPending" cname="g_input_stream_set_pending">
        <return-type type="gboolean"/>
      </method>
      <method name="Skip" cname="g_input_stream_skip">
        <return-type type="gssize"/>
        <parameters>
          <parameter name="count" type="gsize"/>
          <parameter name="cancellable" type="GCancellable*"/>
        </parameters>
      </method>
      <method name="SkipAsync" cname="g_input_stream_skip_async">
        <return-type type="void"/>
        <parameters>
          <parameter name="count" type="gsize"/>
          <parameter name="io_priority" type="gint"/>
          <parameter name="cancellable" type="GCancellable*"/>
          <parameter name="callback" type="GAsyncReadyCallback"/>
          <parameter name="user_data" type="gpointer"/>
        </parameters>
      </method>
      <method name="SkipFinish" cname="g_input_stream_skip_finish">
        <return-type type="gssize"/>
        <parameters>
          <parameter name="_result" type="GAsyncResult*"/>
        </parameters>
      </method>
      <field cname="parent_instance" name="ParentInstance" type="GObject*"/>
    </object>
    <object name="MemoryInputStream" cname="GMemoryInputStream" parent="GInputStream" abstract="" opaque="">
      <method name="GetType" cname="g_memory_input_stream_get_type" shared="true">
        <return-type type="GType"/>
      </method>
      <constructor cname="g_memory_input_stream_new" disable_void_ctor=""/>
      <constructor cname="g_memory_input_stream_new_from_data">
        <parameters>
          <parameter name="data" type="void**" array_len="1"/>
          <parameter name="len" type="gssize"/>
          <parameter name="destroy" type="GDestroyNotify"/>
        </parameters>
      </constructor>
      <method name="AddData" cname="g_memory_input_stream_add_data">
        <return-type type="void"/>
        <parameters>
          <parameter name="data" type="void**" array_len="1"/>
          <parameter name="len" type="gssize"/>
          <parameter name="destroy" type="GDestroyNotify"/>
        </parameters>
      </method>
      <field cname="parent_instance" name="ParentInstance" type="GInputStream*"/>
    </object>
    <object name="MemoryOutputStream" cname="GMemoryOutputStream" parent="GOutputStream" abstract="" opaque="">
      <method name="GetType" cname="g_memory_output_stream_get_type" shared="true">
        <return-type type="GType"/>
      </method>
      <constructor cname="g_memory_output_stream_new">
        <parameters>
          <parameter name="data" type="gpointer"/>
          <parameter name="size" type="gsize"/>
          <parameter name="realloc_function" type="GReallocFunc"/>
          <parameter name="destroy_function" type="GDestroyNotify"/>
        </parameters>
      </constructor>
      <method name="GetData" cname="g_memory_output_stream_get_data">
        <return-type type="gpointer"/>
      </method>
      <method name="GetDataSize" cname="g_memory_output_stream_get_data_size">
        <return-type type="gsize"/>
      </method>
      <method name="GetSize" cname="g_memory_output_stream_get_size">
        <return-type type="gsize"/>
      </method>
      <method name="StealData" cname="g_memory_output_stream_steal_data">
        <return-type type="gpointer*"/>
      </method>
      <property name="Data" cname="data" type="gpointer" readable="true" writable="true"/>
      <property name="DataSize" cname="data-size" type="gulong" readable="true" writable="false"/>
      <property name="DestroyFunction" cname="destroy-function" type="gpointer" readable="true" writable="true"/>
      <property name="ReallocFunction" cname="realloc-function" type="gpointer" readable="true" writable="true"/>
      <property name="Size" cname="size" type="gulong" readable="true" writable="true"/>
      <field cname="parent_instance" name="ParentInstance" type="GOutputStream*"/>
    </object>
    <object name="Menu" cname="GMenu" parent="GMenuModel" abstract="" opaque="">
      <method name="GetType" cname="g_menu_get_type" shared="true">
        <return-type type="GType"/>
      </method>
      <constructor cname="g_menu_new" disable_void_ctor=""/>
      <method name="Append" cname="g_menu_append">
        <return-type type="void"/>
        <parameters>
          <parameter name="label" type="const-gchar*"/>
          <parameter name="detailed_action" type="const-gchar*"/>
        </parameters>
      </method>
      <method name="AppendItem" cname="g_menu_append_item">
        <return-type type="void"/>
        <parameters>
          <parameter name="item" type="GMenuItem*"/>
        </parameters>
      </method>
      <method name="AppendSection" cname="g_menu_append_section">
        <return-type type="void"/>
        <parameters>
          <parameter name="label" type="const-gchar*"/>
          <parameter name="section" type="GMenuModel*"/>
        </parameters>
      </method>
      <method name="AppendSubmenu" cname="g_menu_append_submenu">
        <return-type type="void"/>
        <parameters>
          <parameter name="label" type="const-gchar*"/>
          <parameter name="submenu" type="GMenuModel*"/>
        </parameters>
      </method>
      <method name="Freeze" cname="g_menu_freeze">
        <return-type type="void"/>
      </method>
      <method name="Insert" cname="g_menu_insert">
        <return-type type="void"/>
        <parameters>
          <parameter name="position" type="gint"/>
          <parameter name="label" type="const-gchar*"/>
          <parameter name="detailed_action" type="const-gchar*"/>
        </parameters>
      </method>
      <method name="InsertItem" cname="g_menu_insert_item">
        <return-type type="void"/>
        <parameters>
          <parameter name="position" type="gint"/>
          <parameter name="item" type="GMenuItem*"/>
        </parameters>
      </method>
      <method name="InsertSection" cname="g_menu_insert_section">
        <return-type type="void"/>
        <parameters>
          <parameter name="position" type="gint"/>
          <parameter name="label" type="const-gchar*"/>
          <parameter name="section" type="GMenuModel*"/>
        </parameters>
      </method>
      <method name="InsertSubmenu" cname="g_menu_insert_submenu">
        <return-type type="void"/>
        <parameters>
          <parameter name="position" type="gint"/>
          <parameter name="label" type="const-gchar*"/>
          <parameter name="submenu" type="GMenuModel*"/>
        </parameters>
      </method>
      <method name="Prepend" cname="g_menu_prepend">
        <return-type type="void"/>
        <parameters>
          <parameter name="label" type="const-gchar*"/>
          <parameter name="detailed_action" type="const-gchar*"/>
        </parameters>
      </method>
      <method name="PrependItem" cname="g_menu_prepend_item">
        <return-type type="void"/>
        <parameters>
          <parameter name="item" type="GMenuItem*"/>
        </parameters>
      </method>
      <method name="PrependSection" cname="g_menu_prepend_section">
        <return-type type="void"/>
        <parameters>
          <parameter name="label" type="const-gchar*"/>
          <parameter name="section" type="GMenuModel*"/>
        </parameters>
      </method>
      <method name="PrependSubmenu" cname="g_menu_prepend_submenu">
        <return-type type="void"/>
        <parameters>
          <parameter name="label" type="const-gchar*"/>
          <parameter name="submenu" type="GMenuModel*"/>
        </parameters>
      </method>
      <method name="Remove" cname="g_menu_remove">
        <return-type type="void"/>
        <parameters>
          <parameter name="position" type="gint"/>
        </parameters>
      </method>
    </object>
    <object name="MenuAttributeIter" cname="GMenuAttributeIter" parent="GObject" abstract="1" opaque="true">
      <method name="GetType" cname="g_menu_attribute_iter_get_type" shared="true">
        <return-type type="GType"/>
      </method>
      <virtual_method name="GetNext" cname="get_next">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="menu_attribute_iter" type="GMenuAttributeIter*"/>
          <parameter name="out_type" type="const-gchar*"/>
          <parameter name="value" type="GVariant**">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </virtual_method>
      <method name="GetName" cname="g_menu_attribute_iter_get_name">
        <return-type type="const-gchar*"/>
      </method>
      <method name="GetNext" cname="g_menu_attribute_iter_get_next">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="out_name" type="const-gchar*"/>
          <parameter name="value" type="GVariant**">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="GetValue" cname="g_menu_attribute_iter_get_value">
        <return-type type="GVariant*">
          <warning>missing glib:type-name</warning>
        </return-type>
      </method>
      <method name="Next" cname="g_menu_attribute_iter_next">
        <return-type type="gboolean"/>
      </method>
      <field cname="parent_instance" name="ParentInstance" type="GObject*"/>
      <field cname="priv" name="Priv" type="GMenuAttributeIterPrivate*">
        <warning>missing glib:type-name</warning>
      </field>
    </object>
    <object name="MenuItem" cname="GMenuItem" parent="GObject" abstract="" opaque="true">
      <method name="GetType" cname="g_menu_item_get_type" shared="true">
        <return-type type="GType"/>
      </method>
      <constructor cname="g_menu_item_new">
        <parameters>
          <parameter name="label" type="const-gchar*"/>
          <parameter name="detailed_action" type="const-gchar*"/>
        </parameters>
      </constructor>
      <constructor cname="g_menu_item_new_section">
        <parameters>
          <parameter name="label" type="const-gchar*"/>
          <parameter name="section" type="GMenuModel*"/>
        </parameters>
      </constructor>
      <constructor cname="g_menu_item_new_submenu">
        <parameters>
          <parameter name="label" type="const-gchar*"/>
          <parameter name="submenu" type="GMenuModel*"/>
        </parameters>
      </constructor>
      <method name="SetActionAndTarget" cname="g_menu_item_set_action_and_target">
        <return-type type="void"/>
        <parameters>
          <parameter name="action" type="const-gchar*"/>
          <parameter name="format_string" type="const-gchar*"/>
          <parameter name="var_args" type="va_list"/>
        </parameters>
      </method>
      <method name="SetActionAndTargetValue" cname="g_menu_item_set_action_and_target_value">
        <return-type type="void"/>
        <parameters>
          <parameter name="action" type="const-gchar*"/>
          <parameter name="target_value" type="GVariant*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="SetAttribute" cname="g_menu_item_set_attribute">
        <return-type type="void"/>
        <parameters>
          <parameter name="attribute" type="const-gchar*"/>
          <parameter name="format_string" type="const-gchar*"/>
          <parameter name="var_args" type="va_list"/>
        </parameters>
      </method>
      <method name="SetAttributeValue" cname="g_menu_item_set_attribute_value">
        <return-type type="void"/>
        <parameters>
          <parameter name="attribute" type="const-gchar*"/>
          <parameter name="value" type="GVariant*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="SetDetailedAction" cname="g_menu_item_set_detailed_action">
        <return-type type="void"/>
        <parameters>
          <parameter name="detailed_action" type="const-gchar*"/>
        </parameters>
      </method>
      <method name="SetLabel" cname="g_menu_item_set_label">
        <return-type type="void"/>
        <parameters>
          <parameter name="label" type="const-gchar*"/>
        </parameters>
      </method>
      <method name="SetLink" cname="g_menu_item_set_link">
        <return-type type="void"/>
        <parameters>
          <parameter name="link" type="const-gchar*"/>
          <parameter name="model" type="GMenuModel*"/>
        </parameters>
      </method>
      <method name="SetSection" cname="g_menu_item_set_section">
        <return-type type="void"/>
        <parameters>
          <parameter name="section" type="GMenuModel*"/>
        </parameters>
      </method>
      <method name="SetSubmenu" cname="g_menu_item_set_submenu">
        <return-type type="void"/>
        <parameters>
          <parameter name="submenu" type="GMenuModel*"/>
        </parameters>
      </method>
    </object>
    <object name="MenuLinkIter" cname="GMenuLinkIter" parent="GObject" abstract="1" opaque="true">
      <method name="GetType" cname="g_menu_link_iter_get_type" shared="true">
        <return-type type="GType"/>
      </method>
      <virtual_method name="GetNext" cname="get_next">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="menu_link_iter" type="GMenuLinkIter*"/>
          <parameter name="out_name" type="const-gchar*"/>
          <parameter name="value" type="GMenuModel*"/>
        </parameters>
      </virtual_method>
      <method name="GetName" cname="g_menu_link_iter_get_name">
        <return-type type="const-gchar*"/>
      </method>
      <method name="GetNext" cname="g_menu_link_iter_get_next">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="out_link" type="const-gchar*"/>
          <parameter name="value" type="GMenuModel*"/>
        </parameters>
      </method>
      <method name="GetValue" cname="g_menu_link_iter_get_value">
        <return-type type="GMenuModel*"/>
      </method>
      <method name="Next" cname="g_menu_link_iter_next">
        <return-type type="gboolean"/>
      </method>
      <field cname="parent_instance" name="ParentInstance" type="GObject*"/>
      <field cname="priv" name="Priv" type="GMenuLinkIterPrivate*">
        <warning>missing glib:type-name</warning>
      </field>
    </object>
    <object name="MenuModel" cname="GMenuModel" parent="GObject" abstract="1" opaque="">
      <method name="GetType" cname="g_menu_model_get_type" shared="true">
        <return-type type="GType"/>
      </method>
      <virtual_method name="GetItemAttributeValue" cname="get_item_attribute_value">
        <return-type type="GVariant*">
          <warning>missing glib:type-name</warning>
        </return-type>
        <parameters>
          <parameter name="menu_model" type="GMenuModel*"/>
          <parameter name="item_index" type="gint"/>
          <parameter name="attribute" type="const-gchar*"/>
          <parameter name="expected_type" type="GVariantType*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </virtual_method>
      <virtual_method name="GetItemAttributes" cname="get_item_attributes">
        <return-type type="void"/>
        <parameters>
          <parameter name="menu_model" type="GMenuModel*"/>
          <parameter name="item_index" type="gint"/>
          <parameter name="attributes" type="GHashTable**">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </virtual_method>
      <virtual_method name="GetItemLink" cname="get_item_link">
        <return-type type="GMenuModel*"/>
        <parameters>
          <parameter name="menu_model" type="GMenuModel*"/>
          <parameter name="item_index" type="gint"/>
          <parameter name="link" type="const-gchar*"/>
        </parameters>
      </virtual_method>
      <virtual_method name="GetItemLinks" cname="get_item_links">
        <return-type type="void"/>
        <parameters>
          <parameter name="menu_model" type="GMenuModel*"/>
          <parameter name="item_index" type="gint"/>
          <parameter name="links" type="GHashTable**">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </virtual_method>
      <virtual_method name="GetNItems" cname="get_n_items">
        <return-type type="gint"/>
      </virtual_method>
      <virtual_method name="IsMutable" cname="is_mutable">
        <return-type type="gboolean"/>
      </virtual_method>
      <virtual_method name="IterateItemAttributes" cname="iterate_item_attributes">
        <return-type type="GMenuAttributeIter*"/>
        <parameters>
          <parameter name="menu_model" type="GMenuModel*"/>
          <parameter name="item_index" type="gint"/>
        </parameters>
      </virtual_method>
      <virtual_method name="IterateItemLinks" cname="iterate_item_links">
        <return-type type="GMenuLinkIter*"/>
        <parameters>
          <parameter name="menu_model" type="GMenuModel*"/>
          <parameter name="item_index" type="gint"/>
        </parameters>
      </virtual_method>
      <method name="GetItemAttribute" cname="g_menu_model_get_item_attribute">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="item_index" type="gint"/>
          <parameter name="attribute" type="const-gchar*"/>
          <parameter name="format_string" type="const-gchar*"/>
          <parameter name="var_args" type="va_list"/>
        </parameters>
      </method>
      <method name="GetItemAttributeValue" cname="g_menu_model_get_item_attribute_value">
        <return-type type="GVariant*">
          <warning>missing glib:type-name</warning>
        </return-type>
        <parameters>
          <parameter name="item_index" type="gint"/>
          <parameter name="attribute" type="const-gchar*"/>
          <parameter name="expected_type" type="GVariantType*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="GetItemLink" cname="g_menu_model_get_item_link">
        <return-type type="GMenuModel*"/>
        <parameters>
          <parameter name="item_index" type="gint"/>
          <parameter name="link" type="const-gchar*"/>
        </parameters>
      </method>
      <method name="GetNItems" cname="g_menu_model_get_n_items">
        <return-type type="gint"/>
      </method>
      <method name="IsMutable" cname="g_menu_model_is_mutable">
        <return-type type="gboolean"/>
      </method>
      <method name="ItemsChanged" cname="g_menu_model_items_changed">
        <return-type type="void"/>
        <parameters>
          <parameter name="position" type="gint"/>
          <parameter name="removed" type="gint"/>
          <parameter name="added" type="gint"/>
        </parameters>
      </method>
      <method name="IterateItemAttributes" cname="g_menu_model_iterate_item_attributes">
        <return-type type="GMenuAttributeIter*"/>
        <parameters>
          <parameter name="item_index" type="gint"/>
        </parameters>
      </method>
      <method name="IterateItemLinks" cname="g_menu_model_iterate_item_links">
        <return-type type="GMenuLinkIter*"/>
        <parameters>
          <parameter name="item_index" type="gint"/>
        </parameters>
      </method>
      <field cname="parent_instance" name="ParentInstance" type="GObject*"/>
      <field cname="priv" name="Priv" type="GMenuModelPrivate*">
        <warning>missing glib:type-name</warning>
      </field>
    </object>
    <object name="MountOperation" cname="GMountOperation" parent="GObject" abstract="" opaque="">
      <method name="GetType" cname="g_mount_operation_get_type" shared="true">
        <return-type type="GType"/>
      </method>
      <constructor cname="g_mount_operation_new" disable_void_ctor=""/>
      <virtual_method name="Aborted" cname="aborted">
        <return-type type="void"/>
      </virtual_method>
      <virtual_method name="AskPassword" cname="ask_password">
        <return-type type="void"/>
        <parameters>
          <parameter name="mount_operation" type="GMountOperation*"/>
          <parameter name="message" type="const-gchar*"/>
          <parameter name="default_user" type="const-gchar*"/>
          <parameter name="default_domain" type="const-gchar*"/>
          <parameter name="flags" type="GAskPasswordFlags"/>
        </parameters>
      </virtual_method>
      <virtual_method name="AskQuestion" cname="ask_question">
        <return-type type="void"/>
        <parameters>
          <parameter name="mount_operation" type="GMountOperation*"/>
          <parameter name="message" type="const-gchar*"/>
          <parameter name="choices" type="const-gchar*"/>
        </parameters>
      </virtual_method>
      <virtual_method name="Reply" cname="reply">
        <return-type type="void"/>
        <parameters>
          <parameter name="mount_operation" type="GMountOperation*"/>
          <parameter name="_result" type="GMountOperationResult"/>
        </parameters>
      </virtual_method>
      <virtual_method name="ShowProcesses" cname="show_processes">
        <return-type type="void"/>
        <parameters>
          <parameter name="mount_operation" type="GMountOperation*"/>
          <parameter name="message" type="const-gchar*"/>
          <parameter name="processes" type="GArray*" array="true"/>
          <parameter name="choices" type="const-gchar*"/>
        </parameters>
      </virtual_method>
      <method name="GetAnonymous" cname="g_mount_operation_get_anonymous">
        <return-type type="gboolean"/>
      </method>
      <method name="GetChoice" cname="g_mount_operation_get_choice">
        <return-type type="gint"/>
      </method>
      <method name="GetDomain" cname="g_mount_operation_get_domain">
        <return-type type="const-gchar*"/>
      </method>
      <method name="GetPassword" cname="g_mount_operation_get_password">
        <return-type type="const-gchar*"/>
      </method>
      <method name="GetPasswordSave" cname="g_mount_operation_get_password_save">
        <return-type type="GPasswordSave"/>
      </method>
      <method name="GetUsername" cname="g_mount_operation_get_username">
        <return-type type="const-gchar*"/>
      </method>
      <method name="Reply" cname="g_mount_operation_reply">
        <return-type type="void"/>
        <parameters>
          <parameter name="_result" type="GMountOperationResult"/>
        </parameters>
      </method>
      <method name="SetAnonymous" cname="g_mount_operation_set_anonymous">
        <return-type type="void"/>
        <parameters>
          <parameter name="anonymous" type="gboolean"/>
        </parameters>
      </method>
      <method name="SetChoice" cname="g_mount_operation_set_choice">
        <return-type type="void"/>
        <parameters>
          <parameter name="choice" type="gint"/>
        </parameters>
      </method>
      <method name="SetDomain" cname="g_mount_operation_set_domain">
        <return-type type="void"/>
        <parameters>
          <parameter name="domain" type="const-gchar*"/>
        </parameters>
      </method>
      <method name="SetPassword" cname="g_mount_operation_set_password">
        <return-type type="void"/>
        <parameters>
          <parameter name="password" type="const-gchar*"/>
        </parameters>
      </method>
      <method name="SetPasswordSave" cname="g_mount_operation_set_password_save">
        <return-type type="void"/>
        <parameters>
          <parameter name="save" type="GPasswordSave"/>
        </parameters>
      </method>
      <method name="SetUsername" cname="g_mount_operation_set_username">
        <return-type type="void"/>
        <parameters>
          <parameter name="username" type="const-gchar*"/>
        </parameters>
      </method>
      <property name="Anonymous" cname="anonymous" type="gboolean" readable="true" writable="true"/>
      <property name="Choice" cname="choice" type="gint" readable="true" writable="true"/>
      <property name="Domain" cname="domain" type="gchar*" readable="true" writable="true"/>
      <property name="Password" cname="password" type="gchar*" readable="true" writable="true"/>
      <property name="PasswordSave" cname="password-save" type="GPasswordSave" readable="true" writable="true"/>
      <property name="Username" cname="username" type="gchar*" readable="true" writable="true"/>
      <field cname="parent_instance" name="ParentInstance" type="GObject*"/>
      <field cname="priv" name="Priv" type="GMountOperationPrivate*">
        <warning>missing glib:type-name</warning>
      </field>
    </object>
    <object name="NativeVolumeMonitor" cname="GNativeVolumeMonitor" parent="GVolumeMonitor" abstract="1" opaque="">
      <method name="GetType" cname="g_native_volume_monitor_get_type" shared="true">
        <return-type type="GType"/>
      </method>
      <field cname="parent_instance" name="ParentInstance" type="GVolumeMonitor*"/>
    </object>
    <object name="NetworkAddress" cname="GNetworkAddress" parent="GObject" abstract="" opaque="">
      <method name="GetType" cname="g_network_address_get_type" shared="true">
        <return-type type="GType"/>
      </method>
      <constructor cname="g_network_address_new">
        <parameters>
          <parameter name="hostname" type="const-gchar*"/>
          <parameter name="port" type="guint16"/>
        </parameters>
      </constructor>
      <method name="Parse" cname="g_network_address_parse" shared="true">
        <return-type type="GSocketConnectable*"/>
        <parameters>
          <parameter name="host_and_port" type="const-gchar*"/>
          <parameter name="default_port" type="guint16"/>
        </parameters>
      </method>
      <method name="ParseUri" cname="g_network_address_parse_uri" shared="true">
        <return-type type="GSocketConnectable*"/>
        <parameters>
          <parameter name="uri" type="const-gchar*"/>
          <parameter name="default_port" type="guint16"/>
        </parameters>
      </method>
      <method name="GetHostname" cname="g_network_address_get_hostname">
        <return-type type="const-gchar*"/>
      </method>
      <method name="GetPort" cname="g_network_address_get_port">
        <return-type type="guint16"/>
      </method>
      <method name="GetScheme" cname="g_network_address_get_scheme">
        <return-type type="const-gchar*"/>
      </method>
      <property name="Hostname" cname="hostname" type="gchar*" readable="true" writable="true"/>
      <property name="Port" cname="port" type="guint" readable="true" writable="true"/>
      <property name="Scheme" cname="scheme" type="gchar*" readable="true" writable="true"/>
      <field cname="parent_instance" name="ParentInstance" type="GObject*"/>
    </object>
    <object name="NetworkService" cname="GNetworkService" parent="GObject" abstract="" opaque="">
      <method name="GetType" cname="g_network_service_get_type" shared="true">
        <return-type type="GType"/>
      </method>
      <constructor cname="g_network_service_new">
        <parameters>
          <parameter name="service" type="const-gchar*"/>
          <parameter name="protocol" type="const-gchar*"/>
          <parameter name="domain" type="const-gchar*"/>
        </parameters>
      </constructor>
      <method name="GetDomain" cname="g_network_service_get_domain">
        <return-type type="const-gchar*"/>
      </method>
      <method name="GetProtocol" cname="g_network_service_get_protocol">
        <return-type type="const-gchar*"/>
      </method>
      <method name="GetScheme" cname="g_network_service_get_scheme">
        <return-type type="const-gchar*"/>
      </method>
      <method name="GetService" cname="g_network_service_get_service">
        <return-type type="const-gchar*"/>
      </method>
      <method name="SetScheme" cname="g_network_service_set_scheme">
        <return-type type="void"/>
        <parameters>
          <parameter name="scheme" type="const-gchar*"/>
        </parameters>
      </method>
      <property name="Domain" cname="domain" type="gchar*" readable="true" writable="true"/>
      <property name="Protocol" cname="protocol" type="gchar*" readable="true" writable="true"/>
      <property name="Scheme" cname="scheme" type="gchar*" readable="true" writable="true"/>
      <property name="Service" cname="service" type="gchar*" readable="true" writable="true"/>
      <field cname="parent_instance" name="ParentInstance" type="GObject*"/>
    </object>
    <object name="OutputStream" cname="GOutputStream" parent="GObject" abstract="1" opaque="">
      <method name="GetType" cname="g_output_stream_get_type" shared="true">
        <return-type type="GType"/>
      </method>
      <virtual_method name="CloseAsync" cname="close_async">
        <return-type type="void"/>
        <parameters>
          <parameter name="output_stream" type="GOutputStream*"/>
          <parameter name="io_priority" type="gint"/>
          <parameter name="cancellable" type="GCancellable*"/>
          <parameter name="callback" type="GAsyncReadyCallback"/>
          <parameter name="user_data" type="gpointer"/>
        </parameters>
      </virtual_method>
      <virtual_method name="CloseFinish" cname="close_finish">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="output_stream" type="GOutputStream*"/>
          <parameter name="_result" type="GAsyncResult*"/>
        </parameters>
      </virtual_method>
      <virtual_method name="CloseFn" cname="close_fn">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="output_stream" type="GOutputStream*"/>
          <parameter name="cancellable" type="GCancellable*"/>
        </parameters>
      </virtual_method>
      <virtual_method name="Flush" cname="flush">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="output_stream" type="GOutputStream*"/>
          <parameter name="cancellable" type="GCancellable*"/>
        </parameters>
      </virtual_method>
      <virtual_method name="FlushAsync" cname="flush_async">
        <return-type type="void"/>
        <parameters>
          <parameter name="output_stream" type="GOutputStream*"/>
          <parameter name="io_priority" type="gint"/>
          <parameter name="cancellable" type="GCancellable*"/>
          <parameter name="callback" type="GAsyncReadyCallback"/>
          <parameter name="user_data" type="gpointer"/>
        </parameters>
      </virtual_method>
      <virtual_method name="FlushFinish" cname="flush_finish">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="output_stream" type="GOutputStream*"/>
          <parameter name="_result" type="GAsyncResult*"/>
        </parameters>
      </virtual_method>
      <virtual_method name="Splice" cname="splice">
        <return-type type="gssize"/>
        <parameters>
          <parameter name="output_stream" type="GOutputStream*"/>
          <parameter name="source" type="GInputStream*"/>
          <parameter name="flags" type="GOutputStreamSpliceFlags"/>
          <parameter name="cancellable" type="GCancellable*"/>
        </parameters>
      </virtual_method>
      <virtual_method name="SpliceAsync" cname="splice_async">
        <return-type type="void"/>
        <parameters>
          <parameter name="output_stream" type="GOutputStream*"/>
          <parameter name="source" type="GInputStream*"/>
          <parameter name="flags" type="GOutputStreamSpliceFlags"/>
          <parameter name="io_priority" type="gint"/>
          <parameter name="cancellable" type="GCancellable*"/>
          <parameter name="callback" type="GAsyncReadyCallback"/>
          <parameter name="user_data" type="gpointer"/>
        </parameters>
      </virtual_method>
      <virtual_method name="SpliceFinish" cname="splice_finish">
        <return-type type="gssize"/>
        <parameters>
          <parameter name="output_stream" type="GOutputStream*"/>
          <parameter name="_result" type="GAsyncResult*"/>
        </parameters>
      </virtual_method>
      <virtual_method name="WriteAsync" cname="write_async">
        <return-type type="void"/>
        <parameters>
          <parameter name="output_stream" type="GOutputStream*"/>
          <parameter name="buffer" type="void*" array_len="1"/>
          <parameter name="count" type="gsize"/>
          <parameter name="io_priority" type="gint"/>
          <parameter name="cancellable" type="GCancellable*"/>
          <parameter name="callback" type="GAsyncReadyCallback"/>
          <parameter name="user_data" type="gpointer"/>
        </parameters>
      </virtual_method>
      <virtual_method name="WriteFinish" cname="write_finish">
        <return-type type="gssize"/>
        <parameters>
          <parameter name="output_stream" type="GOutputStream*"/>
          <parameter name="_result" type="GAsyncResult*"/>
        </parameters>
      </virtual_method>
      <virtual_method name="WriteFn" cname="write_fn">
        <return-type type="gssize"/>
        <parameters>
          <parameter name="output_stream" type="GOutputStream*"/>
          <parameter name="buffer" type="void*" array_len="1"/>
          <parameter name="count" type="gsize"/>
          <parameter name="cancellable" type="GCancellable*"/>
        </parameters>
      </virtual_method>
      <method name="ClearPending" cname="g_output_stream_clear_pending">
        <return-type type="void"/>
      </method>
      <method name="Close" cname="g_output_stream_close">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="cancellable" type="GCancellable*"/>
        </parameters>
      </method>
      <method name="CloseAsync" cname="g_output_stream_close_async">
        <return-type type="void"/>
        <parameters>
          <parameter name="io_priority" type="gint"/>
          <parameter name="cancellable" type="GCancellable*"/>
          <parameter name="callback" type="GAsyncReadyCallback"/>
          <parameter name="user_data" type="gpointer"/>
        </parameters>
      </method>
      <method name="CloseFinish" cname="g_output_stream_close_finish">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="_result" type="GAsyncResult*"/>
        </parameters>
      </method>
      <method name="Flush" cname="g_output_stream_flush">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="cancellable" type="GCancellable*"/>
        </parameters>
      </method>
      <method name="FlushAsync" cname="g_output_stream_flush_async">
        <return-type type="void"/>
        <parameters>
          <parameter name="io_priority" type="gint"/>
          <parameter name="cancellable" type="GCancellable*"/>
          <parameter name="callback" type="GAsyncReadyCallback"/>
          <parameter name="user_data" type="gpointer"/>
        </parameters>
      </method>
      <method name="FlushFinish" cname="g_output_stream_flush_finish">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="_result" type="GAsyncResult*"/>
        </parameters>
      </method>
      <method name="HasPending" cname="g_output_stream_has_pending">
        <return-type type="gboolean"/>
      </method>
      <method name="IsClosed" cname="g_output_stream_is_closed">
        <return-type type="gboolean"/>
      </method>
      <method name="IsClosing" cname="g_output_stream_is_closing">
        <return-type type="gboolean"/>
      </method>
      <method name="SetPending" cname="g_output_stream_set_pending">
        <return-type type="gboolean"/>
      </method>
      <method name="Splice" cname="g_output_stream_splice">
        <return-type type="gssize"/>
        <parameters>
          <parameter name="source" type="GInputStream*"/>
          <parameter name="flags" type="GOutputStreamSpliceFlags"/>
          <parameter name="cancellable" type="GCancellable*"/>
        </parameters>
      </method>
      <method name="SpliceAsync" cname="g_output_stream_splice_async">
        <return-type type="void"/>
        <parameters>
          <parameter name="source" type="GInputStream*"/>
          <parameter name="flags" type="GOutputStreamSpliceFlags"/>
          <parameter name="io_priority" type="gint"/>
          <parameter name="cancellable" type="GCancellable*"/>
          <parameter name="callback" type="GAsyncReadyCallback"/>
          <parameter name="user_data" type="gpointer"/>
        </parameters>
      </method>
      <method name="SpliceFinish" cname="g_output_stream_splice_finish">
        <return-type type="gssize"/>
        <parameters>
          <parameter name="_result" type="GAsyncResult*"/>
        </parameters>
      </method>
      <method name="Write" cname="g_output_stream_write">
        <return-type type="gssize"/>
        <parameters>
          <parameter name="buffer" type="void*" array_len="1"/>
          <parameter name="count" type="gsize"/>
          <parameter name="cancellable" type="GCancellable*"/>
        </parameters>
      </method>
      <method name="WriteAll" cname="g_output_stream_write_all">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="buffer" type="void*" array_len="1"/>
          <parameter name="count" type="gsize"/>
          <parameter name="bytes_written" type="gsize*"/>
          <parameter name="cancellable" type="GCancellable*"/>
        </parameters>
      </method>
      <method name="WriteAsync" cname="g_output_stream_write_async">
        <return-type type="void"/>
        <parameters>
          <parameter name="buffer" type="void*" array_len="1"/>
          <parameter name="count" type="gsize"/>
          <parameter name="io_priority" type="gint"/>
          <parameter name="cancellable" type="GCancellable*"/>
          <parameter name="callback" type="GAsyncReadyCallback"/>
          <parameter name="user_data" type="gpointer"/>
        </parameters>
      </method>
      <method name="WriteFinish" cname="g_output_stream_write_finish">
        <return-type type="gssize"/>
        <parameters>
          <parameter name="_result" type="GAsyncResult*"/>
        </parameters>
      </method>
      <field cname="parent_instance" name="ParentInstance" type="GObject*"/>
    </object>
    <object name="Permission" cname="GPermission" parent="GObject" abstract="1" opaque="">
      <method name="GetType" cname="g_permission_get_type" shared="true">
        <return-type type="GType"/>
      </method>
      <virtual_method name="Acquire" cname="acquire">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="permission" type="GPermission*"/>
          <parameter name="cancellable" type="GCancellable*"/>
        </parameters>
      </virtual_method>
      <virtual_method name="AcquireAsync" cname="acquire_async">
        <return-type type="void"/>
        <parameters>
          <parameter name="permission" type="GPermission*"/>
          <parameter name="cancellable" type="GCancellable*"/>
          <parameter name="callback" type="GAsyncReadyCallback"/>
          <parameter name="user_data" type="gpointer"/>
        </parameters>
      </virtual_method>
      <virtual_method name="AcquireFinish" cname="acquire_finish">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="permission" type="GPermission*"/>
          <parameter name="_result" type="GAsyncResult*"/>
        </parameters>
      </virtual_method>
      <virtual_method name="Release" cname="release">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="permission" type="GPermission*"/>
          <parameter name="cancellable" type="GCancellable*"/>
        </parameters>
      </virtual_method>
      <virtual_method name="ReleaseAsync" cname="release_async">
        <return-type type="void"/>
        <parameters>
          <parameter name="permission" type="GPermission*"/>
          <parameter name="cancellable" type="GCancellable*"/>
          <parameter name="callback" type="GAsyncReadyCallback"/>
          <parameter name="user_data" type="gpointer"/>
        </parameters>
      </virtual_method>
      <virtual_method name="ReleaseFinish" cname="release_finish">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="permission" type="GPermission*"/>
          <parameter name="_result" type="GAsyncResult*"/>
        </parameters>
      </virtual_method>
      <method name="Acquire" cname="g_permission_acquire">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="cancellable" type="GCancellable*"/>
        </parameters>
      </method>
      <method name="AcquireAsync" cname="g_permission_acquire_async">
        <return-type type="void"/>
        <parameters>
          <parameter name="cancellable" type="GCancellable*"/>
          <parameter name="callback" type="GAsyncReadyCallback"/>
          <parameter name="user_data" type="gpointer"/>
        </parameters>
      </method>
      <method name="AcquireFinish" cname="g_permission_acquire_finish">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="_result" type="GAsyncResult*"/>
        </parameters>
      </method>
      <method name="GetAllowed" cname="g_permission_get_allowed">
        <return-type type="gboolean"/>
      </method>
      <method name="GetCanAcquire" cname="g_permission_get_can_acquire">
        <return-type type="gboolean"/>
      </method>
      <method name="GetCanRelease" cname="g_permission_get_can_release">
        <return-type type="gboolean"/>
      </method>
      <method name="ImplUpdate" cname="g_permission_impl_update">
        <return-type type="void"/>
        <parameters>
          <parameter name="allowed" type="gboolean"/>
          <parameter name="can_acquire" type="gboolean"/>
          <parameter name="can_release" type="gboolean"/>
        </parameters>
      </method>
      <method name="Release" cname="g_permission_release">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="cancellable" type="GCancellable*"/>
        </parameters>
      </method>
      <method name="ReleaseAsync" cname="g_permission_release_async">
        <return-type type="void"/>
        <parameters>
          <parameter name="cancellable" type="GCancellable*"/>
          <parameter name="callback" type="GAsyncReadyCallback"/>
          <parameter name="user_data" type="gpointer"/>
        </parameters>
      </method>
      <method name="ReleaseFinish" cname="g_permission_release_finish">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="_result" type="GAsyncResult*"/>
        </parameters>
      </method>
      <property name="Allowed" cname="allowed" type="gboolean" readable="true" writable="false"/>
      <property name="CanAcquire" cname="can-acquire" type="gboolean" readable="true" writable="false"/>
      <property name="CanRelease" cname="can-release" type="gboolean" readable="true" writable="false"/>
      <field cname="parent_instance" name="ParentInstance" type="GObject*"/>
    </object>
    <object name="ProxyAddress" cname="GProxyAddress" parent="GInetSocketAddress" abstract="" opaque="">
      <method name="GetType" cname="g_proxy_address_get_type" shared="true">
        <return-type type="GType"/>
      </method>
      <constructor cname="g_proxy_address_new">
        <parameters>
          <parameter name="inetaddr" type="GInetAddress*"/>
          <parameter name="port" type="guint16"/>
          <parameter name="protocol" type="const-gchar*"/>
          <parameter name="dest_hostname" type="const-gchar*"/>
          <parameter name="dest_port" type="guint16"/>
          <parameter name="username" type="const-gchar*"/>
          <parameter name="password" type="const-gchar*"/>
        </parameters>
      </constructor>
      <method name="GetDestinationHostname" cname="g_proxy_address_get_destination_hostname">
        <return-type type="const-gchar*"/>
      </method>
      <method name="GetDestinationPort" cname="g_proxy_address_get_destination_port">
        <return-type type="guint16"/>
      </method>
      <method name="GetPassword" cname="g_proxy_address_get_password">
        <return-type type="const-gchar*"/>
      </method>
      <method name="GetProtocol" cname="g_proxy_address_get_protocol">
        <return-type type="const-gchar*"/>
      </method>
      <method name="GetUsername" cname="g_proxy_address_get_username">
        <return-type type="const-gchar*"/>
      </method>
      <property name="DestinationHostname" cname="destination-hostname" type="gchar*" readable="true" writable="true"/>
      <property name="DestinationPort" cname="destination-port" type="guint" readable="true" writable="true"/>
      <property name="Password" cname="password" type="gchar*" readable="true" writable="true"/>
      <property name="Protocol" cname="protocol" type="gchar*" readable="true" writable="true"/>
      <property name="Username" cname="username" type="gchar*" readable="true" writable="true"/>
      <field cname="parent_instance" name="ParentInstance" type="GInetSocketAddress*"/>
    </object>
    <object name="ProxyAddressEnumerator" cname="GProxyAddressEnumerator" parent="GSocketAddressEnumerator" abstract="" opaque="">
      <method name="GetType" cname="g_proxy_address_enumerator_get_type" shared="true">
        <return-type type="GType"/>
      </method>
      <property name="Connectable" cname="connectable" type="GSocketConnectable*" readable="true" writable="true"/>
      <property name="Uri" cname="uri" type="gchar*" readable="true" writable="true"/>
      <field cname="parent_instance" name="ParentInstance" type="GSocketAddressEnumerator*"/>
      <field cname="priv" name="Priv" type="GProxyAddressEnumeratorPrivate*">
        <warning>missing glib:type-name</warning>
      </field>
    </object>
    <object name="Resolver" cname="GResolver" parent="GObject" abstract="" opaque="">
      <method name="GetType" cname="g_resolver_get_type" shared="true">
        <return-type type="GType"/>
      </method>
      <method name="FreeAddresses" cname="g_resolver_free_addresses" shared="true">
        <return-type type="void"/>
        <parameters>
          <parameter name="addresses" type="GList*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="FreeTargets" cname="g_resolver_free_targets" shared="true">
        <return-type type="void"/>
        <parameters>
          <parameter name="targets" type="GList*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="GetDefault" cname="g_resolver_get_default" shared="true">
        <return-type type="GResolver*"/>
      </method>
      <virtual_method name="LookupByAddress" cname="lookup_by_address">
        <return-type type="gchar*"/>
        <parameters>
          <parameter name="resolver" type="GResolver*"/>
          <parameter name="address" type="GInetAddress*"/>
          <parameter name="cancellable" type="GCancellable*"/>
        </parameters>
      </virtual_method>
      <virtual_method name="LookupByAddressAsync" cname="lookup_by_address_async">
        <return-type type="void"/>
        <parameters>
          <parameter name="resolver" type="GResolver*"/>
          <parameter name="address" type="GInetAddress*"/>
          <parameter name="cancellable" type="GCancellable*"/>
          <parameter name="callback" type="GAsyncReadyCallback"/>
          <parameter name="user_data" type="gpointer"/>
        </parameters>
      </virtual_method>
      <virtual_method name="LookupByAddressFinish" cname="lookup_by_address_finish">
        <return-type type="gchar*"/>
        <parameters>
          <parameter name="resolver" type="GResolver*"/>
          <parameter name="_result" type="GAsyncResult*"/>
        </parameters>
      </virtual_method>
      <virtual_method name="LookupByName" cname="lookup_by_name">
        <return-type type="GList*">
          <warning>missing glib:type-name</warning>
        </return-type>
        <parameters>
          <parameter name="resolver" type="GResolver*"/>
          <parameter name="hostname" type="const-gchar*"/>
          <parameter name="cancellable" type="GCancellable*"/>
        </parameters>
      </virtual_method>
      <virtual_method name="LookupByNameAsync" cname="lookup_by_name_async">
        <return-type type="void"/>
        <parameters>
          <parameter name="resolver" type="GResolver*"/>
          <parameter name="hostname" type="const-gchar*"/>
          <parameter name="cancellable" type="GCancellable*"/>
          <parameter name="callback" type="GAsyncReadyCallback"/>
          <parameter name="user_data" type="gpointer"/>
        </parameters>
      </virtual_method>
      <virtual_method name="LookupByNameFinish" cname="lookup_by_name_finish">
        <return-type type="GList*">
          <warning>missing glib:type-name</warning>
        </return-type>
        <parameters>
          <parameter name="resolver" type="GResolver*"/>
          <parameter name="_result" type="GAsyncResult*"/>
        </parameters>
      </virtual_method>
      <virtual_method name="LookupService" cname="lookup_service">
        <return-type type="GList*">
          <warning>missing glib:type-name</warning>
        </return-type>
        <parameters>
          <parameter name="resolver" type="GResolver*"/>
          <parameter name="rrname" type="const-gchar*"/>
          <parameter name="cancellable" type="GCancellable*"/>
        </parameters>
      </virtual_method>
      <virtual_method name="LookupServiceAsync" cname="lookup_service_async">
        <return-type type="void"/>
        <parameters>
          <parameter name="resolver" type="GResolver*"/>
          <parameter name="rrname" type="const-gchar*"/>
          <parameter name="cancellable" type="GCancellable*"/>
          <parameter name="callback" type="GAsyncReadyCallback"/>
          <parameter name="user_data" type="gpointer"/>
        </parameters>
      </virtual_method>
      <virtual_method name="LookupServiceFinish" cname="lookup_service_finish">
        <return-type type="GList*">
          <warning>missing glib:type-name</warning>
        </return-type>
        <parameters>
          <parameter name="resolver" type="GResolver*"/>
          <parameter name="_result" type="GAsyncResult*"/>
        </parameters>
      </virtual_method>
      <virtual_method name="Reload" cname="reload">
        <return-type type="void"/>
      </virtual_method>
      <method name="LookupByAddress" cname="g_resolver_lookup_by_address">
        <return-type type="gchar*"/>
        <parameters>
          <parameter name="address" type="GInetAddress*"/>
          <parameter name="cancellable" type="GCancellable*"/>
        </parameters>
      </method>
      <method name="LookupByAddressAsync" cname="g_resolver_lookup_by_address_async">
        <return-type type="void"/>
        <parameters>
          <parameter name="address" type="GInetAddress*"/>
          <parameter name="cancellable" type="GCancellable*"/>
          <parameter name="callback" type="GAsyncReadyCallback"/>
          <parameter name="user_data" type="gpointer"/>
        </parameters>
      </method>
      <method name="LookupByAddressFinish" cname="g_resolver_lookup_by_address_finish">
        <return-type type="gchar*"/>
        <parameters>
          <parameter name="_result" type="GAsyncResult*"/>
        </parameters>
      </method>
      <method name="LookupByName" cname="g_resolver_lookup_by_name">
        <return-type type="GList*">
          <warning>missing glib:type-name</warning>
        </return-type>
        <parameters>
          <parameter name="hostname" type="const-gchar*"/>
          <parameter name="cancellable" type="GCancellable*"/>
        </parameters>
      </method>
      <method name="LookupByNameAsync" cname="g_resolver_lookup_by_name_async">
        <return-type type="void"/>
        <parameters>
          <parameter name="hostname" type="const-gchar*"/>
          <parameter name="cancellable" type="GCancellable*"/>
          <parameter name="callback" type="GAsyncReadyCallback"/>
          <parameter name="user_data" type="gpointer"/>
        </parameters>
      </method>
      <method name="LookupByNameFinish" cname="g_resolver_lookup_by_name_finish">
        <return-type type="GList*">
          <warning>missing glib:type-name</warning>
        </return-type>
        <parameters>
          <parameter name="_result" type="GAsyncResult*"/>
        </parameters>
      </method>
      <method name="LookupService" cname="g_resolver_lookup_service">
        <return-type type="GList*">
          <warning>missing glib:type-name</warning>
        </return-type>
        <parameters>
          <parameter name="service" type="const-gchar*"/>
          <parameter name="protocol" type="const-gchar*"/>
          <parameter name="domain" type="const-gchar*"/>
          <parameter name="cancellable" type="GCancellable*"/>
        </parameters>
      </method>
      <method name="LookupServiceAsync" cname="g_resolver_lookup_service_async">
        <return-type type="void"/>
        <parameters>
          <parameter name="service" type="const-gchar*"/>
          <parameter name="protocol" type="const-gchar*"/>
          <parameter name="domain" type="const-gchar*"/>
          <parameter name="cancellable" type="GCancellable*"/>
          <parameter name="callback" type="GAsyncReadyCallback"/>
          <parameter name="user_data" type="gpointer"/>
        </parameters>
      </method>
      <method name="LookupServiceFinish" cname="g_resolver_lookup_service_finish">
        <return-type type="GList*">
          <warning>missing glib:type-name</warning>
        </return-type>
        <parameters>
          <parameter name="_result" type="GAsyncResult*"/>
        </parameters>
      </method>
      <method name="SetDefault" cname="g_resolver_set_default">
        <return-type type="void"/>
      </method>
      <field cname="parent_instance" name="ParentInstance" type="GObject*"/>
      <field cname="priv" name="Priv" type="GResolverPrivate*">
        <warning>missing glib:type-name</warning>
      </field>
    </object>
    <object name="Settings" cname="GSettings" parent="GObject" abstract="" opaque="">
      <method name="GetType" cname="g_settings_get_type" shared="true">
        <return-type type="GType"/>
      </method>
      <constructor cname="g_settings_new">
        <parameters>
          <parameter name="schema_id" type="const-gchar*"/>
        </parameters>
      </constructor>
      <constructor cname="g_settings_new_full">
        <parameters>
          <parameter name="schema" type="GSettingsSchema*">
            <warning>missing glib:type-name</warning>
          </parameter>
          <parameter name="backend" type="GSettingsBackend*">
            <warning>missing glib:type-name</warning>
          </parameter>
          <parameter name="path" type="const-gchar*"/>
        </parameters>
      </constructor>
      <constructor cname="g_settings_new_with_backend">
        <parameters>
          <parameter name="schema_id" type="const-gchar*"/>
          <parameter name="backend" type="GSettingsBackend*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </constructor>
      <constructor cname="g_settings_new_with_backend_and_path">
        <parameters>
          <parameter name="schema_id" type="const-gchar*"/>
          <parameter name="backend" type="GSettingsBackend*">
            <warning>missing glib:type-name</warning>
          </parameter>
          <parameter name="path" type="const-gchar*"/>
        </parameters>
      </constructor>
      <constructor cname="g_settings_new_with_path">
        <parameters>
          <parameter name="schema_id" type="const-gchar*"/>
          <parameter name="path" type="const-gchar*"/>
        </parameters>
      </constructor>
      <method name="ListRelocatableSchemas" cname="g_settings_list_relocatable_schemas" shared="true">
        <return-type type="gchar**" array="true"/>
      </method>
      <method name="ListSchemas" cname="g_settings_list_schemas" shared="true">
        <return-type type="gchar**" array="true"/>
      </method>
      <method name="Sync" cname="g_settings_sync" shared="true">
        <return-type type="void"/>
      </method>
      <method name="Unbind" cname="g_settings_unbind" shared="true">
        <return-type type="void"/>
        <parameters>
          <parameter name="_object" type="gpointer"/>
          <parameter name="property" type="const-gchar*"/>
        </parameters>
      </method>
      <virtual_method name="ChangeEvent" cname="change_event">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="settings" type="GSettings*"/>
          <parameter name="keys" type="guint32"/>
          <parameter name="n_keys" type="gint"/>
        </parameters>
      </virtual_method>
      <virtual_method name="Changed" cname="changed">
        <return-type type="void"/>
        <parameters>
          <parameter name="settings" type="GSettings*"/>
          <parameter name="key" type="const-gchar*"/>
        </parameters>
      </virtual_method>
      <virtual_method name="WritableChangeEvent" cname="writable_change_event">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="settings" type="GSettings*"/>
          <parameter name="key" type="guint32"/>
        </parameters>
      </virtual_method>
      <virtual_method name="WritableChanged" cname="writable_changed">
        <return-type type="void"/>
        <parameters>
          <parameter name="settings" type="GSettings*"/>
          <parameter name="key" type="const-gchar*"/>
        </parameters>
      </virtual_method>
      <method name="Apply" cname="g_settings_apply">
        <return-type type="void"/>
      </method>
      <method name="Bind" cname="g_settings_bind">
        <return-type type="void"/>
        <parameters>
          <parameter name="key" type="const-gchar*"/>
          <parameter name="_object" type="GObject*"/>
          <parameter name="property" type="const-gchar*"/>
          <parameter name="flags" type="GSettingsBindFlags"/>
        </parameters>
      </method>
      <method name="BindWithMapping" cname="g_settings_bind_with_mapping">
        <return-type type="void"/>
        <parameters>
          <parameter name="key" type="const-gchar*"/>
          <parameter name="_object" type="GObject*"/>
          <parameter name="property" type="const-gchar*"/>
          <parameter name="flags" type="GSettingsBindFlags"/>
          <parameter name="get_mapping" type="GSettingsBindGetMapping"/>
          <parameter name="set_mapping" type="GSettingsBindSetMapping"/>
          <parameter name="user_data" type="gpointer"/>
          <parameter name="destroy" type="GDestroyNotify"/>
        </parameters>
      </method>
      <method name="BindWritable" cname="g_settings_bind_writable">
        <return-type type="void"/>
        <parameters>
          <parameter name="key" type="const-gchar*"/>
          <parameter name="_object" type="GObject*"/>
          <parameter name="property" type="const-gchar*"/>
          <parameter name="inverted" type="gboolean"/>
        </parameters>
      </method>
      <method name="CreateAction" cname="g_settings_create_action">
        <return-type type="GAction*"/>
        <parameters>
          <parameter name="key" type="const-gchar*"/>
        </parameters>
      </method>
      <method name="Delay" cname="g_settings_delay">
        <return-type type="void"/>
      </method>
      <method name="Get" cname="g_settings_get">
        <return-type type="void"/>
        <parameters>
          <parameter name="key" type="const-gchar*"/>
          <parameter name="format" type="const-gchar*"/>
          <parameter name="var_args" type="va_list"/>
        </parameters>
      </method>
      <method name="GetBoolean" cname="g_settings_get_boolean">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="key" type="const-gchar*"/>
        </parameters>
      </method>
      <method name="GetChild" cname="g_settings_get_child">
        <return-type type="GSettings*"/>
        <parameters>
          <parameter name="name" type="const-gchar*"/>
        </parameters>
      </method>
      <method name="GetDouble" cname="g_settings_get_double">
        <return-type type="gdouble"/>
        <parameters>
          <parameter name="key" type="const-gchar*"/>
        </parameters>
      </method>
      <method name="GetEnum" cname="g_settings_get_enum">
        <return-type type="gint"/>
        <parameters>
          <parameter name="key" type="const-gchar*"/>
        </parameters>
      </method>
      <method name="GetFlags" cname="g_settings_get_flags">
        <return-type type="guint"/>
        <parameters>
          <parameter name="key" type="const-gchar*"/>
        </parameters>
      </method>
      <method name="GetHasUnapplied" cname="g_settings_get_has_unapplied">
        <return-type type="gboolean"/>
      </method>
      <method name="GetInt" cname="g_settings_get_int">
        <return-type type="gint"/>
        <parameters>
          <parameter name="key" type="const-gchar*"/>
        </parameters>
      </method>
      <method name="GetMapped" cname="g_settings_get_mapped">
        <return-type type="gpointer*"/>
        <parameters>
          <parameter name="key" type="const-gchar*"/>
          <parameter name="mapping" type="GSettingsGetMapping"/>
          <parameter name="user_data" type="gpointer"/>
        </parameters>
      </method>
      <method name="GetRange" cname="g_settings_get_range">
        <return-type type="GVariant*">
          <warning>missing glib:type-name</warning>
        </return-type>
        <parameters>
          <parameter name="key" type="const-gchar*"/>
        </parameters>
      </method>
      <method name="GetString" cname="g_settings_get_string">
        <return-type type="gchar*"/>
        <parameters>
          <parameter name="key" type="const-gchar*"/>
        </parameters>
      </method>
      <method name="GetStrv" cname="g_settings_get_strv">
        <return-type type="gchar***" array="true"/>
        <parameters>
          <parameter name="key" type="const-gchar*"/>
        </parameters>
      </method>
      <method name="GetUint" cname="g_settings_get_uint">
        <return-type type="guint"/>
        <parameters>
          <parameter name="key" type="const-gchar*"/>
        </parameters>
      </method>
      <method name="GetValue" cname="g_settings_get_value">
        <return-type type="GVariant*">
          <warning>missing glib:type-name</warning>
        </return-type>
        <parameters>
          <parameter name="key" type="const-gchar*"/>
        </parameters>
      </method>
      <method name="IsWritable" cname="g_settings_is_writable">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="name" type="const-gchar*"/>
        </parameters>
      </method>
      <method name="ListChildren" cname="g_settings_list_children">
        <return-type type="gchar***" array="true"/>
      </method>
      <method name="ListKeys" cname="g_settings_list_keys">
        <return-type type="gchar***" array="true"/>
      </method>
      <method name="RangeCheck" cname="g_settings_range_check">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="key" type="const-gchar*"/>
          <parameter name="value" type="GVariant*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="Reset" cname="g_settings_reset">
        <return-type type="void"/>
        <parameters>
          <parameter name="key" type="const-gchar*"/>
        </parameters>
      </method>
      <method name="Revert" cname="g_settings_revert">
        <return-type type="void"/>
      </method>
      <method name="Set" cname="g_settings_set">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="key" type="const-gchar*"/>
          <parameter name="format" type="const-gchar*"/>
          <parameter name="var_args" type="va_list"/>
        </parameters>
      </method>
      <method name="SetBoolean" cname="g_settings_set_boolean">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="key" type="const-gchar*"/>
          <parameter name="value" type="gboolean"/>
        </parameters>
      </method>
      <method name="SetDouble" cname="g_settings_set_double">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="key" type="const-gchar*"/>
          <parameter name="value" type="gdouble"/>
        </parameters>
      </method>
      <method name="SetEnum" cname="g_settings_set_enum">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="key" type="const-gchar*"/>
          <parameter name="value" type="gint"/>
        </parameters>
      </method>
      <method name="SetFlags" cname="g_settings_set_flags">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="key" type="const-gchar*"/>
          <parameter name="value" type="guint"/>
        </parameters>
      </method>
      <method name="SetInt" cname="g_settings_set_int">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="key" type="const-gchar*"/>
          <parameter name="value" type="gint"/>
        </parameters>
      </method>
      <method name="SetString" cname="g_settings_set_string">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="key" type="const-gchar*"/>
          <parameter name="value" type="const-gchar*"/>
        </parameters>
      </method>
      <method name="SetStrv" cname="g_settings_set_strv">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="key" type="const-gchar*"/>
          <parameter name="value" type="gchar**" array="true"/>
        </parameters>
      </method>
      <method name="SetUint" cname="g_settings_set_uint">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="key" type="const-gchar*"/>
          <parameter name="value" type="guint"/>
        </parameters>
      </method>
      <method name="SetValue" cname="g_settings_set_value">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="key" type="const-gchar*"/>
          <parameter name="value" type="GVariant*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <property name="DelayApply" cname="delay-apply" type="gboolean" readable="true" writable="false"/>
      <property name="HasUnapplied" cname="has-unapplied" type="gboolean" readable="true" writable="false"/>
      <property name="Path" cname="path" type="gchar*" readable="true" writable="true"/>
      <property name="Schema" cname="schema" type="gchar*" readable="true" writable="true"/>
      <property name="SchemaId" cname="schema-id" type="gchar*" readable="true" writable="true"/>
      <property name="SettingsSchema" cname="settings-schema" type="GSettingsSchema*" readable="true" writable="true"/>
      <field cname="parent_instance" name="ParentInstance" type="GObject*"/>
      <field cname="priv" name="Priv" type="GSettingsPrivate*">
        <warning>missing glib:type-name</warning>
      </field>
    </object>
    <object name="SimpleAction" cname="GSimpleAction" parent="GObject" abstract="" opaque="">
      <method name="GetType" cname="g_simple_action_get_type" shared="true">
        <return-type type="GType"/>
      </method>
      <constructor cname="g_simple_action_new">
        <parameters>
          <parameter name="name" type="const-gchar*"/>
          <parameter name="parameter_type" type="GVariantType*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </constructor>
      <constructor cname="g_simple_action_new_stateful">
        <parameters>
          <parameter name="name" type="const-gchar*"/>
          <parameter name="parameter_type" type="GVariantType*">
            <warning>missing glib:type-name</warning>
          </parameter>
          <parameter name="state" type="GVariant*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </constructor>
      <method name="SetEnabled" cname="g_simple_action_set_enabled">
        <return-type type="void"/>
        <parameters>
          <parameter name="enabled" type="gboolean"/>
        </parameters>
      </method>
      <method name="SetState" cname="g_simple_action_set_state">
        <return-type type="void"/>
        <parameters>
          <parameter name="value" type="GVariant*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <property name="Enabled" cname="enabled" type="gboolean" readable="true" writable="true"/>
      <property name="Name" cname="name" type="gchar*" readable="true" writable="true"/>
      <property name="ParameterType" cname="parameter-type" type="GVariantType*" readable="true" writable="true"/>
      <property name="State" cname="state" type="GVariant*" readable="true" writable="true"/>
      <property name="StateType" cname="state-type" type="GVariantType*" readable="true" writable="false"/>
      <signal name="Activate" cname="activate">
        <return-type type="void"/>
        <parameters>
          <parameter name="simpleaction" type="GSimpleAction**"/>
          <parameter name="parameter" type="GVariant*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </signal>
      <signal name="ChangeState" cname="change-state">
        <return-type type="void"/>
        <parameters>
          <parameter name="simpleaction" type="GSimpleAction**"/>
          <parameter name="value" type="GVariant*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </signal>
    </object>
    <object name="SimpleActionGroup" cname="GSimpleActionGroup" parent="GObject" abstract="" opaque="">
      <method name="GetType" cname="g_simple_action_group_get_type" shared="true">
        <return-type type="GType"/>
      </method>
      <constructor cname="g_simple_action_group_new" disable_void_ctor=""/>
      <method name="AddEntries" cname="g_simple_action_group_add_entries">
        <return-type type="void"/>
        <parameters>
          <parameter name="entries" type="GActionEntry*" array_len="1"/>
          <parameter name="n_entries" type="gint"/>
          <parameter name="user_data" type="gpointer"/>
        </parameters>
      </method>
      <method name="Insert" cname="g_simple_action_group_insert">
        <return-type type="void"/>
        <parameters>
          <parameter name="action" type="GAction*"/>
        </parameters>
      </method>
      <method name="Lookup" cname="g_simple_action_group_lookup">
        <return-type type="GAction*"/>
        <parameters>
          <parameter name="action_name" type="const-gchar*"/>
        </parameters>
      </method>
      <method name="Remove" cname="g_simple_action_group_remove">
        <return-type type="void"/>
        <parameters>
          <parameter name="action_name" type="const-gchar*"/>
        </parameters>
      </method>
    </object>
    <object name="SimpleAsyncResult" cname="GSimpleAsyncResult" parent="GObject" abstract="" opaque="">
      <method name="GetType" cname="g_simple_async_result_get_type" shared="true">
        <return-type type="GType"/>
      </method>
      <constructor cname="g_simple_async_result_new">
        <parameters>
          <parameter name="source_object" type="GObject*"/>
          <parameter name="callback" type="GAsyncReadyCallback"/>
          <parameter name="user_data" type="gpointer"/>
          <parameter name="source_tag" type="gpointer"/>
        </parameters>
      </constructor>
      <constructor cname="g_simple_async_result_new_error">
        <parameters>
          <parameter name="source_object" type="GObject*"/>
          <parameter name="callback" type="GAsyncReadyCallback"/>
          <parameter name="user_data" type="gpointer"/>
          <parameter name="domain" type="guint32"/>
          <parameter name="code" type="gint"/>
          <parameter name="format" type="const-gchar*"/>
          <parameter name="var_args" type="va_list"/>
        </parameters>
      </constructor>
      <constructor cname="g_simple_async_result_new_from_error">
        <parameters>
          <parameter name="source_object" type="GObject*"/>
          <parameter name="callback" type="GAsyncReadyCallback"/>
          <parameter name="user_data" type="gpointer"/>
          <parameter name="error" type="GError*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </constructor>
      <constructor cname="g_simple_async_result_new_take_error">
        <parameters>
          <parameter name="source_object" type="GObject*"/>
          <parameter name="callback" type="GAsyncReadyCallback"/>
          <parameter name="user_data" type="gpointer"/>
          <parameter name="error" type="GError*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </constructor>
      <method name="IsValid" cname="g_simple_async_result_is_valid" shared="true">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="_result" type="GAsyncResult*"/>
          <parameter name="source" type="GObject*"/>
          <parameter name="source_tag" type="gpointer"/>
        </parameters>
      </method>
      <method name="Complete" cname="g_simple_async_result_complete">
        <return-type type="void"/>
      </method>
      <method name="CompleteInIdle" cname="g_simple_async_result_complete_in_idle">
        <return-type type="void"/>
      </method>
      <method name="GetOpResGboolean" cname="g_simple_async_result_get_op_res_gboolean">
        <return-type type="gboolean"/>
      </method>
      <method name="GetOpResGpointer" cname="g_simple_async_result_get_op_res_gpointer">
        <return-type type="gpointer"/>
      </method>
      <method name="GetOpResGssize" cname="g_simple_async_result_get_op_res_gssize">
        <return-type type="gssize"/>
      </method>
      <method name="GetSourceTag" cname="g_simple_async_result_get_source_tag">
        <return-type type="gpointer"/>
      </method>
      <method name="PropagateError" cname="g_simple_async_result_propagate_error">
        <return-type type="gboolean"/>
      </method>
      <method name="RunInThread" cname="g_simple_async_result_run_in_thread">
        <return-type type="void"/>
        <parameters>
          <parameter name="func" type="GSimpleAsyncThreadFunc"/>
          <parameter name="io_priority" type="gint"/>
          <parameter name="cancellable" type="GCancellable*"/>
        </parameters>
      </method>
      <method name="SetCheckCancellable" cname="g_simple_async_result_set_check_cancellable">
        <return-type type="void"/>
        <parameters>
          <parameter name="check_cancellable" type="GCancellable*"/>
        </parameters>
      </method>
      <method name="SetError" cname="g_simple_async_result_set_error">
        <return-type type="void"/>
        <parameters>
          <parameter name="domain" type="guint32"/>
          <parameter name="code" type="gint"/>
          <parameter name="format" type="const-gchar*"/>
          <parameter name="var_args" type="va_list"/>
        </parameters>
      </method>
      <method name="SetErrorVa" cname="g_simple_async_result_set_error_va">
        <return-type type="void"/>
        <parameters>
          <parameter name="domain" type="guint32"/>
          <parameter name="code" type="gint"/>
          <parameter name="format" type="const-gchar*"/>
          <parameter name="args" type="va_list"/>
        </parameters>
      </method>
      <method name="SetFromError" cname="g_simple_async_result_set_from_error">
        <return-type type="void"/>
        <parameters>
          <parameter name="error" type="GError*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="SetHandleCancellation" cname="g_simple_async_result_set_handle_cancellation">
        <return-type type="void"/>
        <parameters>
          <parameter name="handle_cancellation" type="gboolean"/>
        </parameters>
      </method>
      <method name="SetOpResGboolean" cname="g_simple_async_result_set_op_res_gboolean">
        <return-type type="void"/>
        <parameters>
          <parameter name="op_res" type="gboolean"/>
        </parameters>
      </method>
      <method name="SetOpResGpointer" cname="g_simple_async_result_set_op_res_gpointer">
        <return-type type="void"/>
        <parameters>
          <parameter name="op_res" type="gpointer"/>
          <parameter name="destroy_op_res" type="GDestroyNotify"/>
        </parameters>
      </method>
      <method name="SetOpResGssize" cname="g_simple_async_result_set_op_res_gssize">
        <return-type type="void"/>
        <parameters>
          <parameter name="op_res" type="gssize"/>
        </parameters>
      </method>
      <method name="TakeError" cname="g_simple_async_result_take_error">
        <return-type type="void"/>
        <parameters>
          <parameter name="error" type="GError*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
    </object>
    <object name="SimplePermission" cname="GSimplePermission" parent="GPermission" abstract="" opaque="">
      <method name="GetType" cname="g_simple_permission_get_type" shared="true">
        <return-type type="GType"/>
      </method>
      <constructor cname="g_simple_permission_new">
        <parameters>
          <parameter name="allowed" type="gboolean"/>
        </parameters>
      </constructor>
    </object>
    <object name="Socket" cname="GSocket" parent="GObject" abstract="" opaque="">
      <method name="GetType" cname="g_socket_get_type" shared="true">
        <return-type type="GType"/>
      </method>
      <constructor cname="g_socket_new">
        <parameters>
          <parameter name="family" type="GSocketFamily"/>
          <parameter name="type" type="GSocketType"/>
          <parameter name="protocol" type="GSocketProtocol"/>
        </parameters>
      </constructor>
      <constructor cname="g_socket_new_from_fd">
        <parameters>
          <parameter name="fd" type="gint"/>
        </parameters>
      </constructor>
      <method name="Accept" cname="g_socket_accept">
        <return-type type="GSocket*"/>
        <parameters>
          <parameter name="cancellable" type="GCancellable*"/>
        </parameters>
      </method>
      <method name="Bind" cname="g_socket_bind">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="address" type="GSocketAddress*"/>
          <parameter name="allow_reuse" type="gboolean"/>
        </parameters>
      </method>
      <method name="CheckConnectResult" cname="g_socket_check_connect_result">
        <return-type type="gboolean"/>
      </method>
      <method name="Close" cname="g_socket_close">
        <return-type type="gboolean"/>
      </method>
      <method name="ConditionCheck" cname="g_socket_condition_check">
        <return-type type="GIOCondition"/>
        <parameters>
          <parameter name="condition" type="GIOCondition"/>
        </parameters>
      </method>
      <method name="ConditionTimedWait" cname="g_socket_condition_timed_wait">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="condition" type="GIOCondition"/>
          <parameter name="timeout" type="gint64"/>
          <parameter name="cancellable" type="GCancellable*"/>
        </parameters>
      </method>
      <method name="ConditionWait" cname="g_socket_condition_wait">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="condition" type="GIOCondition"/>
          <parameter name="cancellable" type="GCancellable*"/>
        </parameters>
      </method>
      <method name="Connect" cname="g_socket_connect">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="address" type="GSocketAddress*"/>
          <parameter name="cancellable" type="GCancellable*"/>
        </parameters>
      </method>
      <method name="ConnectionFactoryCreateConnection" cname="g_socket_connection_factory_create_connection">
        <return-type type="GSocketConnection*"/>
      </method>
      <method name="CreateSource" cname="g_socket_create_source">
        <return-type type="GSource*">
          <warning>missing glib:type-name</warning>
        </return-type>
        <parameters>
          <parameter name="condition" type="GIOCondition"/>
          <parameter name="cancellable" type="GCancellable*"/>
        </parameters>
      </method>
      <method name="GetAvailableBytes" cname="g_socket_get_available_bytes">
        <return-type type="gssize"/>
      </method>
      <method name="GetBlocking" cname="g_socket_get_blocking">
        <return-type type="gboolean"/>
      </method>
      <method name="GetBroadcast" cname="g_socket_get_broadcast">
        <return-type type="gboolean"/>
      </method>
      <method name="GetCredentials" cname="g_socket_get_credentials">
        <return-type type="GCredentials*"/>
      </method>
      <method name="GetFamily" cname="g_socket_get_family">
        <return-type type="GSocketFamily"/>
      </method>
      <method name="GetFd" cname="g_socket_get_fd">
        <return-type type="gint"/>
      </method>
      <method name="GetKeepalive" cname="g_socket_get_keepalive">
        <return-type type="gboolean"/>
      </method>
      <method name="GetListenBacklog" cname="g_socket_get_listen_backlog">
        <return-type type="gint"/>
      </method>
      <method name="GetLocalAddress" cname="g_socket_get_local_address">
        <return-type type="GSocketAddress*"/>
      </method>
      <method name="GetMulticastLoopback" cname="g_socket_get_multicast_loopback">
        <return-type type="gboolean"/>
      </method>
      <method name="GetMulticastTtl" cname="g_socket_get_multicast_ttl">
        <return-type type="guint"/>
      </method>
      <method name="GetProtocol" cname="g_socket_get_protocol">
        <return-type type="GSocketProtocol"/>
      </method>
      <method name="GetRemoteAddress" cname="g_socket_get_remote_address">
        <return-type type="GSocketAddress*"/>
      </method>
      <method name="GetSocketType" cname="g_socket_get_socket_type">
        <return-type type="GSocketType"/>
      </method>
      <method name="GetTimeout" cname="g_socket_get_timeout">
        <return-type type="guint"/>
      </method>
      <method name="GetTtl" cname="g_socket_get_ttl">
        <return-type type="guint"/>
      </method>
      <method name="IsClosed" cname="g_socket_is_closed">
        <return-type type="gboolean"/>
      </method>
      <method name="IsConnected" cname="g_socket_is_connected">
        <return-type type="gboolean"/>
      </method>
      <method name="JoinMulticastGroup" cname="g_socket_join_multicast_group">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="group" type="GInetAddress*"/>
          <parameter name="source_specific" type="gboolean"/>
          <parameter name="iface" type="const-gchar*"/>
        </parameters>
      </method>
      <method name="LeaveMulticastGroup" cname="g_socket_leave_multicast_group">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="group" type="GInetAddress*"/>
          <parameter name="source_specific" type="gboolean"/>
          <parameter name="iface" type="const-gchar*"/>
        </parameters>
      </method>
      <method name="Listen" cname="g_socket_listen">
        <return-type type="gboolean"/>
      </method>
      <method name="Receive" cname="g_socket_receive">
        <return-type type="gssize"/>
        <parameters>
          <parameter name="buffer" type="const-gchar*"/>
          <parameter name="size" type="gsize"/>
          <parameter name="cancellable" type="GCancellable*"/>
        </parameters>
      </method>
      <method name="ReceiveFrom" cname="g_socket_receive_from">
        <return-type type="gssize"/>
        <parameters>
          <parameter name="address" type="GSocketAddress*"/>
          <parameter name="buffer" type="const-gchar*" array_len="2"/>
          <parameter name="size" type="gsize"/>
          <parameter name="cancellable" type="GCancellable*"/>
        </parameters>
      </method>
      <method name="ReceiveMessage" cname="g_socket_receive_message">
        <return-type type="gssize"/>
        <parameters>
          <parameter name="address" type="GSocketAddress*"/>
          <parameter name="vectors" type="GInputVector*" array_len="2"/>
          <parameter name="num_vectors" type="gint"/>
          <parameter name="messages" type="GSocketControlMessage***" array_len="4"/>
          <parameter name="num_messages" type="gint"/>
          <parameter name="flags" type="gint"/>
          <parameter name="cancellable" type="GCancellable*"/>
        </parameters>
      </method>
      <method name="ReceiveWithBlocking" cname="g_socket_receive_with_blocking">
        <return-type type="gssize"/>
        <parameters>
          <parameter name="buffer" type="const-gchar*"/>
          <parameter name="size" type="gsize"/>
          <parameter name="blocking" type="gboolean"/>
          <parameter name="cancellable" type="GCancellable*"/>
        </parameters>
      </method>
      <method name="Send" cname="g_socket_send">
        <return-type type="gssize"/>
        <parameters>
          <parameter name="buffer" type="const-gchar*" array_len="1"/>
          <parameter name="size" type="gsize"/>
          <parameter name="cancellable" type="GCancellable*"/>
        </parameters>
      </method>
      <method name="SendMessage" cname="g_socket_send_message">
        <return-type type="gssize"/>
        <parameters>
          <parameter name="address" type="GSocketAddress*"/>
          <parameter name="vectors" type="GOutputVector*" array_len="2"/>
          <parameter name="num_vectors" type="gint"/>
          <parameter name="messages" type="GSocketControlMessage**" array_len="4"/>
          <parameter name="num_messages" type="gint"/>
          <parameter name="flags" type="gint"/>
          <parameter name="cancellable" type="GCancellable*"/>
        </parameters>
      </method>
      <method name="SendTo" cname="g_socket_send_to">
        <return-type type="gssize"/>
        <parameters>
          <parameter name="address" type="GSocketAddress*"/>
          <parameter name="buffer" type="const-gchar*" array_len="2"/>
          <parameter name="size" type="gsize"/>
          <parameter name="cancellable" type="GCancellable*"/>
        </parameters>
      </method>
      <method name="SendWithBlocking" cname="g_socket_send_with_blocking">
        <return-type type="gssize"/>
        <parameters>
          <parameter name="buffer" type="const-gchar*" array_len="1"/>
          <parameter name="size" type="gsize"/>
          <parameter name="blocking" type="gboolean"/>
          <parameter name="cancellable" type="GCancellable*"/>
        </parameters>
      </method>
      <method name="SetBlocking" cname="g_socket_set_blocking">
        <return-type type="void"/>
        <parameters>
          <parameter name="blocking" type="gboolean"/>
        </parameters>
      </method>
      <method name="SetBroadcast" cname="g_socket_set_broadcast">
        <return-type type="void"/>
        <parameters>
          <parameter name="broadcast" type="gboolean"/>
        </parameters>
      </method>
      <method name="SetKeepalive" cname="g_socket_set_keepalive">
        <return-type type="void"/>
        <parameters>
          <parameter name="keepalive" type="gboolean"/>
        </parameters>
      </method>
      <method name="SetListenBacklog" cname="g_socket_set_listen_backlog">
        <return-type type="void"/>
        <parameters>
          <parameter name="backlog" type="gint"/>
        </parameters>
      </method>
      <method name="SetMulticastLoopback" cname="g_socket_set_multicast_loopback">
        <return-type type="void"/>
        <parameters>
          <parameter name="loopback" type="gboolean"/>
        </parameters>
      </method>
      <method name="SetMulticastTtl" cname="g_socket_set_multicast_ttl">
        <return-type type="void"/>
        <parameters>
          <parameter name="ttl" type="guint"/>
        </parameters>
      </method>
      <method name="SetTimeout" cname="g_socket_set_timeout">
        <return-type type="void"/>
        <parameters>
          <parameter name="timeout" type="guint"/>
        </parameters>
      </method>
      <method name="SetTtl" cname="g_socket_set_ttl">
        <return-type type="void"/>
        <parameters>
          <parameter name="ttl" type="guint"/>
        </parameters>
      </method>
      <method name="Shutdown" cname="g_socket_shutdown">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="shutdown_read" type="gboolean"/>
          <parameter name="shutdown_write" type="gboolean"/>
        </parameters>
      </method>
      <method name="SpeaksIpv4" cname="g_socket_speaks_ipv4">
        <return-type type="gboolean"/>
      </method>
      <property name="Blocking" cname="blocking" type="gboolean" readable="true" writable="true"/>
      <property name="Broadcast" cname="broadcast" type="gboolean" readable="true" writable="true"/>
      <property name="Family" cname="family" type="GSocketFamily" readable="true" writable="true"/>
      <property name="Fd" cname="fd" type="gint" readable="true" writable="true"/>
      <property name="Keepalive" cname="keepalive" type="gboolean" readable="true" writable="true"/>
      <property name="ListenBacklog" cname="listen-backlog" type="gint" readable="true" writable="true"/>
      <property name="LocalAddress" cname="local-address" type="GSocketAddress*" readable="true" writable="false"/>
      <property name="MulticastLoopback" cname="multicast-loopback" type="gboolean" readable="true" writable="true"/>
      <property name="MulticastTtl" cname="multicast-ttl" type="guint" readable="true" writable="true"/>
      <property name="Protocol" cname="protocol" type="GSocketProtocol" readable="true" writable="true"/>
      <property name="RemoteAddress" cname="remote-address" type="GSocketAddress*" readable="true" writable="false"/>
      <property name="Timeout" cname="timeout" type="guint" readable="true" writable="true"/>
      <property name="Ttl" cname="ttl" type="guint" readable="true" writable="true"/>
      <property name="Type" cname="type" type="GSocketType" readable="true" writable="true"/>
      <field cname="parent_instance" name="ParentInstance" type="GObject*"/>
      <field cname="priv" name="Priv" type="GSocketPrivate*">
        <warning>missing glib:type-name</warning>
      </field>
    </object>
    <object name="SocketAddress" cname="GSocketAddress" parent="GObject" abstract="1" opaque="">
      <method name="GetType" cname="g_socket_address_get_type" shared="true">
        <return-type type="GType"/>
      </method>
      <constructor cname="g_socket_address_new_from_native">
        <parameters>
          <parameter name="native" type="gpointer"/>
          <parameter name="len" type="gsize"/>
        </parameters>
      </constructor>
      <virtual_method name="GetFamily" cname="get_family">
        <return-type type="GSocketFamily"/>
      </virtual_method>
      <virtual_method name="GetNativeSize" cname="get_native_size">
        <return-type type="gssize"/>
      </virtual_method>
      <virtual_method name="ToNative" cname="to_native">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="socket_address" type="GSocketAddress*"/>
          <parameter name="dest" type="gpointer"/>
          <parameter name="destlen" type="gsize"/>
        </parameters>
      </virtual_method>
      <method name="GetFamily" cname="g_socket_address_get_family">
        <return-type type="GSocketFamily"/>
      </method>
      <method name="GetNativeSize" cname="g_socket_address_get_native_size">
        <return-type type="gssize"/>
      </method>
      <method name="ToNative" cname="g_socket_address_to_native">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="dest" type="gpointer"/>
          <parameter name="destlen" type="gsize"/>
        </parameters>
      </method>
      <property name="Family" cname="family" type="GSocketFamily" readable="true" writable="false"/>
      <field cname="parent_instance" name="ParentInstance" type="GObject*"/>
    </object>
    <object name="SocketAddressEnumerator" cname="GSocketAddressEnumerator" parent="GObject" abstract="1" opaque="">
      <method name="GetType" cname="g_socket_address_enumerator_get_type" shared="true">
        <return-type type="GType"/>
      </method>
      <virtual_method name="Next" cname="next">
        <return-type type="GSocketAddress*"/>
        <parameters>
          <parameter name="socket_address_enumerator" type="GSocketAddressEnumerator*"/>
          <parameter name="cancellable" type="GCancellable*"/>
        </parameters>
      </virtual_method>
      <virtual_method name="NextAsync" cname="next_async">
        <return-type type="void"/>
        <parameters>
          <parameter name="socket_address_enumerator" type="GSocketAddressEnumerator*"/>
          <parameter name="cancellable" type="GCancellable*"/>
          <parameter name="callback" type="GAsyncReadyCallback"/>
          <parameter name="user_data" type="gpointer"/>
        </parameters>
      </virtual_method>
      <virtual_method name="NextFinish" cname="next_finish">
        <return-type type="GSocketAddress*"/>
        <parameters>
          <parameter name="socket_address_enumerator" type="GSocketAddressEnumerator*"/>
          <parameter name="_result" type="GAsyncResult*"/>
        </parameters>
      </virtual_method>
      <method name="Next" cname="g_socket_address_enumerator_next">
        <return-type type="GSocketAddress*"/>
        <parameters>
          <parameter name="cancellable" type="GCancellable*"/>
        </parameters>
      </method>
      <method name="NextAsync" cname="g_socket_address_enumerator_next_async">
        <return-type type="void"/>
        <parameters>
          <parameter name="cancellable" type="GCancellable*"/>
          <parameter name="callback" type="GAsyncReadyCallback"/>
          <parameter name="user_data" type="gpointer"/>
        </parameters>
      </method>
      <method name="NextFinish" cname="g_socket_address_enumerator_next_finish">
        <return-type type="GSocketAddress*"/>
        <parameters>
          <parameter name="_result" type="GAsyncResult*"/>
        </parameters>
      </method>
      <field cname="parent_instance" name="ParentInstance" type="GObject*"/>
    </object>
    <object name="SocketClient" cname="GSocketClient" parent="GObject" abstract="" opaque="">
      <method name="GetType" cname="g_socket_client_get_type" shared="true">
        <return-type type="GType"/>
      </method>
      <constructor cname="g_socket_client_new" disable_void_ctor=""/>
      <virtual_method name="Event" cname="event">
        <return-type type="void"/>
        <parameters>
          <parameter name="socket_client" type="GSocketClient*"/>
          <parameter name="event" type="GSocketClientEvent"/>
          <parameter name="connectable" type="GSocketConnectable*"/>
          <parameter name="connection" type="GIOStream*"/>
        </parameters>
      </virtual_method>
      <method name="AddApplicationProxy" cname="g_socket_client_add_application_proxy">
        <return-type type="void"/>
        <parameters>
          <parameter name="protocol" type="const-gchar*"/>
        </parameters>
      </method>
      <method name="Connect" cname="g_socket_client_connect">
        <return-type type="GSocketConnection*"/>
        <parameters>
          <parameter name="connectable" type="GSocketConnectable*"/>
          <parameter name="cancellable" type="GCancellable*"/>
        </parameters>
      </method>
      <method name="ConnectAsync" cname="g_socket_client_connect_async">
        <return-type type="void"/>
        <parameters>
          <parameter name="connectable" type="GSocketConnectable*"/>
          <parameter name="cancellable" type="GCancellable*"/>
          <parameter name="callback" type="GAsyncReadyCallback"/>
          <parameter name="user_data" type="gpointer"/>
        </parameters>
      </method>
      <method name="ConnectFinish" cname="g_socket_client_connect_finish">
        <return-type type="GSocketConnection*"/>
        <parameters>
          <parameter name="_result" type="GAsyncResult*"/>
        </parameters>
      </method>
      <method name="ConnectToHost" cname="g_socket_client_connect_to_host">
        <return-type type="GSocketConnection*"/>
        <parameters>
          <parameter name="host_and_port" type="const-gchar*"/>
          <parameter name="default_port" type="guint16"/>
          <parameter name="cancellable" type="GCancellable*"/>
        </parameters>
      </method>
      <method name="ConnectToHostAsync" cname="g_socket_client_connect_to_host_async">
        <return-type type="void"/>
        <parameters>
          <parameter name="host_and_port" type="const-gchar*"/>
          <parameter name="default_port" type="guint16"/>
          <parameter name="cancellable" type="GCancellable*"/>
          <parameter name="callback" type="GAsyncReadyCallback"/>
          <parameter name="user_data" type="gpointer"/>
        </parameters>
      </method>
      <method name="ConnectToHostFinish" cname="g_socket_client_connect_to_host_finish">
        <return-type type="GSocketConnection*"/>
        <parameters>
          <parameter name="_result" type="GAsyncResult*"/>
        </parameters>
      </method>
      <method name="ConnectToService" cname="g_socket_client_connect_to_service">
        <return-type type="GSocketConnection*"/>
        <parameters>
          <parameter name="domain" type="const-gchar*"/>
          <parameter name="service" type="const-gchar*"/>
          <parameter name="cancellable" type="GCancellable*"/>
        </parameters>
      </method>
      <method name="ConnectToServiceAsync" cname="g_socket_client_connect_to_service_async">
        <return-type type="void"/>
        <parameters>
          <parameter name="domain" type="const-gchar*"/>
          <parameter name="service" type="const-gchar*"/>
          <parameter name="cancellable" type="GCancellable*"/>
          <parameter name="callback" type="GAsyncReadyCallback"/>
          <parameter name="user_data" type="gpointer"/>
        </parameters>
      </method>
      <method name="ConnectToServiceFinish" cname="g_socket_client_connect_to_service_finish">
        <return-type type="GSocketConnection*"/>
        <parameters>
          <parameter name="_result" type="GAsyncResult*"/>
        </parameters>
      </method>
      <method name="ConnectToUri" cname="g_socket_client_connect_to_uri">
        <return-type type="GSocketConnection*"/>
        <parameters>
          <parameter name="uri" type="const-gchar*"/>
          <parameter name="default_port" type="guint16"/>
          <parameter name="cancellable" type="GCancellable*"/>
        </parameters>
      </method>
      <method name="ConnectToUriAsync" cname="g_socket_client_connect_to_uri_async">
        <return-type type="void"/>
        <parameters>
          <parameter name="uri" type="const-gchar*"/>
          <parameter name="default_port" type="guint16"/>
          <parameter name="cancellable" type="GCancellable*"/>
          <parameter name="callback" type="GAsyncReadyCallback"/>
          <parameter name="user_data" type="gpointer"/>
        </parameters>
      </method>
      <method name="ConnectToUriFinish" cname="g_socket_client_connect_to_uri_finish">
        <return-type type="GSocketConnection*"/>
        <parameters>
          <parameter name="_result" type="GAsyncResult*"/>
        </parameters>
      </method>
      <method name="GetEnableProxy" cname="g_socket_client_get_enable_proxy">
        <return-type type="gboolean"/>
      </method>
      <method name="GetFamily" cname="g_socket_client_get_family">
        <return-type type="GSocketFamily"/>
      </method>
      <method name="GetLocalAddress" cname="g_socket_client_get_local_address">
        <return-type type="GSocketAddress*"/>
      </method>
      <method name="GetProtocol" cname="g_socket_client_get_protocol">
        <return-type type="GSocketProtocol"/>
      </method>
      <method name="GetSocketType" cname="g_socket_client_get_socket_type">
        <return-type type="GSocketType"/>
      </method>
      <method name="GetTimeout" cname="g_socket_client_get_timeout">
        <return-type type="guint"/>
      </method>
      <method name="GetTls" cname="g_socket_client_get_tls">
        <return-type type="gboolean"/>
      </method>
      <method name="GetTlsValidationFlags" cname="g_socket_client_get_tls_validation_flags">
        <return-type type="GTlsCertificateFlags"/>
      </method>
      <method name="SetEnableProxy" cname="g_socket_client_set_enable_proxy">
        <return-type type="void"/>
        <parameters>
          <parameter name="enable" type="gboolean"/>
        </parameters>
      </method>
      <method name="SetFamily" cname="g_socket_client_set_family">
        <return-type type="void"/>
        <parameters>
          <parameter name="family" type="GSocketFamily"/>
        </parameters>
      </method>
      <method name="SetLocalAddress" cname="g_socket_client_set_local_address">
        <return-type type="void"/>
        <parameters>
          <parameter name="address" type="GSocketAddress*"/>
        </parameters>
      </method>
      <method name="SetProtocol" cname="g_socket_client_set_protocol">
        <return-type type="void"/>
        <parameters>
          <parameter name="protocol" type="GSocketProtocol"/>
        </parameters>
      </method>
      <method name="SetSocketType" cname="g_socket_client_set_socket_type">
        <return-type type="void"/>
        <parameters>
          <parameter name="type" type="GSocketType"/>
        </parameters>
      </method>
      <method name="SetTimeout" cname="g_socket_client_set_timeout">
        <return-type type="void"/>
        <parameters>
          <parameter name="timeout" type="guint"/>
        </parameters>
      </method>
      <method name="SetTls" cname="g_socket_client_set_tls">
        <return-type type="void"/>
        <parameters>
          <parameter name="tls" type="gboolean"/>
        </parameters>
      </method>
      <method name="SetTlsValidationFlags" cname="g_socket_client_set_tls_validation_flags">
        <return-type type="void"/>
        <parameters>
          <parameter name="flags" type="GTlsCertificateFlags"/>
        </parameters>
      </method>
      <property name="EnableProxy" cname="enable-proxy" type="gboolean" readable="true" writable="true"/>
      <property name="Family" cname="family" type="GSocketFamily" readable="true" writable="true"/>
      <property name="LocalAddress" cname="local-address" type="GSocketAddress*" readable="true" writable="true"/>
      <property name="Protocol" cname="protocol" type="GSocketProtocol" readable="true" writable="true"/>
      <property name="Timeout" cname="timeout" type="guint" readable="true" writable="true"/>
      <property name="Tls" cname="tls" type="gboolean" readable="true" writable="true"/>
      <property name="TlsValidationFlags" cname="tls-validation-flags" type="GTlsCertificateFlags" readable="true" writable="true"/>
      <property name="Type" cname="type" type="GSocketType" readable="true" writable="true"/>
      <field cname="parent_instance" name="ParentInstance" type="GObject*"/>
      <field cname="priv" name="Priv" type="GSocketClientPrivate*">
        <warning>missing glib:type-name</warning>
      </field>
    </object>
    <object name="SocketConnection" cname="GSocketConnection" parent="GIOStream" abstract="" opaque="">
      <method name="GetType" cname="g_socket_connection_get_type" shared="true">
        <return-type type="GType"/>
      </method>
      <method name="FactoryLookupType" cname="g_socket_connection_factory_lookup_type" shared="true">
        <return-type type="GType"/>
        <parameters>
          <parameter name="family" type="GSocketFamily"/>
          <parameter name="type" type="GSocketType"/>
          <parameter name="protocol_id" type="gint"/>
        </parameters>
      </method>
      <method name="FactoryRegisterType" cname="g_socket_connection_factory_register_type" shared="true">
        <return-type type="void"/>
        <parameters>
          <parameter name="g_type" type="GType"/>
          <parameter name="family" type="GSocketFamily"/>
          <parameter name="type" type="GSocketType"/>
          <parameter name="protocol" type="gint"/>
        </parameters>
      </method>
      <method name="Connect" cname="g_socket_connection_connect">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="address" type="GSocketAddress*"/>
          <parameter name="cancellable" type="GCancellable*"/>
        </parameters>
      </method>
      <method name="ConnectAsync" cname="g_socket_connection_connect_async">
        <return-type type="void"/>
        <parameters>
          <parameter name="address" type="GSocketAddress*"/>
          <parameter name="cancellable" type="GCancellable*"/>
          <parameter name="callback" type="GAsyncReadyCallback"/>
          <parameter name="user_data" type="gpointer"/>
        </parameters>
      </method>
      <method name="ConnectFinish" cname="g_socket_connection_connect_finish">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="_result" type="GAsyncResult*"/>
        </parameters>
      </method>
      <method name="GetLocalAddress" cname="g_socket_connection_get_local_address">
        <return-type type="GSocketAddress*"/>
      </method>
      <method name="GetRemoteAddress" cname="g_socket_connection_get_remote_address">
        <return-type type="GSocketAddress*"/>
      </method>
      <method name="GetSocket" cname="g_socket_connection_get_socket">
        <return-type type="GSocket*"/>
      </method>
      <method name="IsConnected" cname="g_socket_connection_is_connected">
        <return-type type="gboolean"/>
      </method>
      <property name="Socket" cname="socket" type="GSocket*" readable="true" writable="true"/>
      <field cname="parent_instance" name="ParentInstance" type="GIOStream*"/>
      <field cname="priv" name="Priv" type="GSocketConnectionPrivate*">
        <warning>missing glib:type-name</warning>
      </field>
    </object>
    <object name="SocketControlMessage" cname="GSocketControlMessage" parent="GObject" abstract="1" opaque="">
      <method name="GetType" cname="g_socket_control_message_get_type" shared="true">
        <return-type type="GType"/>
      </method>
      <method name="Deserialize" cname="g_socket_control_message_deserialize" shared="true">
        <return-type type="GSocketControlMessage*"/>
        <parameters>
          <parameter name="level" type="gint"/>
          <parameter name="type" type="gint"/>
          <parameter name="size" type="gsize"/>
          <parameter name="data" type="gpointer" array_len="2"/>
        </parameters>
      </method>
      <virtual_method name="GetLevel" cname="get_level">
        <return-type type="gint"/>
      </virtual_method>
      <virtual_method name="GetSize" cname="get_size">
        <return-type type="gsize"/>
      </virtual_method>
      <virtual_method name="GetType" cname="get_type">
        <return-type type="gint"/>
      </virtual_method>
      <virtual_method name="Serialize" cname="serialize">
        <return-type type="void"/>
        <parameters>
          <parameter name="socket_control_message" type="GSocketControlMessage*"/>
          <parameter name="data" type="gpointer"/>
        </parameters>
      </virtual_method>
      <method name="GetLevel" cname="g_socket_control_message_get_level">
        <return-type type="gint"/>
      </method>
      <method name="GetMsgType" cname="g_socket_control_message_get_msg_type">
        <return-type type="gint"/>
      </method>
      <method name="GetSize" cname="g_socket_control_message_get_size">
        <return-type type="gsize"/>
      </method>
      <method name="Serialize" cname="g_socket_control_message_serialize">
        <return-type type="void"/>
        <parameters>
          <parameter name="data" type="gpointer"/>
        </parameters>
      </method>
      <field cname="parent_instance" name="ParentInstance" type="GObject*"/>
      <field cname="priv" name="Priv" type="GSocketControlMessagePrivate*">
        <warning>missing glib:type-name</warning>
      </field>
    </object>
    <object name="SocketListener" cname="GSocketListener" parent="GObject" abstract="" opaque="">
      <method name="GetType" cname="g_socket_listener_get_type" shared="true">
        <return-type type="GType"/>
      </method>
      <constructor cname="g_socket_listener_new" disable_void_ctor=""/>
      <virtual_method name="Changed" cname="changed">
        <return-type type="void"/>
      </virtual_method>
      <method name="Accept" cname="g_socket_listener_accept">
        <return-type type="GSocketConnection*"/>
        <parameters>
          <parameter name="source_object" type="GObject*"/>
          <parameter name="cancellable" type="GCancellable*"/>
        </parameters>
      </method>
      <method name="AcceptAsync" cname="g_socket_listener_accept_async">
        <return-type type="void"/>
        <parameters>
          <parameter name="cancellable" type="GCancellable*"/>
          <parameter name="callback" type="GAsyncReadyCallback"/>
          <parameter name="user_data" type="gpointer"/>
        </parameters>
      </method>
      <method name="AcceptFinish" cname="g_socket_listener_accept_finish">
        <return-type type="GSocketConnection*"/>
        <parameters>
          <parameter name="_result" type="GAsyncResult*"/>
          <parameter name="source_object" type="GObject*"/>
        </parameters>
      </method>
      <method name="AcceptSocket" cname="g_socket_listener_accept_socket">
        <return-type type="GSocket*"/>
        <parameters>
          <parameter name="source_object" type="GObject*"/>
          <parameter name="cancellable" type="GCancellable*"/>
        </parameters>
      </method>
      <method name="AcceptSocketAsync" cname="g_socket_listener_accept_socket_async">
        <return-type type="void"/>
        <parameters>
          <parameter name="cancellable" type="GCancellable*"/>
          <parameter name="callback" type="GAsyncReadyCallback"/>
          <parameter name="user_data" type="gpointer"/>
        </parameters>
      </method>
      <method name="AcceptSocketFinish" cname="g_socket_listener_accept_socket_finish">
        <return-type type="GSocket*"/>
        <parameters>
          <parameter name="_result" type="GAsyncResult*"/>
          <parameter name="source_object" type="GObject*"/>
        </parameters>
      </method>
      <method name="AddAddress" cname="g_socket_listener_add_address">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="address" type="GSocketAddress*"/>
          <parameter name="type" type="GSocketType"/>
          <parameter name="protocol" type="GSocketProtocol"/>
          <parameter name="source_object" type="GObject*"/>
          <parameter name="effective_address" type="GSocketAddress*"/>
        </parameters>
      </method>
      <method name="AddAnyInetPort" cname="g_socket_listener_add_any_inet_port">
        <return-type type="guint16"/>
        <parameters>
          <parameter name="source_object" type="GObject*"/>
        </parameters>
      </method>
      <method name="AddInetPort" cname="g_socket_listener_add_inet_port">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="port" type="guint16"/>
          <parameter name="source_object" type="GObject*"/>
        </parameters>
      </method>
      <method name="AddSocket" cname="g_socket_listener_add_socket">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="socket" type="GSocket*"/>
          <parameter name="source_object" type="GObject*"/>
        </parameters>
      </method>
      <method name="Close" cname="g_socket_listener_close">
        <return-type type="void"/>
      </method>
      <method name="SetBacklog" cname="g_socket_listener_set_backlog">
        <return-type type="void"/>
        <parameters>
          <parameter name="listen_backlog" type="gint"/>
        </parameters>
      </method>
      <property name="ListenBacklog" cname="listen-backlog" type="gint" readable="true" writable="true"/>
      <field cname="parent_instance" name="ParentInstance" type="GObject*"/>
      <field cname="priv" name="Priv" type="GSocketListenerPrivate*">
        <warning>missing glib:type-name</warning>
      </field>
    </object>
    <object name="SocketService" cname="GSocketService" parent="GSocketListener" abstract="" opaque="">
      <method name="GetType" cname="g_socket_service_get_type" shared="true">
        <return-type type="GType"/>
      </method>
      <constructor cname="g_socket_service_new" disable_void_ctor=""/>
      <virtual_method name="Incoming" cname="incoming">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="socket_service" type="GSocketService*"/>
          <parameter name="connection" type="GSocketConnection*"/>
          <parameter name="source_object" type="GObject*"/>
        </parameters>
      </virtual_method>
      <method name="IsActive" cname="g_socket_service_is_active">
        <return-type type="gboolean"/>
      </method>
      <method name="Start" cname="g_socket_service_start">
        <return-type type="void"/>
      </method>
      <method name="Stop" cname="g_socket_service_stop">
        <return-type type="void"/>
      </method>
      <field cname="parent_instance" name="ParentInstance" type="GSocketListener*"/>
      <field cname="priv" name="Priv" type="GSocketServicePrivate*">
        <warning>missing glib:type-name</warning>
      </field>
    </object>
    <object name="TcpConnection" cname="GTcpConnection" parent="GSocketConnection" abstract="" opaque="">
      <method name="GetType" cname="g_tcp_connection_get_type" shared="true">
        <return-type type="GType"/>
      </method>
      <method name="GetGracefulDisconnect" cname="g_tcp_connection_get_graceful_disconnect">
        <return-type type="gboolean"/>
      </method>
      <method name="SetGracefulDisconnect" cname="g_tcp_connection_set_graceful_disconnect">
        <return-type type="void"/>
        <parameters>
          <parameter name="graceful_disconnect" type="gboolean"/>
        </parameters>
      </method>
      <property name="GracefulDisconnect" cname="graceful-disconnect" type="gboolean" readable="true" writable="true"/>
      <field cname="parent_instance" name="ParentInstance" type="GSocketConnection*"/>
      <field cname="priv" name="Priv" type="GTcpConnectionPrivate*">
        <warning>missing glib:type-name</warning>
      </field>
    </object>
    <object name="TcpWrapperConnection" cname="GTcpWrapperConnection" parent="GTcpConnection" abstract="" opaque="">
      <method name="GetType" cname="g_tcp_wrapper_connection_get_type" shared="true">
        <return-type type="GType"/>
      </method>
      <constructor cname="g_tcp_wrapper_connection_new">
        <parameters>
          <parameter name="base_io_stream" type="GIOStream*"/>
          <parameter name="socket" type="GSocket*"/>
        </parameters>
      </constructor>
      <method name="GetBaseIoStream" cname="g_tcp_wrapper_connection_get_base_io_stream">
        <return-type type="GIOStream*"/>
      </method>
      <property name="BaseIoStream" cname="base-io-stream" type="GIOStream*" readable="true" writable="true"/>
      <field cname="parent_instance" name="ParentInstance" type="GTcpConnection*"/>
      <field cname="priv" name="Priv" type="GTcpWrapperConnectionPrivate*">
        <warning>missing glib:type-name</warning>
      </field>
    </object>
    <object name="ThemedIcon" cname="GThemedIcon" parent="GObject" abstract="" opaque="">
      <method name="GetType" cname="g_themed_icon_get_type" shared="true">
        <return-type type="GType"/>
      </method>
      <constructor cname="g_themed_icon_new">
        <parameters>
          <parameter name="iconname" type="const-gchar*"/>
        </parameters>
      </constructor>
      <constructor cname="g_themed_icon_new_from_names">
        <parameters>
          <parameter name="iconnames" type="char**" array_len="1"/>
          <parameter name="len" type="gint"/>
        </parameters>
      </constructor>
      <constructor cname="g_themed_icon_new_with_default_fallbacks">
        <parameters>
          <parameter name="iconname" type="const-gchar*"/>
        </parameters>
      </constructor>
      <method name="AppendName" cname="g_themed_icon_append_name">
        <return-type type="void"/>
        <parameters>
          <parameter name="iconname" type="const-gchar*"/>
        </parameters>
      </method>
      <method name="GetNames" cname="g_themed_icon_get_names">
        <return-type type="gchar**" array="true"/>
      </method>
      <method name="PrependName" cname="g_themed_icon_prepend_name">
        <return-type type="void"/>
        <parameters>
          <parameter name="iconname" type="const-gchar*"/>
        </parameters>
      </method>
      <property name="Name" cname="name" type="gchar*" readable="true" writable="true"/>
      <property name="UseDefaultFallbacks" cname="use-default-fallbacks" type="gboolean" readable="true" writable="true"/>
    </object>
    <object name="ThreadedSocketService" cname="GThreadedSocketService" parent="GSocketService" abstract="" opaque="">
      <method name="GetType" cname="g_threaded_socket_service_get_type" shared="true">
        <return-type type="GType"/>
      </method>
      <constructor cname="g_threaded_socket_service_new">
        <parameters>
          <parameter name="max_threads" type="gint"/>
        </parameters>
      </constructor>
      <virtual_method name="Run" cname="run">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="threaded_socket_service" type="GThreadedSocketService*"/>
          <parameter name="connection" type="GSocketConnection*"/>
          <parameter name="source_object" type="GObject*"/>
        </parameters>
      </virtual_method>
      <property name="MaxThreads" cname="max-threads" type="gint" readable="true" writable="true"/>
      <field cname="parent_instance" name="ParentInstance" type="GSocketService*"/>
      <field cname="priv" name="Priv" type="GThreadedSocketServicePrivate*">
        <warning>missing glib:type-name</warning>
      </field>
    </object>
    <object name="TlsCertificate" cname="GTlsCertificate" parent="GObject" abstract="1" opaque="">
      <method name="GetType" cname="g_tls_certificate_get_type" shared="true">
        <return-type type="GType"/>
      </method>
      <constructor cname="g_tls_certificate_new_from_file">
        <parameters>
          <parameter name="file" type="const-gchar*"/>
        </parameters>
      </constructor>
      <constructor cname="g_tls_certificate_new_from_files">
        <parameters>
          <parameter name="cert_file" type="const-gchar*"/>
          <parameter name="key_file" type="const-gchar*"/>
        </parameters>
      </constructor>
      <constructor cname="g_tls_certificate_new_from_pem">
        <parameters>
          <parameter name="data" type="const-gchar*"/>
          <parameter name="length" type="gssize"/>
        </parameters>
      </constructor>
      <method name="ListNewFromFile" cname="g_tls_certificate_list_new_from_file" shared="true">
        <return-type type="GList*">
          <warning>missing glib:type-name</warning>
        </return-type>
        <parameters>
          <parameter name="file" type="const-gchar*"/>
        </parameters>
      </method>
      <virtual_method name="Verify" cname="verify">
        <return-type type="GTlsCertificateFlags"/>
        <parameters>
          <parameter name="tls_certificate" type="GTlsCertificate*"/>
          <parameter name="identity" type="GSocketConnectable*"/>
          <parameter name="trusted_ca" type="GTlsCertificate*"/>
        </parameters>
      </virtual_method>
      <method name="GetIssuer" cname="g_tls_certificate_get_issuer">
        <return-type type="GTlsCertificate*"/>
      </method>
      <method name="Verify" cname="g_tls_certificate_verify">
        <return-type type="GTlsCertificateFlags"/>
        <parameters>
          <parameter name="identity" type="GSocketConnectable*"/>
          <parameter name="trusted_ca" type="GTlsCertificate*"/>
        </parameters>
      </method>
      <property name="CertificatePem" cname="certificate-pem" type="gchar*" readable="true" writable="true"/>
      <property name="Issuer" cname="issuer" type="GTlsCertificate*" readable="true" writable="true"/>
      <property name="PrivateKeyPem" cname="private-key-pem" type="gchar*" readable="true" writable="true"/>
      <field cname="parent_instance" name="ParentInstance" type="GObject*"/>
      <field cname="priv" name="Priv" type="GTlsCertificatePrivate*">
        <warning>missing glib:type-name</warning>
      </field>
    </object>
    <object name="TlsConnection" cname="GTlsConnection" parent="GIOStream" abstract="1" opaque="">
      <method name="GetType" cname="g_tls_connection_get_type" shared="true">
        <return-type type="GType"/>
      </method>
      <virtual_method name="AcceptCertificate" cname="accept_certificate">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="tls_connection" type="GTlsConnection*"/>
          <parameter name="peer_cert" type="GTlsCertificate*"/>
          <parameter name="errors" type="GTlsCertificateFlags"/>
        </parameters>
      </virtual_method>
      <virtual_method name="Handshake" cname="handshake">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="tls_connection" type="GTlsConnection*"/>
          <parameter name="cancellable" type="GCancellable*"/>
        </parameters>
      </virtual_method>
      <virtual_method name="HandshakeAsync" cname="handshake_async">
        <return-type type="void"/>
        <parameters>
          <parameter name="tls_connection" type="GTlsConnection*"/>
          <parameter name="io_priority" type="gint"/>
          <parameter name="cancellable" type="GCancellable*"/>
          <parameter name="callback" type="GAsyncReadyCallback"/>
          <parameter name="user_data" type="gpointer"/>
        </parameters>
      </virtual_method>
      <virtual_method name="HandshakeFinish" cname="handshake_finish">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="tls_connection" type="GTlsConnection*"/>
          <parameter name="_result" type="GAsyncResult*"/>
        </parameters>
      </virtual_method>
      <method name="EmitAcceptCertificate" cname="g_tls_connection_emit_accept_certificate">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="peer_cert" type="GTlsCertificate*"/>
          <parameter name="errors" type="GTlsCertificateFlags"/>
        </parameters>
      </method>
      <method name="GetCertificate" cname="g_tls_connection_get_certificate">
        <return-type type="GTlsCertificate*"/>
      </method>
      <method name="GetDatabase" cname="g_tls_connection_get_database">
        <return-type type="GTlsDatabase*"/>
      </method>
      <method name="GetInteraction" cname="g_tls_connection_get_interaction">
        <return-type type="GTlsInteraction*"/>
      </method>
      <method name="GetPeerCertificate" cname="g_tls_connection_get_peer_certificate">
        <return-type type="GTlsCertificate*"/>
      </method>
      <method name="GetPeerCertificateErrors" cname="g_tls_connection_get_peer_certificate_errors">
        <return-type type="GTlsCertificateFlags"/>
      </method>
      <method name="GetRehandshakeMode" cname="g_tls_connection_get_rehandshake_mode">
        <return-type type="GTlsRehandshakeMode"/>
      </method>
      <method name="GetRequireCloseNotify" cname="g_tls_connection_get_require_close_notify">
        <return-type type="gboolean"/>
      </method>
      <method name="GetUseSystemCertdb" cname="g_tls_connection_get_use_system_certdb">
        <return-type type="gboolean"/>
      </method>
      <method name="Handshake" cname="g_tls_connection_handshake">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="cancellable" type="GCancellable*"/>
        </parameters>
      </method>
      <method name="HandshakeAsync" cname="g_tls_connection_handshake_async">
        <return-type type="void"/>
        <parameters>
          <parameter name="io_priority" type="gint"/>
          <parameter name="cancellable" type="GCancellable*"/>
          <parameter name="callback" type="GAsyncReadyCallback"/>
          <parameter name="user_data" type="gpointer"/>
        </parameters>
      </method>
      <method name="HandshakeFinish" cname="g_tls_connection_handshake_finish">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="_result" type="GAsyncResult*"/>
        </parameters>
      </method>
      <method name="SetCertificate" cname="g_tls_connection_set_certificate">
        <return-type type="void"/>
        <parameters>
          <parameter name="certificate" type="GTlsCertificate*"/>
        </parameters>
      </method>
      <method name="SetDatabase" cname="g_tls_connection_set_database">
        <return-type type="void"/>
        <parameters>
          <parameter name="database" type="GTlsDatabase*"/>
        </parameters>
      </method>
      <method name="SetInteraction" cname="g_tls_connection_set_interaction">
        <return-type type="void"/>
        <parameters>
          <parameter name="interaction" type="GTlsInteraction*"/>
        </parameters>
      </method>
      <method name="SetRehandshakeMode" cname="g_tls_connection_set_rehandshake_mode">
        <return-type type="void"/>
        <parameters>
          <parameter name="mode" type="GTlsRehandshakeMode"/>
        </parameters>
      </method>
      <method name="SetRequireCloseNotify" cname="g_tls_connection_set_require_close_notify">
        <return-type type="void"/>
        <parameters>
          <parameter name="require_close_notify" type="gboolean"/>
        </parameters>
      </method>
      <method name="SetUseSystemCertdb" cname="g_tls_connection_set_use_system_certdb">
        <return-type type="void"/>
        <parameters>
          <parameter name="use_system_certdb" type="gboolean"/>
        </parameters>
      </method>
      <property name="BaseIoStream" cname="base-io-stream" type="GIOStream*" readable="true" writable="true"/>
      <property name="Certificate" cname="certificate" type="GTlsCertificate*" readable="true" writable="true"/>
      <property name="Database" cname="database" type="GTlsDatabase*" readable="true" writable="true"/>
      <property name="Interaction" cname="interaction" type="GTlsInteraction*" readable="true" writable="true"/>
      <property name="PeerCertificate" cname="peer-certificate" type="GTlsCertificate*" readable="true" writable="false"/>
      <property name="PeerCertificateErrors" cname="peer-certificate-errors" type="GTlsCertificateFlags" readable="true" writable="false"/>
      <property name="RehandshakeMode" cname="rehandshake-mode" type="GTlsRehandshakeMode" readable="true" writable="true"/>
      <property name="RequireCloseNotify" cname="require-close-notify" type="gboolean" readable="true" writable="true"/>
      <property name="UseSystemCertdb" cname="use-system-certdb" type="gboolean" readable="true" writable="true"/>
      <field cname="parent_instance" name="ParentInstance" type="GIOStream*"/>
      <field cname="priv" name="Priv" type="GTlsConnectionPrivate*">
        <warning>missing glib:type-name</warning>
      </field>
    </object>
    <object name="TlsDatabase" cname="GTlsDatabase" parent="GObject" abstract="1" opaque="">
      <method name="GetType" cname="g_tls_database_get_type" shared="true">
        <return-type type="GType"/>
      </method>
      <virtual_method name="CreateCertificateHandle" cname="create_certificate_handle">
        <return-type type="gchar*"/>
        <parameters>
          <parameter name="tls_database" type="GTlsDatabase*"/>
          <parameter name="certificate" type="GTlsCertificate*"/>
        </parameters>
      </virtual_method>
      <virtual_method name="LookupCertificateForHandle" cname="lookup_certificate_for_handle">
        <return-type type="GTlsCertificate*"/>
        <parameters>
          <parameter name="tls_database" type="GTlsDatabase*"/>
          <parameter name="handle" type="const-gchar*"/>
          <parameter name="interaction" type="GTlsInteraction*"/>
          <parameter name="flags" type="GTlsDatabaseLookupFlags"/>
          <parameter name="cancellable" type="GCancellable*"/>
        </parameters>
      </virtual_method>
      <virtual_method name="LookupCertificateForHandleAsync" cname="lookup_certificate_for_handle_async">
        <return-type type="void"/>
        <parameters>
          <parameter name="tls_database" type="GTlsDatabase*"/>
          <parameter name="handle" type="const-gchar*"/>
          <parameter name="interaction" type="GTlsInteraction*"/>
          <parameter name="flags" type="GTlsDatabaseLookupFlags"/>
          <parameter name="cancellable" type="GCancellable*"/>
          <parameter name="callback" type="GAsyncReadyCallback"/>
          <parameter name="user_data" type="gpointer"/>
        </parameters>
      </virtual_method>
      <virtual_method name="LookupCertificateForHandleFinish" cname="lookup_certificate_for_handle_finish">
        <return-type type="GTlsCertificate*"/>
        <parameters>
          <parameter name="tls_database" type="GTlsDatabase*"/>
          <parameter name="_result" type="GAsyncResult*"/>
        </parameters>
      </virtual_method>
      <virtual_method name="LookupCertificateIssuer" cname="lookup_certificate_issuer">
        <return-type type="GTlsCertificate*"/>
        <parameters>
          <parameter name="tls_database" type="GTlsDatabase*"/>
          <parameter name="certificate" type="GTlsCertificate*"/>
          <parameter name="interaction" type="GTlsInteraction*"/>
          <parameter name="flags" type="GTlsDatabaseLookupFlags"/>
          <parameter name="cancellable" type="GCancellable*"/>
        </parameters>
      </virtual_method>
      <virtual_method name="LookupCertificateIssuerAsync" cname="lookup_certificate_issuer_async">
        <return-type type="void"/>
        <parameters>
          <parameter name="tls_database" type="GTlsDatabase*"/>
          <parameter name="certificate" type="GTlsCertificate*"/>
          <parameter name="interaction" type="GTlsInteraction*"/>
          <parameter name="flags" type="GTlsDatabaseLookupFlags"/>
          <parameter name="cancellable" type="GCancellable*"/>
          <parameter name="callback" type="GAsyncReadyCallback"/>
          <parameter name="user_data" type="gpointer"/>
        </parameters>
      </virtual_method>
      <virtual_method name="LookupCertificateIssuerFinish" cname="lookup_certificate_issuer_finish">
        <return-type type="GTlsCertificate*"/>
        <parameters>
          <parameter name="tls_database" type="GTlsDatabase*"/>
          <parameter name="_result" type="GAsyncResult*"/>
        </parameters>
      </virtual_method>
      <virtual_method name="LookupCertificatesIssuedBy" cname="lookup_certificates_issued_by">
        <return-type type="GList*">
          <warning>missing glib:type-name</warning>
        </return-type>
        <parameters>
          <parameter name="tls_database" type="GTlsDatabase*"/>
          <parameter name="issuer_raw_dn" type="GByteArray*" array="true"/>
          <parameter name="interaction" type="GTlsInteraction*"/>
          <parameter name="flags" type="GTlsDatabaseLookupFlags"/>
          <parameter name="cancellable" type="GCancellable*"/>
        </parameters>
      </virtual_method>
      <virtual_method name="LookupCertificatesIssuedByAsync" cname="lookup_certificates_issued_by_async">
        <return-type type="void"/>
        <parameters>
          <parameter name="tls_database" type="GTlsDatabase*"/>
          <parameter name="issuer_raw_dn" type="GByteArray*" array="true"/>
          <parameter name="interaction" type="GTlsInteraction*"/>
          <parameter name="flags" type="GTlsDatabaseLookupFlags"/>
          <parameter name="cancellable" type="GCancellable*"/>
          <parameter name="callback" type="GAsyncReadyCallback"/>
          <parameter name="user_data" type="gpointer"/>
        </parameters>
      </virtual_method>
      <virtual_method name="LookupCertificatesIssuedByFinish" cname="lookup_certificates_issued_by_finish">
        <return-type type="GList*">
          <warning>missing glib:type-name</warning>
        </return-type>
        <parameters>
          <parameter name="tls_database" type="GTlsDatabase*"/>
          <parameter name="_result" type="GAsyncResult*"/>
        </parameters>
      </virtual_method>
      <virtual_method name="VerifyChain" cname="verify_chain">
        <return-type type="GTlsCertificateFlags"/>
        <parameters>
          <parameter name="tls_database" type="GTlsDatabase*"/>
          <parameter name="chain" type="GTlsCertificate*"/>
          <parameter name="purpose" type="const-gchar*"/>
          <parameter name="identity" type="GSocketConnectable*"/>
          <parameter name="interaction" type="GTlsInteraction*"/>
          <parameter name="flags" type="GTlsDatabaseVerifyFlags"/>
          <parameter name="cancellable" type="GCancellable*"/>
        </parameters>
      </virtual_method>
      <virtual_method name="VerifyChainAsync" cname="verify_chain_async">
        <return-type type="void"/>
        <parameters>
          <parameter name="tls_database" type="GTlsDatabase*"/>
          <parameter name="chain" type="GTlsCertificate*"/>
          <parameter name="purpose" type="const-gchar*"/>
          <parameter name="identity" type="GSocketConnectable*"/>
          <parameter name="interaction" type="GTlsInteraction*"/>
          <parameter name="flags" type="GTlsDatabaseVerifyFlags"/>
          <parameter name="cancellable" type="GCancellable*"/>
          <parameter name="callback" type="GAsyncReadyCallback"/>
          <parameter name="user_data" type="gpointer"/>
        </parameters>
      </virtual_method>
      <virtual_method name="VerifyChainFinish" cname="verify_chain_finish">
        <return-type type="GTlsCertificateFlags"/>
        <parameters>
          <parameter name="tls_database" type="GTlsDatabase*"/>
          <parameter name="_result" type="GAsyncResult*"/>
        </parameters>
      </virtual_method>
      <method name="CreateCertificateHandle" cname="g_tls_database_create_certificate_handle">
        <return-type type="gchar*"/>
        <parameters>
          <parameter name="certificate" type="GTlsCertificate*"/>
        </parameters>
      </method>
      <method name="LookupCertificateForHandle" cname="g_tls_database_lookup_certificate_for_handle">
        <return-type type="GTlsCertificate*"/>
        <parameters>
          <parameter name="handle" type="const-gchar*"/>
          <parameter name="interaction" type="GTlsInteraction*"/>
          <parameter name="flags" type="GTlsDatabaseLookupFlags"/>
          <parameter name="cancellable" type="GCancellable*"/>
        </parameters>
      </method>
      <method name="LookupCertificateForHandleAsync" cname="g_tls_database_lookup_certificate_for_handle_async">
        <return-type type="void"/>
        <parameters>
          <parameter name="handle" type="const-gchar*"/>
          <parameter name="interaction" type="GTlsInteraction*"/>
          <parameter name="flags" type="GTlsDatabaseLookupFlags"/>
          <parameter name="cancellable" type="GCancellable*"/>
          <parameter name="callback" type="GAsyncReadyCallback"/>
          <parameter name="user_data" type="gpointer"/>
        </parameters>
      </method>
      <method name="LookupCertificateForHandleFinish" cname="g_tls_database_lookup_certificate_for_handle_finish">
        <return-type type="GTlsCertificate*"/>
        <parameters>
          <parameter name="_result" type="GAsyncResult*"/>
        </parameters>
      </method>
      <method name="LookupCertificateIssuer" cname="g_tls_database_lookup_certificate_issuer">
        <return-type type="GTlsCertificate*"/>
        <parameters>
          <parameter name="certificate" type="GTlsCertificate*"/>
          <parameter name="interaction" type="GTlsInteraction*"/>
          <parameter name="flags" type="GTlsDatabaseLookupFlags"/>
          <parameter name="cancellable" type="GCancellable*"/>
        </parameters>
      </method>
      <method name="LookupCertificateIssuerAsync" cname="g_tls_database_lookup_certificate_issuer_async">
        <return-type type="void"/>
        <parameters>
          <parameter name="certificate" type="GTlsCertificate*"/>
          <parameter name="interaction" type="GTlsInteraction*"/>
          <parameter name="flags" type="GTlsDatabaseLookupFlags"/>
          <parameter name="cancellable" type="GCancellable*"/>
          <parameter name="callback" type="GAsyncReadyCallback"/>
          <parameter name="user_data" type="gpointer"/>
        </parameters>
      </method>
      <method name="LookupCertificateIssuerFinish" cname="g_tls_database_lookup_certificate_issuer_finish">
        <return-type type="GTlsCertificate*"/>
        <parameters>
          <parameter name="_result" type="GAsyncResult*"/>
        </parameters>
      </method>
      <method name="LookupCertificatesIssuedBy" cname="g_tls_database_lookup_certificates_issued_by">
        <return-type type="GList*">
          <warning>missing glib:type-name</warning>
        </return-type>
        <parameters>
          <parameter name="issuer_raw_dn" type="GByteArray*" array="true"/>
          <parameter name="interaction" type="GTlsInteraction*"/>
          <parameter name="flags" type="GTlsDatabaseLookupFlags"/>
          <parameter name="cancellable" type="GCancellable*"/>
        </parameters>
      </method>
      <method name="LookupCertificatesIssuedByAsync" cname="g_tls_database_lookup_certificates_issued_by_async">
        <return-type type="void"/>
        <parameters>
          <parameter name="issuer_raw_dn" type="GByteArray*" array="true"/>
          <parameter name="interaction" type="GTlsInteraction*"/>
          <parameter name="flags" type="GTlsDatabaseLookupFlags"/>
          <parameter name="cancellable" type="GCancellable*"/>
          <parameter name="callback" type="GAsyncReadyCallback"/>
          <parameter name="user_data" type="gpointer"/>
        </parameters>
      </method>
      <method name="LookupCertificatesIssuedByFinish" cname="g_tls_database_lookup_certificates_issued_by_finish">
        <return-type type="GList*">
          <warning>missing glib:type-name</warning>
        </return-type>
        <parameters>
          <parameter name="_result" type="GAsyncResult*"/>
        </parameters>
      </method>
      <method name="VerifyChain" cname="g_tls_database_verify_chain">
        <return-type type="GTlsCertificateFlags"/>
        <parameters>
          <parameter name="chain" type="GTlsCertificate*"/>
          <parameter name="purpose" type="const-gchar*"/>
          <parameter name="identity" type="GSocketConnectable*"/>
          <parameter name="interaction" type="GTlsInteraction*"/>
          <parameter name="flags" type="GTlsDatabaseVerifyFlags"/>
          <parameter name="cancellable" type="GCancellable*"/>
        </parameters>
      </method>
      <method name="VerifyChainAsync" cname="g_tls_database_verify_chain_async">
        <return-type type="void"/>
        <parameters>
          <parameter name="chain" type="GTlsCertificate*"/>
          <parameter name="purpose" type="const-gchar*"/>
          <parameter name="identity" type="GSocketConnectable*"/>
          <parameter name="interaction" type="GTlsInteraction*"/>
          <parameter name="flags" type="GTlsDatabaseVerifyFlags"/>
          <parameter name="cancellable" type="GCancellable*"/>
          <parameter name="callback" type="GAsyncReadyCallback"/>
          <parameter name="user_data" type="gpointer"/>
        </parameters>
      </method>
      <method name="VerifyChainFinish" cname="g_tls_database_verify_chain_finish">
        <return-type type="GTlsCertificateFlags"/>
        <parameters>
          <parameter name="_result" type="GAsyncResult*"/>
        </parameters>
      </method>
      <field cname="parent_instance" name="ParentInstance" type="GObject*"/>
      <field cname="priv" name="Priv" type="GTlsDatabasePrivate*">
        <warning>missing glib:type-name</warning>
      </field>
    </object>
    <object name="TlsInteraction" cname="GTlsInteraction" parent="GObject" abstract="" opaque="">
      <method name="GetType" cname="g_tls_interaction_get_type" shared="true">
        <return-type type="GType"/>
      </method>
      <virtual_method name="AskPassword" cname="ask_password">
        <return-type type="GTlsInteractionResult"/>
        <parameters>
          <parameter name="tls_interaction" type="GTlsInteraction*"/>
          <parameter name="password" type="GTlsPassword*"/>
          <parameter name="cancellable" type="GCancellable*"/>
        </parameters>
      </virtual_method>
      <virtual_method name="AskPasswordAsync" cname="ask_password_async">
        <return-type type="void"/>
        <parameters>
          <parameter name="tls_interaction" type="GTlsInteraction*"/>
          <parameter name="password" type="GTlsPassword*"/>
          <parameter name="cancellable" type="GCancellable*"/>
          <parameter name="callback" type="GAsyncReadyCallback"/>
          <parameter name="user_data" type="gpointer"/>
        </parameters>
      </virtual_method>
      <virtual_method name="AskPasswordFinish" cname="ask_password_finish">
        <return-type type="GTlsInteractionResult"/>
        <parameters>
          <parameter name="tls_interaction" type="GTlsInteraction*"/>
          <parameter name="_result" type="GAsyncResult*"/>
        </parameters>
      </virtual_method>
      <method name="AskPassword" cname="g_tls_interaction_ask_password">
        <return-type type="GTlsInteractionResult"/>
        <parameters>
          <parameter name="password" type="GTlsPassword*"/>
          <parameter name="cancellable" type="GCancellable*"/>
        </parameters>
      </method>
      <method name="AskPasswordAsync" cname="g_tls_interaction_ask_password_async">
        <return-type type="void"/>
        <parameters>
          <parameter name="password" type="GTlsPassword*"/>
          <parameter name="cancellable" type="GCancellable*"/>
          <parameter name="callback" type="GAsyncReadyCallback"/>
          <parameter name="user_data" type="gpointer"/>
        </parameters>
      </method>
      <method name="AskPasswordFinish" cname="g_tls_interaction_ask_password_finish">
        <return-type type="GTlsInteractionResult"/>
        <parameters>
          <parameter name="_result" type="GAsyncResult*"/>
        </parameters>
      </method>
      <method name="InvokeAskPassword" cname="g_tls_interaction_invoke_ask_password">
        <return-type type="GTlsInteractionResult"/>
        <parameters>
          <parameter name="password" type="GTlsPassword*"/>
          <parameter name="cancellable" type="GCancellable*"/>
        </parameters>
      </method>
    </object>
    <object name="TlsPassword" cname="GTlsPassword" parent="GObject" abstract="" opaque="">
      <method name="GetType" cname="g_tls_password_get_type" shared="true">
        <return-type type="GType"/>
      </method>
      <constructor cname="g_tls_password_new">
        <parameters>
          <parameter name="flags" type="GTlsPasswordFlags"/>
          <parameter name="description" type="const-gchar*"/>
        </parameters>
      </constructor>
      <virtual_method name="GetDefaultWarning" cname="get_default_warning">
        <return-type type="const-gchar*"/>
      </virtual_method>
      <virtual_method name="GetValue" cname="get_value">
        <return-type type="guint8"/>
        <parameters>
          <parameter name="tls_password" type="GTlsPassword*"/>
          <parameter name="length" type="gsize"/>
        </parameters>
      </virtual_method>
      <virtual_method name="SetValue" cname="set_value">
        <return-type type="void"/>
        <parameters>
          <parameter name="tls_password" type="GTlsPassword*"/>
          <parameter name="value" type="guint8"/>
          <parameter name="length" type="gssize"/>
          <parameter name="destroy" type="GDestroyNotify"/>
        </parameters>
      </virtual_method>
      <method name="GetDescription" cname="g_tls_password_get_description">
        <return-type type="const-gchar*"/>
      </method>
      <method name="GetFlags" cname="g_tls_password_get_flags">
        <return-type type="GTlsPasswordFlags"/>
      </method>
      <method name="GetValue" cname="g_tls_password_get_value">
        <return-type type="guint8"/>
        <parameters>
          <parameter name="length" type="gsize"/>
        </parameters>
      </method>
      <method name="GetWarning" cname="g_tls_password_get_warning">
        <return-type type="const-gchar*"/>
      </method>
      <method name="SetDescription" cname="g_tls_password_set_description">
        <return-type type="void"/>
        <parameters>
          <parameter name="description" type="const-gchar*"/>
        </parameters>
      </method>
      <method name="SetFlags" cname="g_tls_password_set_flags">
        <return-type type="void"/>
        <parameters>
          <parameter name="flags" type="GTlsPasswordFlags"/>
        </parameters>
      </method>
      <method name="SetValue" cname="g_tls_password_set_value">
        <return-type type="void"/>
        <parameters>
          <parameter name="value" type="guint8"/>
          <parameter name="length" type="gssize"/>
        </parameters>
      </method>
      <method name="SetValueFull" cname="g_tls_password_set_value_full">
        <return-type type="void"/>
        <parameters>
          <parameter name="value" type="guint8"/>
          <parameter name="length" type="gssize"/>
          <parameter name="destroy" type="GDestroyNotify"/>
        </parameters>
      </method>
      <method name="SetWarning" cname="g_tls_password_set_warning">
        <return-type type="void"/>
        <parameters>
          <parameter name="warning" type="const-gchar*"/>
        </parameters>
      </method>
      <property name="Description" cname="description" type="gchar*" readable="true" writable="true"/>
      <property name="Flags" cname="flags" type="GTlsPasswordFlags" readable="true" writable="true"/>
      <property name="Warning" cname="warning" type="gchar*" readable="true" writable="true"/>
      <field cname="parent_instance" name="ParentInstance" type="GObject*"/>
      <field cname="priv" name="Priv" type="GTlsPasswordPrivate*">
        <warning>missing glib:type-name</warning>
      </field>
    </object>
    <object name="UnixConnection" cname="GUnixConnection" parent="GSocketConnection" abstract="" opaque="">
      <method name="GetType" cname="g_unix_connection_get_type" shared="true">
        <return-type type="GType"/>
      </method>
      <method name="ReceiveCredentials" cname="g_unix_connection_receive_credentials">
        <return-type type="GCredentials*"/>
        <parameters>
          <parameter name="cancellable" type="GCancellable*"/>
        </parameters>
      </method>
      <method name="ReceiveCredentialsAsync" cname="g_unix_connection_receive_credentials_async">
        <return-type type="void"/>
        <parameters>
          <parameter name="cancellable" type="GCancellable*"/>
          <parameter name="callback" type="GAsyncReadyCallback"/>
          <parameter name="user_data" type="gpointer"/>
        </parameters>
      </method>
      <method name="ReceiveCredentialsFinish" cname="g_unix_connection_receive_credentials_finish">
        <return-type type="GCredentials*"/>
        <parameters>
          <parameter name="_result" type="GAsyncResult*"/>
        </parameters>
      </method>
      <method name="ReceiveFd" cname="g_unix_connection_receive_fd">
        <return-type type="gint"/>
        <parameters>
          <parameter name="cancellable" type="GCancellable*"/>
        </parameters>
      </method>
      <method name="SendCredentials" cname="g_unix_connection_send_credentials">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="cancellable" type="GCancellable*"/>
        </parameters>
      </method>
      <method name="SendCredentialsAsync" cname="g_unix_connection_send_credentials_async">
        <return-type type="void"/>
        <parameters>
          <parameter name="cancellable" type="GCancellable*"/>
          <parameter name="callback" type="GAsyncReadyCallback"/>
          <parameter name="user_data" type="gpointer"/>
        </parameters>
      </method>
      <method name="SendCredentialsFinish" cname="g_unix_connection_send_credentials_finish">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="_result" type="GAsyncResult*"/>
        </parameters>
      </method>
      <method name="SendFd" cname="g_unix_connection_send_fd">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="fd" type="gint"/>
          <parameter name="cancellable" type="GCancellable*"/>
        </parameters>
      </method>
      <field cname="parent_instance" name="ParentInstance" type="GSocketConnection*"/>
      <field cname="priv" name="Priv" type="GUnixConnectionPrivate*">
        <warning>missing glib:type-name</warning>
      </field>
    </object>
    <object name="UnixCredentialsMessage" cname="GUnixCredentialsMessage" parent="GSocketControlMessage" abstract="" opaque="">
      <method name="GetType" cname="g_unix_credentials_message_get_type" shared="true">
        <return-type type="GType"/>
      </method>
      <constructor cname="g_unix_credentials_message_new" disable_void_ctor=""/>
      <constructor cname="g_unix_credentials_message_new_with_credentials">
        <parameters>
          <parameter name="credentials" type="GCredentials*"/>
        </parameters>
      </constructor>
      <method name="IsSupported" cname="g_unix_credentials_message_is_supported" shared="true">
        <return-type type="gboolean"/>
      </method>
      <method name="GetCredentials" cname="g_unix_credentials_message_get_credentials">
        <return-type type="GCredentials*"/>
      </method>
      <property name="Credentials" cname="credentials" type="GCredentials*" readable="true" writable="true"/>
      <field cname="parent_instance" name="ParentInstance" type="GSocketControlMessage*"/>
      <field cname="priv" name="Priv" type="GUnixCredentialsMessagePrivate*">
        <warning>missing glib:type-name</warning>
      </field>
    </object>
    <object name="UnixFDList" cname="GUnixFDList" parent="GObject" abstract="" opaque="">
      <method name="GetType" cname="g_unix_fd_list_get_type" shared="true">
        <return-type type="GType"/>
      </method>
      <constructor cname="g_unix_fd_list_new" disable_void_ctor=""/>
      <constructor cname="g_unix_fd_list_new_from_array">
        <parameters>
          <parameter name="fds" type="gint*" array_len="1"/>
          <parameter name="n_fds" type="gint"/>
        </parameters>
      </constructor>
      <method name="Append" cname="g_unix_fd_list_append">
        <return-type type="gint"/>
        <parameters>
          <parameter name="fd" type="gint"/>
        </parameters>
      </method>
      <method name="Get" cname="g_unix_fd_list_get">
        <return-type type="gint"/>
        <parameters>
          <parameter name="index_" type="gint"/>
        </parameters>
      </method>
      <method name="GetLength" cname="g_unix_fd_list_get_length">
        <return-type type="gint"/>
      </method>
      <method name="PeekFds" cname="g_unix_fd_list_peek_fds">
        <return-type type="gint*" array_len="0"/>
        <parameters>
          <parameter name="length" type="gint*"/>
        </parameters>
      </method>
      <method name="StealFds" cname="g_unix_fd_list_steal_fds">
        <return-type type="gint**" array_len="0"/>
        <parameters>
          <parameter name="length" type="gint*"/>
        </parameters>
      </method>
      <field cname="parent_instance" name="ParentInstance" type="GObject*"/>
      <field cname="priv" name="Priv" type="GUnixFDListPrivate*">
        <warning>missing glib:type-name</warning>
      </field>
    </object>
    <object name="UnixFDMessage" cname="GUnixFDMessage" parent="GSocketControlMessage" abstract="" opaque="">
      <method name="GetType" cname="g_unix_fd_message_get_type" shared="true">
        <return-type type="GType"/>
      </method>
      <constructor cname="g_unix_fd_message_new" disable_void_ctor=""/>
      <constructor cname="g_unix_fd_message_new_with_fd_list">
        <parameters>
          <parameter name="fd_list" type="GUnixFDList*"/>
        </parameters>
      </constructor>
      <method name="AppendFd" cname="g_unix_fd_message_append_fd">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="fd" type="gint"/>
        </parameters>
      </method>
      <method name="GetFdList" cname="g_unix_fd_message_get_fd_list">
        <return-type type="GUnixFDList*"/>
      </method>
      <method name="StealFds" cname="g_unix_fd_message_steal_fds">
        <return-type type="gint**" array_len="0"/>
        <parameters>
          <parameter name="length" type="gint*"/>
        </parameters>
      </method>
      <property name="FdList" cname="fd-list" type="GUnixFDList*" readable="true" writable="true"/>
      <field cname="parent_instance" name="ParentInstance" type="GSocketControlMessage*"/>
      <field cname="priv" name="Priv" type="GUnixFDMessagePrivate*">
        <warning>missing glib:type-name</warning>
      </field>
    </object>
    <object name="UnixInputStream" cname="GUnixInputStream" parent="GInputStream" abstract="" opaque="">
      <method name="GetType" cname="g_unix_input_stream_get_type" shared="true">
        <return-type type="GType"/>
      </method>
      <constructor cname="g_unix_input_stream_new">
        <parameters>
          <parameter name="fd" type="gint"/>
          <parameter name="close_fd" type="gboolean"/>
        </parameters>
      </constructor>
      <method name="GetCloseFd" cname="g_unix_input_stream_get_close_fd">
        <return-type type="gboolean"/>
      </method>
      <method name="GetFd" cname="g_unix_input_stream_get_fd">
        <return-type type="gint"/>
      </method>
      <method name="SetCloseFd" cname="g_unix_input_stream_set_close_fd">
        <return-type type="void"/>
        <parameters>
          <parameter name="close_fd" type="gboolean"/>
        </parameters>
      </method>
      <property name="CloseFd" cname="close-fd" type="gboolean" readable="true" writable="true"/>
      <property name="Fd" cname="fd" type="gint" readable="true" writable="true"/>
      <field cname="parent_instance" name="ParentInstance" type="GInputStream*"/>
    </object>
    <object name="UnixMountMonitor" cname="GUnixMountMonitor" parent="GObject" abstract="" opaque="">
      <method name="GetType" cname="g_unix_mount_monitor_get_type" shared="true">
        <return-type type="GType"/>
      </method>
      <constructor cname="g_unix_mount_monitor_new" disable_void_ctor=""/>
      <method name="SetRateLimit" cname="g_unix_mount_monitor_set_rate_limit">
        <return-type type="void"/>
        <parameters>
          <parameter name="limit_msec" type="gint"/>
        </parameters>
      </method>
      <signal name="MountpointsChanged" cname="mountpoints-changed">
        <return-type type="void"/>
        <parameters>
          <parameter name="unixmountmonitor" type="GUnixMountMonitor**"/>
        </parameters>
      </signal>
      <signal name="MountsChanged" cname="mounts-changed">
        <return-type type="void"/>
        <parameters>
          <parameter name="unixmountmonitor" type="GUnixMountMonitor**"/>
        </parameters>
      </signal>
    </object>
    <object name="UnixOutputStream" cname="GUnixOutputStream" parent="GOutputStream" abstract="" opaque="">
      <method name="GetType" cname="g_unix_output_stream_get_type" shared="true">
        <return-type type="GType"/>
      </method>
      <constructor cname="g_unix_output_stream_new">
        <parameters>
          <parameter name="fd" type="gint"/>
          <parameter name="close_fd" type="gboolean"/>
        </parameters>
      </constructor>
      <method name="GetCloseFd" cname="g_unix_output_stream_get_close_fd">
        <return-type type="gboolean"/>
      </method>
      <method name="GetFd" cname="g_unix_output_stream_get_fd">
        <return-type type="gint"/>
      </method>
      <method name="SetCloseFd" cname="g_unix_output_stream_set_close_fd">
        <return-type type="void"/>
        <parameters>
          <parameter name="close_fd" type="gboolean"/>
        </parameters>
      </method>
      <property name="CloseFd" cname="close-fd" type="gboolean" readable="true" writable="true"/>
      <property name="Fd" cname="fd" type="gint" readable="true" writable="true"/>
      <field cname="parent_instance" name="ParentInstance" type="GOutputStream*"/>
    </object>
    <object name="UnixSocketAddress" cname="GUnixSocketAddress" parent="GSocketAddress" abstract="" opaque="">
      <method name="GetType" cname="g_unix_socket_address_get_type" shared="true">
        <return-type type="GType"/>
      </method>
      <constructor cname="g_unix_socket_address_new">
        <parameters>
          <parameter name="path" type="const-gchar*"/>
        </parameters>
      </constructor>
      <constructor cname="g_unix_socket_address_new_abstract">
        <parameters>
          <parameter name="path" type="const-gchar*" array_len="1"/>
          <parameter name="path_len" type="gint"/>
        </parameters>
      </constructor>
      <constructor cname="g_unix_socket_address_new_with_type">
        <parameters>
          <parameter name="path" type="const-gchar*" array_len="1"/>
          <parameter name="path_len" type="gint"/>
          <parameter name="type" type="GUnixSocketAddressType"/>
        </parameters>
      </constructor>
      <method name="AbstractNamesSupported" cname="g_unix_socket_address_abstract_names_supported" shared="true">
        <return-type type="gboolean"/>
      </method>
      <method name="GetAddressType" cname="g_unix_socket_address_get_address_type">
        <return-type type="GUnixSocketAddressType"/>
      </method>
      <method name="GetIsAbstract" cname="g_unix_socket_address_get_is_abstract">
        <return-type type="gboolean"/>
      </method>
      <method name="GetPath" cname="g_unix_socket_address_get_path">
        <return-type type="const-gchar*"/>
      </method>
      <method name="GetPathLen" cname="g_unix_socket_address_get_path_len">
        <return-type type="gsize"/>
      </method>
      <property name="Abstract" cname="abstract" type="gboolean" readable="true" writable="true"/>
      <property name="AddressType" cname="address-type" type="GUnixSocketAddressType" readable="true" writable="true"/>
      <property name="Path" cname="path" type="gchar*" readable="true" writable="true"/>
      <field cname="parent_instance" name="ParentInstance" type="GSocketAddress*"/>
    </object>
    <object name="Vfs" cname="GVfs" parent="GObject" abstract="" opaque="">
      <method name="GetType" cname="g_vfs_get_type" shared="true">
        <return-type type="GType"/>
      </method>
      <method name="GetDefault" cname="g_vfs_get_default" shared="true">
        <return-type type="GVfs*"/>
      </method>
      <method name="GetLocal" cname="g_vfs_get_local" shared="true">
        <return-type type="GVfs*"/>
      </method>
      <virtual_method name="AddWritableNamespaces" cname="add_writable_namespaces">
        <return-type type="void"/>
        <parameters>
          <parameter name="vfs" type="GVfs*"/>
          <parameter name="list" type="GFileAttributeInfoList*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </virtual_method>
      <virtual_method name="GetFileForPath" cname="get_file_for_path">
        <return-type type="GFile*"/>
        <parameters>
          <parameter name="vfs" type="GVfs*"/>
          <parameter name="path" type="const-gchar*"/>
        </parameters>
      </virtual_method>
      <virtual_method name="GetFileForUri" cname="get_file_for_uri">
        <return-type type="GFile*"/>
        <parameters>
          <parameter name="vfs" type="GVfs*"/>
          <parameter name="uri" type="const-gchar*"/>
        </parameters>
      </virtual_method>
      <virtual_method name="GetSupportedUriSchemes" cname="get_supported_uri_schemes">
        <return-type type="gchar**" array="true"/>
      </virtual_method>
      <virtual_method name="IsActive" cname="is_active">
        <return-type type="gboolean"/>
      </virtual_method>
      <virtual_method name="LocalFileAddInfo" cname="local_file_add_info">
        <return-type type="void"/>
        <parameters>
          <parameter name="vfs" type="GVfs*"/>
          <parameter name="filename" type="const-gchar*"/>
          <parameter name="device" type="guint64"/>
          <parameter name="attribute_matcher" type="GFileAttributeMatcher*">
            <warning>missing glib:type-name</warning>
          </parameter>
          <parameter name="info" type="GFileInfo*"/>
          <parameter name="cancellable" type="GCancellable*"/>
          <parameter name="extra_data" type="gpointer"/>
          <parameter name="free_extra_data" type="GDestroyNotify"/>
        </parameters>
      </virtual_method>
      <virtual_method name="LocalFileMoved" cname="local_file_moved">
        <return-type type="void"/>
        <parameters>
          <parameter name="vfs" type="GVfs*"/>
          <parameter name="source" type="const-gchar*"/>
          <parameter name="dest" type="const-gchar*"/>
        </parameters>
      </virtual_method>
      <virtual_method name="LocalFileRemoved" cname="local_file_removed">
        <return-type type="void"/>
        <parameters>
          <parameter name="vfs" type="GVfs*"/>
          <parameter name="filename" type="const-gchar*"/>
        </parameters>
      </virtual_method>
      <virtual_method name="LocalFileSetAttributes" cname="local_file_set_attributes">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="vfs" type="GVfs*"/>
          <parameter name="filename" type="const-gchar*"/>
          <parameter name="info" type="GFileInfo*"/>
          <parameter name="flags" type="GFileQueryInfoFlags"/>
          <parameter name="cancellable" type="GCancellable*"/>
        </parameters>
      </virtual_method>
      <virtual_method name="ParseName" cname="parse_name">
        <return-type type="GFile*"/>
        <parameters>
          <parameter name="vfs" type="GVfs*"/>
          <parameter name="parse_name" type="const-gchar*"/>
        </parameters>
      </virtual_method>
      <method name="GetFileForPath" cname="g_vfs_get_file_for_path">
        <return-type type="GFile*"/>
        <parameters>
          <parameter name="path" type="const-gchar*"/>
        </parameters>
      </method>
      <method name="GetFileForUri" cname="g_vfs_get_file_for_uri">
        <return-type type="GFile*"/>
        <parameters>
          <parameter name="uri" type="const-gchar*"/>
        </parameters>
      </method>
      <method name="GetSupportedUriSchemes" cname="g_vfs_get_supported_uri_schemes">
        <return-type type="gchar**" array="true"/>
      </method>
      <method name="IsActive" cname="g_vfs_is_active">
        <return-type type="gboolean"/>
      </method>
      <method name="ParseName" cname="g_vfs_parse_name">
        <return-type type="GFile*"/>
        <parameters>
          <parameter name="parse_name" type="const-gchar*"/>
        </parameters>
      </method>
      <field cname="parent_instance" name="ParentInstance" type="GObject*"/>
    </object>
    <object name="VolumeMonitor" cname="GVolumeMonitor" parent="GObject" abstract="" opaque="">
      <method name="GetType" cname="g_volume_monitor_get_type" shared="true">
        <return-type type="GType"/>
      </method>
      <method name="AdoptOrphanMount" cname="g_volume_monitor_adopt_orphan_mount" shared="true">
        <return-type type="GVolume*"/>
        <parameters>
          <parameter name="mount" type="GMount*"/>
        </parameters>
      </method>
      <method name="Get" cname="g_volume_monitor_get" shared="true">
        <return-type type="GVolumeMonitor*"/>
      </method>
      <virtual_method name="DriveChanged" cname="drive_changed">
        <return-type type="void"/>
        <parameters>
          <parameter name="volume_monitor" type="GVolumeMonitor*"/>
          <parameter name="drive" type="GDrive*"/>
        </parameters>
      </virtual_method>
      <virtual_method name="DriveConnected" cname="drive_connected">
        <return-type type="void"/>
        <parameters>
          <parameter name="volume_monitor" type="GVolumeMonitor*"/>
          <parameter name="drive" type="GDrive*"/>
        </parameters>
      </virtual_method>
      <virtual_method name="DriveDisconnected" cname="drive_disconnected">
        <return-type type="void"/>
        <parameters>
          <parameter name="volume_monitor" type="GVolumeMonitor*"/>
          <parameter name="drive" type="GDrive*"/>
        </parameters>
      </virtual_method>
      <virtual_method name="DriveEjectButton" cname="drive_eject_button">
        <return-type type="void"/>
        <parameters>
          <parameter name="volume_monitor" type="GVolumeMonitor*"/>
          <parameter name="drive" type="GDrive*"/>
        </parameters>
      </virtual_method>
      <virtual_method name="DriveStopButton" cname="drive_stop_button">
        <return-type type="void"/>
        <parameters>
          <parameter name="volume_monitor" type="GVolumeMonitor*"/>
          <parameter name="drive" type="GDrive*"/>
        </parameters>
      </virtual_method>
      <virtual_method name="GetConnectedDrives" cname="get_connected_drives">
        <return-type type="GList*">
          <warning>missing glib:type-name</warning>
        </return-type>
      </virtual_method>
      <virtual_method name="GetMountForUuid" cname="get_mount_for_uuid">
        <return-type type="GMount*"/>
        <parameters>
          <parameter name="volume_monitor" type="GVolumeMonitor*"/>
          <parameter name="uuid" type="const-gchar*"/>
        </parameters>
      </virtual_method>
      <virtual_method name="GetMounts" cname="get_mounts">
        <return-type type="GList*">
          <warning>missing glib:type-name</warning>
        </return-type>
      </virtual_method>
      <virtual_method name="GetVolumeForUuid" cname="get_volume_for_uuid">
        <return-type type="GVolume*"/>
        <parameters>
          <parameter name="volume_monitor" type="GVolumeMonitor*"/>
          <parameter name="uuid" type="const-gchar*"/>
        </parameters>
      </virtual_method>
      <virtual_method name="GetVolumes" cname="get_volumes">
        <return-type type="GList*">
          <warning>missing glib:type-name</warning>
        </return-type>
      </virtual_method>
      <virtual_method name="MountAdded" cname="mount_added">
        <return-type type="void"/>
        <parameters>
          <parameter name="volume_monitor" type="GVolumeMonitor*"/>
          <parameter name="mount" type="GMount*"/>
        </parameters>
      </virtual_method>
      <virtual_method name="MountChanged" cname="mount_changed">
        <return-type type="void"/>
        <parameters>
          <parameter name="volume_monitor" type="GVolumeMonitor*"/>
          <parameter name="mount" type="GMount*"/>
        </parameters>
      </virtual_method>
      <virtual_method name="MountPreUnmount" cname="mount_pre_unmount">
        <return-type type="void"/>
        <parameters>
          <parameter name="volume_monitor" type="GVolumeMonitor*"/>
          <parameter name="mount" type="GMount*"/>
        </parameters>
      </virtual_method>
      <virtual_method name="MountRemoved" cname="mount_removed">
        <return-type type="void"/>
        <parameters>
          <parameter name="volume_monitor" type="GVolumeMonitor*"/>
          <parameter name="mount" type="GMount*"/>
        </parameters>
      </virtual_method>
      <virtual_method name="VolumeAdded" cname="volume_added">
        <return-type type="void"/>
        <parameters>
          <parameter name="volume_monitor" type="GVolumeMonitor*"/>
          <parameter name="volume" type="GVolume*"/>
        </parameters>
      </virtual_method>
      <virtual_method name="VolumeChanged" cname="volume_changed">
        <return-type type="void"/>
        <parameters>
          <parameter name="volume_monitor" type="GVolumeMonitor*"/>
          <parameter name="volume" type="GVolume*"/>
        </parameters>
      </virtual_method>
      <virtual_method name="VolumeRemoved" cname="volume_removed">
        <return-type type="void"/>
        <parameters>
          <parameter name="volume_monitor" type="GVolumeMonitor*"/>
          <parameter name="volume" type="GVolume*"/>
        </parameters>
      </virtual_method>
      <method name="GetConnectedDrives" cname="g_volume_monitor_get_connected_drives">
        <return-type type="GList*">
          <warning>missing glib:type-name</warning>
        </return-type>
      </method>
      <method name="GetMountForUuid" cname="g_volume_monitor_get_mount_for_uuid">
        <return-type type="GMount*"/>
        <parameters>
          <parameter name="uuid" type="const-gchar*"/>
        </parameters>
      </method>
      <method name="GetMounts" cname="g_volume_monitor_get_mounts">
        <return-type type="GList*">
          <warning>missing glib:type-name</warning>
        </return-type>
      </method>
      <method name="GetVolumeForUuid" cname="g_volume_monitor_get_volume_for_uuid">
        <return-type type="GVolume*"/>
        <parameters>
          <parameter name="uuid" type="const-gchar*"/>
        </parameters>
      </method>
      <method name="GetVolumes" cname="g_volume_monitor_get_volumes">
        <return-type type="GList*">
          <warning>missing glib:type-name</warning>
        </return-type>
      </method>
      <field cname="parent_instance" name="ParentInstance" type="GObject*"/>
    </object>
    <object name="ZlibCompressor" cname="GZlibCompressor" parent="GObject" abstract="" opaque="">
      <method name="GetType" cname="g_zlib_compressor_get_type" shared="true">
        <return-type type="GType"/>
      </method>
      <constructor cname="g_zlib_compressor_new">
        <parameters>
          <parameter name="format" type="GZlibCompressorFormat"/>
          <parameter name="level" type="gint"/>
        </parameters>
      </constructor>
      <method name="GetFileInfo" cname="g_zlib_compressor_get_file_info">
        <return-type type="GFileInfo*"/>
      </method>
      <method name="SetFileInfo" cname="g_zlib_compressor_set_file_info">
        <return-type type="void"/>
        <parameters>
          <parameter name="file_info" type="GFileInfo*"/>
        </parameters>
      </method>
      <property name="FileInfo" cname="file-info" type="GFileInfo*" readable="true" writable="true"/>
      <property name="Format" cname="format" type="GZlibCompressorFormat" readable="true" writable="true"/>
      <property name="Level" cname="level" type="gint" readable="true" writable="true"/>
    </object>
    <object name="ZlibDecompressor" cname="GZlibDecompressor" parent="GObject" abstract="" opaque="">
      <method name="GetType" cname="g_zlib_decompressor_get_type" shared="true">
        <return-type type="GType"/>
      </method>
      <constructor cname="g_zlib_decompressor_new">
        <parameters>
          <parameter name="format" type="GZlibCompressorFormat"/>
        </parameters>
      </constructor>
      <method name="GetFileInfo" cname="g_zlib_decompressor_get_file_info">
        <return-type type="GFileInfo*"/>
      </method>
      <property name="FileInfo" cname="file-info" type="GFileInfo*" readable="true" writable="false"/>
      <property name="Format" cname="format" type="GZlibCompressorFormat" readable="true" writable="true"/>
    </object>
    <struct name="ActionEntry" cname="GActionEntry">
      <field cname="name" name="Name" type="gchar*"/>
      <field cname="parameter_type" name="ParameterType" type="gchar*"/>
      <field cname="state" name="State" type="gchar*"/>
    </struct>
    <struct name="DBusAnnotationInfo" cname="GDBusAnnotationInfo">
      <field cname="ref_count" name="RefCount" type="gint"/>
      <field cname="key" name="Key" type="gchar*"/>
      <field cname="value" name="Value" type="gchar*"/>
      <field cname="annotations" name="Annotations" type="GDBusAnnotationInfo**" array="true"/>
      <method name="Ref" cname="g_dbus_annotation_info_ref">
        <return-type type="GDBusAnnotationInfo*">
          <warning>missing glib:type-name</warning>
        </return-type>
      </method>
      <method name="Unref" cname="g_dbus_annotation_info_unref">
        <return-type type="void"/>
      </method>
      <method name="Lookup" cname="g_dbus_annotation_info_lookup" shared="true">
        <return-type type="const-gchar*"/>
        <parameters>
          <parameter name="annotations" type="GDBusAnnotationInfo**" array="true"/>
          <parameter name="name" type="const-gchar*"/>
        </parameters>
      </method>
    </struct>
    <struct name="DBusArgInfo" cname="GDBusArgInfo">
      <field cname="ref_count" name="RefCount" type="gint"/>
      <field cname="name" name="Name" type="gchar*"/>
      <field cname="signature" name="Signature" type="gchar*"/>
      <field cname="annotations" name="Annotations" type="GDBusAnnotationInfo**" array="true"/>
      <method name="Ref" cname="g_dbus_arg_info_ref">
        <return-type type="GDBusArgInfo*">
          <warning>missing glib:type-name</warning>
        </return-type>
      </method>
      <method name="Unref" cname="g_dbus_arg_info_unref">
        <return-type type="void"/>
      </method>
    </struct>
    <struct name="DBusErrorEntry" cname="GDBusErrorEntry">
      <field cname="error_code" name="ErrorCode" type="gint"/>
      <field cname="dbus_error_name" name="DbusErrorName" type="gchar*"/>
    </struct>
    <struct name="DBusInterfaceInfo" cname="GDBusInterfaceInfo">
      <field cname="ref_count" name="RefCount" type="gint"/>
      <field cname="name" name="Name" type="gchar*"/>
      <field cname="methods" name="Methods" type="GDBusMethodInfo**" array="true"/>
      <field cname="signals" name="Signals" type="GDBusSignalInfo**" array="true"/>
      <field cname="properties" name="Properties" type="GDBusPropertyInfo**" array="true"/>
      <field cname="annotations" name="Annotations" type="GDBusAnnotationInfo**" array="true"/>
      <method name="CacheBuild" cname="g_dbus_interface_info_cache_build">
        <return-type type="void"/>
      </method>
      <method name="CacheRelease" cname="g_dbus_interface_info_cache_release">
        <return-type type="void"/>
      </method>
      <method name="GenerateXml" cname="g_dbus_interface_info_generate_xml">
        <return-type type="void"/>
        <parameters>
          <parameter name="indent" type="guint"/>
          <parameter name="string_builder" type="GString*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="LookupMethod" cname="g_dbus_interface_info_lookup_method">
        <return-type type="GDBusMethodInfo*">
          <warning>missing glib:type-name</warning>
        </return-type>
        <parameters>
          <parameter name="name" type="const-gchar*"/>
        </parameters>
      </method>
      <method name="LookupProperty" cname="g_dbus_interface_info_lookup_property">
        <return-type type="GDBusPropertyInfo*">
          <warning>missing glib:type-name</warning>
        </return-type>
        <parameters>
          <parameter name="name" type="const-gchar*"/>
        </parameters>
      </method>
      <method name="LookupSignal" cname="g_dbus_interface_info_lookup_signal">
        <return-type type="GDBusSignalInfo*">
          <warning>missing glib:type-name</warning>
        </return-type>
        <parameters>
          <parameter name="name" type="const-gchar*"/>
        </parameters>
      </method>
      <method name="Ref" cname="g_dbus_interface_info_ref">
        <return-type type="GDBusInterfaceInfo*">
          <warning>missing glib:type-name</warning>
        </return-type>
      </method>
      <method name="Unref" cname="g_dbus_interface_info_unref">
        <return-type type="void"/>
      </method>
    </struct>
    <struct name="DBusInterfaceVTable" cname="GDBusInterfaceVTable">
      <field cname="method_call" name="MethodCall" type="GDBusInterfaceMethodCallFunc"/>
      <field cname="get_property" name="GetProperty" type="GDBusInterfaceGetPropertyFunc"/>
      <field cname="set_property" name="SetProperty" type="GDBusInterfaceSetPropertyFunc"/>
    </struct>
    <struct name="DBusMethodInfo" cname="GDBusMethodInfo">
      <field cname="ref_count" name="RefCount" type="gint"/>
      <field cname="name" name="Name" type="gchar*"/>
      <field cname="in_args" name="InArgs" type="GDBusArgInfo**" array="true"/>
      <field cname="out_args" name="OutArgs" type="GDBusArgInfo**" array="true"/>
      <field cname="annotations" name="Annotations" type="GDBusAnnotationInfo**" array="true"/>
      <method name="Ref" cname="g_dbus_method_info_ref">
        <return-type type="GDBusMethodInfo*">
          <warning>missing glib:type-name</warning>
        </return-type>
      </method>
      <method name="Unref" cname="g_dbus_method_info_unref">
        <return-type type="void"/>
      </method>
    </struct>
    <struct name="DBusNodeInfo" cname="GDBusNodeInfo">
      <field cname="ref_count" name="RefCount" type="gint"/>
      <field cname="path" name="Path" type="gchar*"/>
      <field cname="interfaces" name="Interfaces" type="GDBusInterfaceInfo**" array="true"/>
      <field cname="nodes" name="Nodes" type="GDBusNodeInfo**" array="true"/>
      <field cname="annotations" name="Annotations" type="GDBusAnnotationInfo**" array="true"/>
      <constructor cname="g_dbus_node_info_new_for_xml">
        <parameters>
          <parameter name="xml_data" type="const-gchar*"/>
        </parameters>
      </constructor>
      <method name="GenerateXml" cname="g_dbus_node_info_generate_xml">
        <return-type type="void"/>
        <parameters>
          <parameter name="indent" type="guint"/>
          <parameter name="string_builder" type="GString*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="LookupInterface" cname="g_dbus_node_info_lookup_interface">
        <return-type type="GDBusInterfaceInfo*">
          <warning>missing glib:type-name</warning>
        </return-type>
        <parameters>
          <parameter name="name" type="const-gchar*"/>
        </parameters>
      </method>
      <method name="Ref" cname="g_dbus_node_info_ref">
        <return-type type="GDBusNodeInfo*">
          <warning>missing glib:type-name</warning>
        </return-type>
      </method>
      <method name="Unref" cname="g_dbus_node_info_unref">
        <return-type type="void"/>
      </method>
    </struct>
    <struct name="DBusPropertyInfo" cname="GDBusPropertyInfo">
      <field cname="ref_count" name="RefCount" type="gint"/>
      <field cname="name" name="Name" type="gchar*"/>
      <field cname="signature" name="Signature" type="gchar*"/>
      <field cname="flags" name="Flags" type="GDBusPropertyInfoFlags"/>
      <field cname="annotations" name="Annotations" type="GDBusAnnotationInfo**" array="true"/>
      <method name="Ref" cname="g_dbus_property_info_ref">
        <return-type type="GDBusPropertyInfo*">
          <warning>missing glib:type-name</warning>
        </return-type>
      </method>
      <method name="Unref" cname="g_dbus_property_info_unref">
        <return-type type="void"/>
      </method>
    </struct>
    <struct name="DBusSignalInfo" cname="GDBusSignalInfo">
      <field cname="ref_count" name="RefCount" type="gint"/>
      <field cname="name" name="Name" type="gchar*"/>
      <field cname="args" name="Args" type="GDBusArgInfo**" array="true"/>
      <field cname="annotations" name="Annotations" type="GDBusAnnotationInfo**" array="true"/>
      <method name="Ref" cname="g_dbus_signal_info_ref">
        <return-type type="GDBusSignalInfo*">
          <warning>missing glib:type-name</warning>
        </return-type>
      </method>
      <method name="Unref" cname="g_dbus_signal_info_unref">
        <return-type type="void"/>
      </method>
    </struct>
    <struct name="DBusSubtreeVTable" cname="GDBusSubtreeVTable">
      <field cname="enumerate" name="Enumerate" type="GDBusSubtreeEnumerateFunc"/>
      <field cname="introspect" name="Introspect" type="GDBusSubtreeIntrospectFunc"/>
      <field cname="dispatch" name="Dispatch" type="GDBusSubtreeDispatchFunc"/>
    </struct>
    <struct name="FileAttributeInfo" cname="GFileAttributeInfo">
      <field cname="name" name="Name" type="gchar*"/>
      <field cname="type" name="Type" type="GFileAttributeType"/>
      <field cname="flags" name="Flags" type="GFileAttributeInfoFlags"/>
    </struct>
    <struct name="FileAttributeInfoList" cname="GFileAttributeInfoList">
      <field cname="infos" name="Infos" type="GFileAttributeInfo*">
        <warning>missing glib:type-name</warning>
      </field>
      <field cname="n_infos" name="NInfos" type="gint"/>
      <constructor cname="g_file_attribute_info_list_new" disable_void_ctor=""/>
      <method name="Add" cname="g_file_attribute_info_list_add">
        <return-type type="void"/>
        <parameters>
          <parameter name="name" type="const-gchar*"/>
          <parameter name="type" type="GFileAttributeType"/>
          <parameter name="flags" type="GFileAttributeInfoFlags"/>
        </parameters>
      </method>
      <method name="Dup" cname="g_file_attribute_info_list_dup">
        <return-type type="GFileAttributeInfoList*">
          <warning>missing glib:type-name</warning>
        </return-type>
      </method>
      <method name="Lookup" cname="g_file_attribute_info_list_lookup">
        <return-type type="GFileAttributeInfo*">
          <warning>missing glib:type-name</warning>
        </return-type>
        <parameters>
          <parameter name="name" type="const-gchar*"/>
        </parameters>
      </method>
      <method name="Ref" cname="g_file_attribute_info_list_ref">
        <return-type type="GFileAttributeInfoList*">
          <warning>missing glib:type-name</warning>
        </return-type>
      </method>
      <method name="Unref" cname="g_file_attribute_info_list_unref">
        <return-type type="void"/>
      </method>
    </struct>
    <struct name="FileAttributeMatcher" cname="GFileAttributeMatcher">
      <constructor cname="g_file_attribute_matcher_new">
        <parameters>
          <parameter name="attributes" type="const-gchar*"/>
        </parameters>
      </constructor>
      <method name="EnumerateNamespace" cname="g_file_attribute_matcher_enumerate_namespace">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="ns" type="const-gchar*"/>
        </parameters>
      </method>
      <method name="EnumerateNext" cname="g_file_attribute_matcher_enumerate_next">
        <return-type type="const-gchar*"/>
      </method>
      <method name="Matches" cname="g_file_attribute_matcher_matches">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="attribute" type="const-gchar*"/>
        </parameters>
      </method>
      <method name="MatchesOnly" cname="g_file_attribute_matcher_matches_only">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="attribute" type="const-gchar*"/>
        </parameters>
      </method>
      <method name="Ref" cname="g_file_attribute_matcher_ref">
        <return-type type="GFileAttributeMatcher*">
          <warning>missing glib:type-name</warning>
        </return-type>
      </method>
      <method name="Subtract" cname="g_file_attribute_matcher_subtract">
        <return-type type="GFileAttributeMatcher*">
          <warning>missing glib:type-name</warning>
        </return-type>
        <parameters>
          <parameter name="subtract" type="GFileAttributeMatcher*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="ToString" cname="g_file_attribute_matcher_to_string">
        <return-type type="gchar*"/>
      </method>
      <method name="Unref" cname="g_file_attribute_matcher_unref">
        <return-type type="void"/>
      </method>
    </struct>
    <struct name="InputVector" cname="GInputVector">
      <field cname="buffer" name="Buffer" type="gpointer"/>
      <field cname="size" name="Size" type="gsize"/>
    </struct>
    <struct name="OutputVector" cname="GOutputVector">
      <field cname="buffer" name="Buffer" type="gpointer"/>
      <field cname="size" name="Size" type="gsize"/>
    </struct>
    <struct name="Resource" cname="GResource">
      <constructor cname="g_resource_new_from_data">
        <parameters>
          <parameter name="data" type="GBytes*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </constructor>
      <method name="_Register" cname="g_resources_register">
        <return-type type="void"/>
      </method>
      <method name="_Unregister" cname="g_resources_unregister">
        <return-type type="void"/>
      </method>
      <method name="EnumerateChildren" cname="g_resource_enumerate_children">
        <return-type type="char***" array="true"/>
        <parameters>
          <parameter name="path" type="const-gchar*"/>
          <parameter name="lookup_flags" type="GResourceLookupFlags"/>
        </parameters>
      </method>
      <method name="GetInfo" cname="g_resource_get_info">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="path" type="const-gchar*"/>
          <parameter name="lookup_flags" type="GResourceLookupFlags"/>
          <parameter name="size" type="gsize*"/>
          <parameter name="flags" type="guint32*"/>
        </parameters>
      </method>
      <method name="LookupData" cname="g_resource_lookup_data">
        <return-type type="GBytes*">
          <warning>missing glib:type-name</warning>
        </return-type>
        <parameters>
          <parameter name="path" type="const-gchar*"/>
          <parameter name="lookup_flags" type="GResourceLookupFlags"/>
        </parameters>
      </method>
      <method name="OpenStream" cname="g_resource_open_stream">
        <return-type type="GInputStream*"/>
        <parameters>
          <parameter name="path" type="const-gchar*"/>
          <parameter name="lookup_flags" type="GResourceLookupFlags"/>
        </parameters>
      </method>
      <method name="Ref" cname="g_resource_ref">
        <return-type type="GResource*">
          <warning>missing glib:type-name</warning>
        </return-type>
      </method>
      <method name="Unref" cname="g_resource_unref">
        <return-type type="void"/>
      </method>
      <method name="Load" cname="g_resource_load" shared="true">
        <return-type type="GResource*">
          <warning>missing glib:type-name</warning>
        </return-type>
        <parameters>
          <parameter name="filename" type="filename"/>
        </parameters>
      </method>
    </struct>
    <struct name="SettingsSchema" cname="GSettingsSchema">
      <method name="GetId" cname="g_settings_schema_get_id">
        <return-type type="const-gchar*"/>
      </method>
      <method name="GetPath" cname="g_settings_schema_get_path">
        <return-type type="const-gchar*"/>
      </method>
      <method name="Ref" cname="g_settings_schema_ref">
        <return-type type="GSettingsSchema*">
          <warning>missing glib:type-name</warning>
        </return-type>
      </method>
      <method name="Unref" cname="g_settings_schema_unref">
        <return-type type="void"/>
      </method>
    </struct>
    <struct name="SettingsSchemaSource" cname="GSettingsSchemaSource">
      <constructor cname="g_settings_schema_source_new_from_directory">
        <parameters>
          <parameter name="directory" type="const-gchar*"/>
          <parameter name="parent" type="GSettingsSchemaSource*">
            <warning>missing glib:type-name</warning>
          </parameter>
          <parameter name="trusted" type="gboolean"/>
        </parameters>
      </constructor>
      <method name="Lookup" cname="g_settings_schema_source_lookup">
        <return-type type="GSettingsSchema*">
          <warning>missing glib:type-name</warning>
        </return-type>
        <parameters>
          <parameter name="schema_id" type="const-gchar*"/>
          <parameter name="recursive" type="gboolean"/>
        </parameters>
      </method>
      <method name="Ref" cname="g_settings_schema_source_ref">
        <return-type type="GSettingsSchemaSource*">
          <warning>missing glib:type-name</warning>
        </return-type>
      </method>
      <method name="Unref" cname="g_settings_schema_source_unref">
        <return-type type="void"/>
      </method>
      <method name="GetDefault" cname="g_settings_schema_source_get_default" shared="true">
        <return-type type="GSettingsSchemaSource*">
          <warning>missing glib:type-name</warning>
        </return-type>
      </method>
    </struct>
    <struct name="SrvTarget" cname="GSrvTarget">
      <constructor cname="g_srv_target_new">
        <parameters>
          <parameter name="hostname" type="const-gchar*"/>
          <parameter name="port" type="guint16"/>
          <parameter name="priority" type="guint16"/>
          <parameter name="weight" type="guint16"/>
        </parameters>
      </constructor>
      <method name="Copy" cname="g_srv_target_copy">
        <return-type type="GSrvTarget*">
          <warning>missing glib:type-name</warning>
        </return-type>
      </method>
      <method name="Free" cname="g_srv_target_free">
        <return-type type="void"/>
      </method>
      <method name="GetHostname" cname="g_srv_target_get_hostname">
        <return-type type="const-gchar*"/>
      </method>
      <method name="GetPort" cname="g_srv_target_get_port">
        <return-type type="guint16"/>
      </method>
      <method name="GetPriority" cname="g_srv_target_get_priority">
        <return-type type="guint16"/>
      </method>
      <method name="GetWeight" cname="g_srv_target_get_weight">
        <return-type type="guint16"/>
      </method>
      <method name="ListSort" cname="g_srv_target_list_sort" shared="true">
        <return-type type="GList*">
          <warning>missing glib:type-name</warning>
        </return-type>
        <parameters>
          <parameter name="targets" type="GList*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
    </struct>
    <struct name="StaticResource" cname="GStaticResource">
      <field cname="data" name="Data" type="guint8"/>
      <field cname="data_len" name="DataLen" type="gsize"/>
      <field cname="resource" name="Resource" type="GResource*">
        <warning>missing glib:type-name</warning>
      </field>
      <field cname="next" name="Next" type="GStaticResource*">
        <warning>missing glib:type-name</warning>
      </field>
      <field cname="padding" name="Padding" type="gpointer"/>
      <method name="Fini" cname="g_static_resource_fini">
        <return-type type="void"/>
      </method>
      <method name="GetResource" cname="g_static_resource_get_resource">
        <return-type type="GResource*">
          <warning>missing glib:type-name</warning>
        </return-type>
      </method>
      <method name="Init" cname="g_static_resource_init">
        <return-type type="void"/>
      </method>
    </struct>
    <callback name="AsyncReadyCallback" cname="GAsyncReadyCallback">
      <return-type type="void"/>
      <parameters>
        <parameter name="source_object" type="GObject*"/>
        <parameter name="res" type="GAsyncResult*"/>
        <parameter name="user_data" type="gpointer"/>
      </parameters>
    </callback>
    <callback name="BusAcquiredCallback" cname="GBusAcquiredCallback">
      <return-type type="void"/>
      <parameters>
        <parameter name="connection" type="GDBusConnection*"/>
        <parameter name="name" type="const-gchar*"/>
        <parameter name="user_data" type="gpointer"/>
      </parameters>
    </callback>
    <callback name="BusNameAcquiredCallback" cname="GBusNameAcquiredCallback">
      <return-type type="void"/>
      <parameters>
        <parameter name="connection" type="GDBusConnection*"/>
        <parameter name="name" type="const-gchar*"/>
        <parameter name="user_data" type="gpointer"/>
      </parameters>
    </callback>
    <callback name="BusNameAppearedCallback" cname="GBusNameAppearedCallback">
      <return-type type="void"/>
      <parameters>
        <parameter name="connection" type="GDBusConnection*"/>
        <parameter name="name" type="const-gchar*"/>
        <parameter name="name_owner" type="const-gchar*"/>
        <parameter name="user_data" type="gpointer"/>
      </parameters>
    </callback>
    <callback name="BusNameLostCallback" cname="GBusNameLostCallback">
      <return-type type="void"/>
      <parameters>
        <parameter name="connection" type="GDBusConnection*"/>
        <parameter name="name" type="const-gchar*"/>
        <parameter name="user_data" type="gpointer"/>
      </parameters>
    </callback>
    <callback name="BusNameVanishedCallback" cname="GBusNameVanishedCallback">
      <return-type type="void"/>
      <parameters>
        <parameter name="connection" type="GDBusConnection*"/>
        <parameter name="name" type="const-gchar*"/>
        <parameter name="user_data" type="gpointer"/>
      </parameters>
    </callback>
    <callback name="CancellableSourceFunc" cname="GCancellableSourceFunc">
      <return-type type="gboolean"/>
      <parameters>
        <parameter name="cancellable" type="GCancellable*"/>
        <parameter name="user_data" type="gpointer"/>
      </parameters>
    </callback>
    <callback name="DBusInterfaceGetPropertyFunc" cname="GDBusInterfaceGetPropertyFunc">
      <return-type type="GVariant*">
        <warning>missing glib:type-name</warning>
      </return-type>
      <parameters>
        <parameter name="connection" type="GDBusConnection*"/>
        <parameter name="sender" type="const-gchar*"/>
        <parameter name="object_path" type="const-gchar*"/>
        <parameter name="interface_name" type="const-gchar*"/>
        <parameter name="property_name" type="const-gchar*"/>
        <parameter name="error" type="GError**">
          <warning>missing glib:type-name</warning>
        </parameter>
        <parameter name="user_data" type="gpointer"/>
      </parameters>
    </callback>
    <callback name="DBusInterfaceMethodCallFunc" cname="GDBusInterfaceMethodCallFunc">
      <return-type type="void"/>
      <parameters>
        <parameter name="connection" type="GDBusConnection*"/>
        <parameter name="sender" type="const-gchar*"/>
        <parameter name="object_path" type="const-gchar*"/>
        <parameter name="interface_name" type="const-gchar*"/>
        <parameter name="method_name" type="const-gchar*"/>
        <parameter name="parameters" type="GVariant*">
          <warning>missing glib:type-name</warning>
        </parameter>
        <parameter name="invocation" type="GDBusMethodInvocation*"/>
        <parameter name="user_data" type="gpointer"/>
      </parameters>
    </callback>
    <callback name="DBusInterfaceSetPropertyFunc" cname="GDBusInterfaceSetPropertyFunc">
      <return-type type="gboolean"/>
      <parameters>
        <parameter name="connection" type="GDBusConnection*"/>
        <parameter name="sender" type="const-gchar*"/>
        <parameter name="object_path" type="const-gchar*"/>
        <parameter name="interface_name" type="const-gchar*"/>
        <parameter name="property_name" type="const-gchar*"/>
        <parameter name="value" type="GVariant*">
          <warning>missing glib:type-name</warning>
        </parameter>
        <parameter name="error" type="GError**">
          <warning>missing glib:type-name</warning>
        </parameter>
        <parameter name="user_data" type="gpointer"/>
      </parameters>
    </callback>
    <callback name="DBusMessageFilterFunction" cname="GDBusMessageFilterFunction">
      <return-type type="GDBusMessage*"/>
      <parameters>
        <parameter name="connection" type="GDBusConnection*"/>
        <parameter name="message" type="GDBusMessage*"/>
        <parameter name="incoming" type="gboolean"/>
        <parameter name="user_data" type="gpointer"/>
      </parameters>
    </callback>
    <callback name="DBusProxyTypeFunc" cname="GDBusProxyTypeFunc">
      <return-type type="GType"/>
      <parameters>
        <parameter name="manager" type="GDBusObjectManagerClient*"/>
        <parameter name="object_path" type="const-gchar*"/>
        <parameter name="interface_name" type="const-gchar*"/>
        <parameter name="user_data" type="gpointer"/>
      </parameters>
    </callback>
    <callback name="DBusSignalCallback" cname="GDBusSignalCallback">
      <return-type type="void"/>
      <parameters>
        <parameter name="connection" type="GDBusConnection*"/>
        <parameter name="sender_name" type="const-gchar*"/>
        <parameter name="object_path" type="const-gchar*"/>
        <parameter name="interface_name" type="const-gchar*"/>
        <parameter name="signal_name" type="const-gchar*"/>
        <parameter name="parameters" type="GVariant*">
          <warning>missing glib:type-name</warning>
        </parameter>
        <parameter name="user_data" type="gpointer"/>
      </parameters>
    </callback>
    <callback name="DBusSubtreeDispatchFunc" cname="GDBusSubtreeDispatchFunc">
      <return-type type="GDBusInterfaceVTable*">
        <warning>missing glib:type-name</warning>
      </return-type>
      <parameters>
        <parameter name="connection" type="GDBusConnection*"/>
        <parameter name="sender" type="const-gchar*"/>
        <parameter name="object_path" type="const-gchar*"/>
        <parameter name="interface_name" type="const-gchar*"/>
        <parameter name="node" type="const-gchar*"/>
        <parameter name="out_user_data" type="gpointer"/>
        <parameter name="user_data" type="gpointer"/>
      </parameters>
    </callback>
    <callback name="DBusSubtreeEnumerateFunc" cname="GDBusSubtreeEnumerateFunc">
      <return-type type="gchar**" array="true"/>
      <parameters>
        <parameter name="connection" type="GDBusConnection*"/>
        <parameter name="sender" type="const-gchar*"/>
        <parameter name="object_path" type="const-gchar*"/>
        <parameter name="user_data" type="gpointer"/>
      </parameters>
    </callback>
    <callback name="DBusSubtreeIntrospectFunc" cname="GDBusSubtreeIntrospectFunc">
      <return-type type="GDBusInterfaceInfo**">
        <warning>missing glib:type-name</warning>
      </return-type>
      <parameters>
        <parameter name="connection" type="GDBusConnection*"/>
        <parameter name="sender" type="const-gchar*"/>
        <parameter name="object_path" type="const-gchar*"/>
        <parameter name="node" type="const-gchar*"/>
        <parameter name="user_data" type="gpointer"/>
      </parameters>
    </callback>
    <callback name="DesktopAppLaunchCallback" cname="GDesktopAppLaunchCallback">
      <return-type type="void"/>
      <parameters>
        <parameter name="appinfo" type="GDesktopAppInfo*"/>
        <parameter name="pid" type="int"/>
        <parameter name="user_data" type="gpointer"/>
      </parameters>
    </callback>
    <callback name="FileProgressCallback" cname="GFileProgressCallback">
      <return-type type="void"/>
      <parameters>
        <parameter name="current_num_bytes" type="gint64"/>
        <parameter name="total_num_bytes" type="gint64"/>
        <parameter name="user_data" type="gpointer"/>
      </parameters>
    </callback>
    <callback name="FileReadMoreCallback" cname="GFileReadMoreCallback">
      <return-type type="gboolean"/>
      <parameters>
        <parameter name="file_contents" type="const-gchar*"/>
        <parameter name="file_size" type="gint64"/>
        <parameter name="callback_data" type="gpointer"/>
      </parameters>
    </callback>
    <callback name="IOSchedulerJobFunc" cname="GIOSchedulerJobFunc">
      <return-type type="gboolean"/>
      <parameters>
        <parameter name="job" type="GIOSchedulerJob*">
          <warning>missing glib:type-name</warning>
        </parameter>
        <parameter name="cancellable" type="GCancellable*"/>
        <parameter name="user_data" type="gpointer"/>
      </parameters>
    </callback>
    <callback name="PollableSourceFunc" cname="GPollableSourceFunc">
      <return-type type="gboolean"/>
      <parameters>
        <parameter name="pollable_stream" type="GObject*"/>
        <parameter name="user_data" type="gpointer"/>
      </parameters>
    </callback>
    <callback name="ReallocFunc" cname="GReallocFunc">
      <return-type type="gpointer"/>
      <parameters>
        <parameter name="data" type="gpointer"/>
        <parameter name="size" type="gsize"/>
      </parameters>
    </callback>
    <callback name="SettingsBindGetMapping" cname="GSettingsBindGetMapping">
      <return-type type="gboolean"/>
      <parameters>
        <parameter name="value" type="GValue*">
          <warning>missing glib:type-name</warning>
        </parameter>
        <parameter name="variant" type="GVariant*">
          <warning>missing glib:type-name</warning>
        </parameter>
        <parameter name="user_data" type="gpointer"/>
      </parameters>
    </callback>
    <callback name="SettingsBindSetMapping" cname="GSettingsBindSetMapping">
      <return-type type="GVariant*">
        <warning>missing glib:type-name</warning>
      </return-type>
      <parameters>
        <parameter name="value" type="GValue*">
          <warning>missing glib:type-name</warning>
        </parameter>
        <parameter name="expected_type" type="GVariantType*">
          <warning>missing glib:type-name</warning>
        </parameter>
        <parameter name="user_data" type="gpointer"/>
      </parameters>
    </callback>
    <callback name="SettingsGetMapping" cname="GSettingsGetMapping">
      <return-type type="gboolean"/>
      <parameters>
        <parameter name="value" type="GVariant*">
          <warning>missing glib:type-name</warning>
        </parameter>
        <parameter name="_result" type="gpointer*"/>
        <parameter name="user_data" type="gpointer"/>
      </parameters>
    </callback>
    <callback name="SimpleAsyncThreadFunc" cname="GSimpleAsyncThreadFunc">
      <return-type type="void"/>
      <parameters>
        <parameter name="res" type="GSimpleAsyncResult*"/>
        <parameter name="_object" type="GObject*"/>
        <parameter name="cancellable" type="GCancellable*"/>
      </parameters>
    </callback>
    <callback name="SocketSourceFunc" cname="GSocketSourceFunc">
      <return-type type="gboolean"/>
      <parameters>
        <parameter name="socket" type="GSocket*"/>
        <parameter name="condition" type="GIOCondition"/>
        <parameter name="user_data" type="gpointer"/>
      </parameters>
    </callback>
    <callback name="Activate" cname="GioActivateFunc">
      <return-type type="void"/>
      <parameters>
        <parameter name="action" type="GSimpleAction*"/>
        <parameter name="parameter" type="GVariant*">
          <warning>missing glib:type-name</warning>
        </parameter>
        <parameter name="user_data" type="gpointer"/>
      </parameters>
    </callback>
    <callback name="ChangeState" cname="GioChangeStateFunc">
      <return-type type="void"/>
      <parameters>
        <parameter name="action" type="GSimpleAction*"/>
        <parameter name="value" type="GVariant*">
          <warning>missing glib:type-name</warning>
        </parameter>
        <parameter name="user_data" type="gpointer"/>
      </parameters>
    </callback>
    <callback name="HasAction" cname="GioHasActionFunc">
      <return-type type="gboolean"/>
      <parameters>
        <parameter name="action_group" type="GActionGroup*"/>
        <parameter name="action_name" type="const-gchar*"/>
      </parameters>
    </callback>
    <callback name="ListActions" cname="GioListActionsFunc">
      <return-type type="gchar***" array="true"/>
      <parameters>
        <parameter name="action_group" type="GActionGroup*"/>
      </parameters>
    </callback>
    <callback name="GetActionEnabled" cname="GioGetActionEnabledFunc">
      <return-type type="gboolean"/>
      <parameters>
        <parameter name="action_group" type="GActionGroup*"/>
        <parameter name="action_name" type="const-gchar*"/>
      </parameters>
    </callback>
    <callback name="GetActionParameterType" cname="GioGetActionParameterTypeFunc">
      <return-type type="GVariantType*">
        <warning>missing glib:type-name</warning>
      </return-type>
      <parameters>
        <parameter name="action_group" type="GActionGroup*"/>
        <parameter name="action_name" type="const-gchar*"/>
      </parameters>
    </callback>
    <callback name="GetActionStateType" cname="GioGetActionStateTypeFunc">
      <return-type type="GVariantType*">
        <warning>missing glib:type-name</warning>
      </return-type>
      <parameters>
        <parameter name="action_group" type="GActionGroup*"/>
        <parameter name="action_name" type="const-gchar*"/>
      </parameters>
    </callback>
    <callback name="GetActionStateHint" cname="GioGetActionStateHintFunc">
      <return-type type="GVariant*">
        <warning>missing glib:type-name</warning>
      </return-type>
      <parameters>
        <parameter name="action_group" type="GActionGroup*"/>
        <parameter name="action_name" type="const-gchar*"/>
      </parameters>
    </callback>
    <callback name="GetActionState" cname="GioGetActionStateFunc">
      <return-type type="GVariant*">
        <warning>missing glib:type-name</warning>
      </return-type>
      <parameters>
        <parameter name="action_group" type="GActionGroup*"/>
        <parameter name="action_name" type="const-gchar*"/>
      </parameters>
    </callback>
    <callback name="ChangeActionState" cname="GioChangeActionStateFunc">
      <return-type type="void"/>
      <parameters>
        <parameter name="action_group" type="GActionGroup*"/>
        <parameter name="action_name" type="const-gchar*"/>
        <parameter name="value" type="GVariant*">
          <warning>missing glib:type-name</warning>
        </parameter>
      </parameters>
    </callback>
    <callback name="ActivateAction" cname="GioActivateActionFunc">
      <return-type type="void"/>
      <parameters>
        <parameter name="action_group" type="GActionGroup*"/>
        <parameter name="action_name" type="const-gchar*"/>
        <parameter name="parameter" type="GVariant*">
          <warning>missing glib:type-name</warning>
        </parameter>
      </parameters>
    </callback>
    <callback name="ActionAdded" cname="GioActionAddedFunc">
      <return-type type="void"/>
      <parameters>
        <parameter name="action_group" type="GActionGroup*"/>
        <parameter name="action_name" type="const-gchar*"/>
      </parameters>
    </callback>
    <callback name="ActionRemoved" cname="GioActionRemovedFunc">
      <return-type type="void"/>
      <parameters>
        <parameter name="action_group" type="GActionGroup*"/>
        <parameter name="action_name" type="const-gchar*"/>
      </parameters>
    </callback>
    <callback name="ActionEnabledChanged" cname="GioActionEnabledChangedFunc">
      <return-type type="void"/>
      <parameters>
        <parameter name="action_group" type="GActionGroup*"/>
        <parameter name="action_name" type="const-gchar*"/>
        <parameter name="enabled" type="gboolean"/>
      </parameters>
    </callback>
    <callback name="ActionStateChanged" cname="GioActionStateChangedFunc">
      <return-type type="void"/>
      <parameters>
        <parameter name="action_group" type="GActionGroup*"/>
        <parameter name="action_name" type="const-gchar*"/>
        <parameter name="state" type="GVariant*">
          <warning>missing glib:type-name</warning>
        </parameter>
      </parameters>
    </callback>
    <callback name="QueryAction" cname="GioQueryActionFunc">
      <return-type type="gboolean"/>
      <parameters>
        <parameter name="action_group" type="GActionGroup*"/>
        <parameter name="action_name" type="const-gchar*"/>
        <parameter name="enabled" type="gboolean*"/>
        <parameter name="parameter_type" type="GVariantType**">
          <warning>missing glib:type-name</warning>
        </parameter>
        <parameter name="state_type" type="GVariantType**">
          <warning>missing glib:type-name</warning>
        </parameter>
        <parameter name="state_hint" type="GVariant**">
          <warning>missing glib:type-name</warning>
        </parameter>
        <parameter name="state" type="GVariant**">
          <warning>missing glib:type-name</warning>
        </parameter>
      </parameters>
    </callback>
    <callback name="GetName" cname="GioGetNameFunc">
      <return-type type="gchar*"/>
      <parameters>
        <parameter name="action" type="GAction*"/>
      </parameters>
    </callback>
    <callback name="GetParameterType" cname="GioGetParameterTypeFunc">
      <return-type type="GVariantType*">
        <warning>missing glib:type-name</warning>
      </return-type>
      <parameters>
        <parameter name="action" type="GAction*"/>
      </parameters>
    </callback>
    <callback name="GetStateType" cname="GioGetStateTypeFunc">
      <return-type type="GVariantType*">
        <warning>missing glib:type-name</warning>
      </return-type>
      <parameters>
        <parameter name="action" type="GAction*"/>
      </parameters>
    </callback>
    <callback name="GetStateHint" cname="GioGetStateHintFunc">
      <return-type type="GVariant*">
        <warning>missing glib:type-name</warning>
      </return-type>
      <parameters>
        <parameter name="action" type="GAction*"/>
      </parameters>
    </callback>
    <callback name="GetEnabled" cname="GioGetEnabledFunc">
      <return-type type="gboolean"/>
      <parameters>
        <parameter name="action" type="GAction*"/>
      </parameters>
    </callback>
    <callback name="GetState" cname="GioGetStateFunc">
      <return-type type="GVariant*">
        <warning>missing glib:type-name</warning>
      </return-type>
      <parameters>
        <parameter name="action" type="GAction*"/>
      </parameters>
    </callback>
    <callback name="ChangeState" cname="GioChangeStateFunc">
      <return-type type="void"/>
      <parameters>
        <parameter name="action" type="GAction*"/>
        <parameter name="value" type="GVariant*">
          <warning>missing glib:type-name</warning>
        </parameter>
      </parameters>
    </callback>
    <callback name="Activate" cname="GioActivateFunc">
      <return-type type="void"/>
      <parameters>
        <parameter name="action" type="GAction*"/>
        <parameter name="parameter" type="GVariant*">
          <warning>missing glib:type-name</warning>
        </parameter>
      </parameters>
    </callback>
    <callback name="LookupAction" cname="GioLookupActionFunc">
      <return-type type="GAction*"/>
      <parameters>
        <parameter name="action_map" type="GActionMap*"/>
        <parameter name="action_name" type="const-gchar*"/>
      </parameters>
    </callback>
    <callback name="AddAction" cname="GioAddActionFunc">
      <return-type type="void"/>
      <parameters>
        <parameter name="action_map" type="GActionMap*"/>
        <parameter name="action" type="GAction*"/>
      </parameters>
    </callback>
    <callback name="RemoveAction" cname="GioRemoveActionFunc">
      <return-type type="void"/>
      <parameters>
        <parameter name="action_map" type="GActionMap*"/>
        <parameter name="action_name" type="const-gchar*"/>
      </parameters>
    </callback>
    <callback name="Dup" cname="GioDupFunc">
      <return-type type="GAppInfo*"/>
      <parameters>
        <parameter name="appinfo" type="GAppInfo*"/>
      </parameters>
    </callback>
    <callback name="Equal" cname="GioEqualFunc">
      <return-type type="gboolean"/>
      <parameters>
        <parameter name="appinfo1" type="GAppInfo*"/>
        <parameter name="appinfo2" type="GAppInfo*"/>
      </parameters>
    </callback>
    <callback name="GetId" cname="GioGetIdFunc">
      <return-type type="gchar*"/>
      <parameters>
        <parameter name="appinfo" type="GAppInfo*"/>
      </parameters>
    </callback>
    <callback name="GetName" cname="GioGetNameFunc">
      <return-type type="gchar*"/>
      <parameters>
        <parameter name="appinfo" type="GAppInfo*"/>
      </parameters>
    </callback>
    <callback name="GetDescription" cname="GioGetDescriptionFunc">
      <return-type type="gchar*"/>
      <parameters>
        <parameter name="appinfo" type="GAppInfo*"/>
      </parameters>
    </callback>
    <callback name="GetExecutable" cname="GioGetExecutableFunc">
      <return-type type="gchar*"/>
      <parameters>
        <parameter name="appinfo" type="GAppInfo*"/>
      </parameters>
    </callback>
    <callback name="GetIcon" cname="GioGetIconFunc">
      <return-type type="GIcon*"/>
      <parameters>
        <parameter name="appinfo" type="GAppInfo*"/>
      </parameters>
    </callback>
    <callback name="Launch" cname="GioLaunchFunc">
      <return-type type="gboolean"/>
      <parameters>
        <parameter name="appinfo" type="GAppInfo*"/>
        <parameter name="files" type="GList*">
          <warning>missing glib:type-name</warning>
        </parameter>
        <parameter name="launch_context" type="GAppLaunchContext*"/>
      </parameters>
    </callback>
    <callback name="SupportsUris" cname="GioSupportsUrisFunc">
      <return-type type="gboolean"/>
      <parameters>
        <parameter name="appinfo" type="GAppInfo*"/>
      </parameters>
    </callback>
    <callback name="SupportsFiles" cname="GioSupportsFilesFunc">
      <return-type type="gboolean"/>
      <parameters>
        <parameter name="appinfo" type="GAppInfo*"/>
      </parameters>
    </callback>
    <callback name="LaunchUris" cname="GioLaunchUrisFunc">
      <return-type type="gboolean"/>
      <parameters>
        <parameter name="appinfo" type="GAppInfo*"/>
        <parameter name="uris" type="GList*">
          <warning>missing glib:type-name</warning>
        </parameter>
        <parameter name="launch_context" type="GAppLaunchContext*"/>
      </parameters>
    </callback>
    <callback name="ShouldShow" cname="GioShouldShowFunc">
      <return-type type="gboolean"/>
      <parameters>
        <parameter name="appinfo" type="GAppInfo*"/>
      </parameters>
    </callback>
    <callback name="SetAsDefaultForType" cname="GioSetAsDefaultForTypeFunc">
      <return-type type="gboolean"/>
      <parameters>
        <parameter name="appinfo" type="GAppInfo*"/>
        <parameter name="content_type" type="const-gchar*"/>
      </parameters>
    </callback>
    <callback name="SetAsDefaultForExtension" cname="GioSetAsDefaultForExtensionFunc">
      <return-type type="gboolean"/>
      <parameters>
        <parameter name="appinfo" type="GAppInfo*"/>
        <parameter name="extension" type="const-gchar*"/>
      </parameters>
    </callback>
    <callback name="AddSupportsType" cname="GioAddSupportsTypeFunc">
      <return-type type="gboolean"/>
      <parameters>
        <parameter name="appinfo" type="GAppInfo*"/>
        <parameter name="content_type" type="const-gchar*"/>
      </parameters>
    </callback>
    <callback name="CanRemoveSupportsType" cname="GioCanRemoveSupportsTypeFunc">
      <return-type type="gboolean"/>
      <parameters>
        <parameter name="appinfo" type="GAppInfo*"/>
      </parameters>
    </callback>
    <callback name="RemoveSupportsType" cname="GioRemoveSupportsTypeFunc">
      <return-type type="gboolean"/>
      <parameters>
        <parameter name="appinfo" type="GAppInfo*"/>
        <parameter name="content_type" type="const-gchar*"/>
      </parameters>
    </callback>
    <callback name="CanDelete" cname="GioCanDeleteFunc">
      <return-type type="gboolean"/>
      <parameters>
        <parameter name="appinfo" type="GAppInfo*"/>
      </parameters>
    </callback>
    <callback name="DoDelete" cname="GioDoDeleteFunc">
      <return-type type="gboolean"/>
      <parameters>
        <parameter name="appinfo" type="GAppInfo*"/>
      </parameters>
    </callback>
    <callback name="GetCommandline" cname="GioGetCommandlineFunc">
      <return-type type="gchar*"/>
      <parameters>
        <parameter name="appinfo" type="GAppInfo*"/>
      </parameters>
    </callback>
    <callback name="GetDisplayName" cname="GioGetDisplayNameFunc">
      <return-type type="gchar*"/>
      <parameters>
        <parameter name="appinfo" type="GAppInfo*"/>
      </parameters>
    </callback>
    <callback name="SetAsLastUsedForType" cname="GioSetAsLastUsedForTypeFunc">
      <return-type type="gboolean"/>
      <parameters>
        <parameter name="appinfo" type="GAppInfo*"/>
        <parameter name="content_type" type="const-gchar*"/>
      </parameters>
    </callback>
    <callback name="GetDisplay" cname="GioGetDisplayFunc">
      <return-type type="gchar*"/>
      <parameters>
        <parameter name="context" type="GAppLaunchContext*"/>
        <parameter name="info" type="GAppInfo*"/>
        <parameter name="files" type="GList*">
          <warning>missing glib:type-name</warning>
        </parameter>
      </parameters>
    </callback>
    <callback name="GetStartupNotifyId" cname="GioGetStartupNotifyIdFunc">
      <return-type type="gchar*"/>
      <parameters>
        <parameter name="context" type="GAppLaunchContext*"/>
        <parameter name="info" type="GAppInfo*"/>
        <parameter name="files" type="GList*">
          <warning>missing glib:type-name</warning>
        </parameter>
      </parameters>
    </callback>
    <callback name="LaunchFailed" cname="GioLaunchFailedFunc">
      <return-type type="void"/>
      <parameters>
        <parameter name="context" type="GAppLaunchContext*"/>
        <parameter name="startup_notify_id" type="const-gchar*"/>
      </parameters>
    </callback>
    <callback name="_gGReserved1" cname="Gio_gGReserved1Func">
      <return-type type="void"/>
    </callback>
    <callback name="_gGReserved2" cname="Gio_gGReserved2Func">
      <return-type type="void"/>
    </callback>
    <callback name="_gGReserved3" cname="Gio_gGReserved3Func">
      <return-type type="void"/>
    </callback>
    <callback name="_gGReserved4" cname="Gio_gGReserved4Func">
      <return-type type="void"/>
    </callback>
    <callback name="_gGReserved5" cname="Gio_gGReserved5Func">
      <return-type type="void"/>
    </callback>
    <callback name="Startup" cname="GioStartupFunc">
      <return-type type="void"/>
      <parameters>
        <parameter name="application" type="GApplication*"/>
      </parameters>
    </callback>
    <callback name="Activate" cname="GioActivateFunc">
      <return-type type="void"/>
      <parameters>
        <parameter name="application" type="GApplication*"/>
      </parameters>
    </callback>
    <callback name="Open" cname="GioOpenFunc">
      <return-type type="void"/>
      <parameters>
        <parameter name="application" type="GApplication*"/>
        <parameter name="files" type="GFile**" array_len="2"/>
        <parameter name="n_files" type="gint"/>
        <parameter name="hint" type="const-gchar*"/>
      </parameters>
    </callback>
    <callback name="CommandLine" cname="GioCommandLineFunc">
      <return-type type="gint"/>
      <parameters>
        <parameter name="application" type="GApplication*"/>
        <parameter name="command_line" type="GApplicationCommandLine*"/>
      </parameters>
    </callback>
    <callback name="LocalCommandLine" cname="GioLocalCommandLineFunc">
      <return-type type="gboolean"/>
      <parameters>
        <parameter name="application" type="GApplication*"/>
        <parameter name="arguments" type="const-gchar*"/>
        <parameter name="exit_status" type="gint"/>
      </parameters>
    </callback>
    <callback name="BeforeEmit" cname="GioBeforeEmitFunc">
      <return-type type="void"/>
      <parameters>
        <parameter name="application" type="GApplication*"/>
        <parameter name="platform_data" type="GVariant*">
          <warning>missing glib:type-name</warning>
        </parameter>
      </parameters>
    </callback>
    <callback name="AfterEmit" cname="GioAfterEmitFunc">
      <return-type type="void"/>
      <parameters>
        <parameter name="application" type="GApplication*"/>
        <parameter name="platform_data" type="GVariant*">
          <warning>missing glib:type-name</warning>
        </parameter>
      </parameters>
    </callback>
    <callback name="AddPlatformData" cname="GioAddPlatformDataFunc">
      <return-type type="void"/>
      <parameters>
        <parameter name="application" type="GApplication*"/>
        <parameter name="builder" type="GVariantBuilder*">
          <warning>missing glib:type-name</warning>
        </parameter>
      </parameters>
    </callback>
    <callback name="QuitMainloop" cname="GioQuitMainloopFunc">
      <return-type type="void"/>
      <parameters>
        <parameter name="application" type="GApplication*"/>
      </parameters>
    </callback>
    <callback name="RunMainloop" cname="GioRunMainloopFunc">
      <return-type type="void"/>
      <parameters>
        <parameter name="application" type="GApplication*"/>
      </parameters>
    </callback>
    <callback name="Shutdown" cname="GioShutdownFunc">
      <return-type type="void"/>
      <parameters>
        <parameter name="application" type="GApplication*"/>
      </parameters>
    </callback>
    <callback name="PrintLiteral" cname="GioPrintLiteralFunc">
      <return-type type="void"/>
      <parameters>
        <parameter name="cmdline" type="GApplicationCommandLine*"/>
        <parameter name="message" type="const-gchar*"/>
      </parameters>
    </callback>
    <callback name="PrinterrLiteral" cname="GioPrinterrLiteralFunc">
      <return-type type="void"/>
      <parameters>
        <parameter name="cmdline" type="GApplicationCommandLine*"/>
        <parameter name="message" type="const-gchar*"/>
      </parameters>
    </callback>
    <callback name="InitAsync" cname="GioInitAsyncFunc">
      <return-type type="void"/>
      <parameters>
        <parameter name="initable" type="GAsyncInitable*"/>
        <parameter name="io_priority" type="gint"/>
        <parameter name="cancellable" type="GCancellable*"/>
        <parameter name="callback" type="GAsyncReadyCallback"/>
        <parameter name="user_data" type="gpointer"/>
      </parameters>
    </callback>
    <callback name="InitFinish" cname="GioInitFinishFunc">
      <return-type type="gboolean"/>
      <parameters>
        <parameter name="initable" type="GAsyncInitable*"/>
        <parameter name="res" type="GAsyncResult*"/>
      </parameters>
    </callback>
    <callback name="GetUserData" cname="GioGetUserDataFunc">
      <return-type type="gpointer*"/>
      <parameters>
        <parameter name="res" type="GAsyncResult*"/>
      </parameters>
    </callback>
    <callback name="GetSourceObject" cname="GioGetSourceObjectFunc">
      <return-type type="GObject*"/>
      <parameters>
        <parameter name="res" type="GAsyncResult*"/>
      </parameters>
    </callback>
    <callback name="Fill" cname="GioFillFunc">
      <return-type type="gssize"/>
      <parameters>
        <parameter name="stream" type="GBufferedInputStream*"/>
        <parameter name="count" type="gssize"/>
        <parameter name="cancellable" type="GCancellable*"/>
      </parameters>
    </callback>
    <callback name="FillAsync" cname="GioFillAsyncFunc">
      <return-type type="void"/>
      <parameters>
        <parameter name="stream" type="GBufferedInputStream*"/>
        <parameter name="count" type="gssize"/>
        <parameter name="io_priority" type="gint"/>
        <parameter name="cancellable" type="GCancellable*"/>
        <parameter name="callback" type="GAsyncReadyCallback"/>
        <parameter name="user_data" type="gpointer"/>
      </parameters>
    </callback>
    <callback name="FillFinish" cname="GioFillFinishFunc">
      <return-type type="gssize"/>
      <parameters>
        <parameter name="stream" type="GBufferedInputStream*"/>
        <parameter name="_result" type="GAsyncResult*"/>
      </parameters>
    </callback>
    <callback name="_gGReserved1" cname="Gio_gGReserved1Func">
      <return-type type="void"/>
    </callback>
    <callback name="_gGReserved2" cname="Gio_gGReserved2Func">
      <return-type type="void"/>
    </callback>
    <callback name="_gGReserved3" cname="Gio_gGReserved3Func">
      <return-type type="void"/>
    </callback>
    <callback name="_gGReserved4" cname="Gio_gGReserved4Func">
      <return-type type="void"/>
    </callback>
    <callback name="_gGReserved5" cname="Gio_gGReserved5Func">
      <return-type type="void"/>
    </callback>
    <callback name="_gGReserved1" cname="Gio_gGReserved1Func">
      <return-type type="void"/>
    </callback>
    <callback name="_gGReserved2" cname="Gio_gGReserved2Func">
      <return-type type="void"/>
    </callback>
    <callback name="Cancelled" cname="GioCancelledFunc">
      <return-type type="void"/>
      <parameters>
        <parameter name="cancellable" type="GCancellable*"/>
      </parameters>
    </callback>
    <callback name="_gGReserved1" cname="Gio_gGReserved1Func">
      <return-type type="void"/>
    </callback>
    <callback name="_gGReserved2" cname="Gio_gGReserved2Func">
      <return-type type="void"/>
    </callback>
    <callback name="_gGReserved3" cname="Gio_gGReserved3Func">
      <return-type type="void"/>
    </callback>
    <callback name="_gGReserved4" cname="Gio_gGReserved4Func">
      <return-type type="void"/>
    </callback>
    <callback name="_gGReserved5" cname="Gio_gGReserved5Func">
      <return-type type="void"/>
    </callback>
    <callback name="Convert" cname="GioConvertFunc">
      <return-type type="GConverterResult"/>
      <parameters>
        <parameter name="converter" type="GConverter*"/>
        <parameter name="inbuf" type="void*" array_len="2"/>
        <parameter name="inbuf_size" type="gsize"/>
        <parameter name="outbuf" type="gpointer"/>
        <parameter name="outbuf_size" type="gsize"/>
        <parameter name="flags" type="GConverterFlags"/>
        <parameter name="bytes_read" type="gsize*"/>
        <parameter name="bytes_written" type="gsize*"/>
      </parameters>
    </callback>
    <callback name="Reset" cname="GioResetFunc">
      <return-type type="void"/>
      <parameters>
        <parameter name="converter" type="GConverter*"/>
      </parameters>
    </callback>
    <callback name="_gGReserved1" cname="Gio_gGReserved1Func">
      <return-type type="void"/>
    </callback>
    <callback name="_gGReserved2" cname="Gio_gGReserved2Func">
      <return-type type="void"/>
    </callback>
    <callback name="_gGReserved3" cname="Gio_gGReserved3Func">
      <return-type type="void"/>
    </callback>
    <callback name="_gGReserved4" cname="Gio_gGReserved4Func">
      <return-type type="void"/>
    </callback>
    <callback name="_gGReserved5" cname="Gio_gGReserved5Func">
      <return-type type="void"/>
    </callback>
    <callback name="_gGReserved1" cname="Gio_gGReserved1Func">
      <return-type type="void"/>
    </callback>
    <callback name="_gGReserved2" cname="Gio_gGReserved2Func">
      <return-type type="void"/>
    </callback>
    <callback name="_gGReserved3" cname="Gio_gGReserved3Func">
      <return-type type="void"/>
    </callback>
    <callback name="_gGReserved4" cname="Gio_gGReserved4Func">
      <return-type type="void"/>
    </callback>
    <callback name="_gGReserved5" cname="Gio_gGReserved5Func">
      <return-type type="void"/>
    </callback>
    <callback name="GetInfo" cname="GioGetInfoFunc">
      <return-type type="GDBusInterfaceInfo*">
        <warning>missing glib:type-name</warning>
      </return-type>
      <parameters>
        <parameter name="interface_" type="GDBusInterface*"/>
      </parameters>
    </callback>
    <callback name="GetObject" cname="GioGetObjectFunc">
      <return-type type="GDBusObject*"/>
      <parameters>
        <parameter name="interface_" type="GDBusInterface*"/>
      </parameters>
    </callback>
    <callback name="SetObject" cname="GioSetObjectFunc">
      <return-type type="void"/>
      <parameters>
        <parameter name="interface_" type="GDBusInterface*"/>
        <parameter name="_object" type="GDBusObject*"/>
      </parameters>
    </callback>
    <callback name="DupObject" cname="GioDupObjectFunc">
      <return-type type="GDBusObject*"/>
      <parameters>
        <parameter name="interface_" type="GDBusInterface*"/>
      </parameters>
    </callback>
    <callback name="GetInfo" cname="GioGetInfoFunc">
      <return-type type="GDBusInterfaceInfo*">
        <warning>missing glib:type-name</warning>
      </return-type>
      <parameters>
        <parameter name="interface_" type="GDBusInterfaceSkeleton*"/>
      </parameters>
    </callback>
    <callback name="GetVtable" cname="GioGetVtableFunc">
      <return-type type="GDBusInterfaceVTable*">
        <warning>missing glib:type-name</warning>
      </return-type>
      <parameters>
        <parameter name="interface_" type="GDBusInterfaceSkeleton*"/>
      </parameters>
    </callback>
    <callback name="GetProperties" cname="GioGetPropertiesFunc">
      <return-type type="GVariant*">
        <warning>missing glib:type-name</warning>
      </return-type>
      <parameters>
        <parameter name="interface_" type="GDBusInterfaceSkeleton*"/>
      </parameters>
    </callback>
    <callback name="Flush" cname="GioFlushFunc">
      <return-type type="void"/>
      <parameters>
        <parameter name="interface_" type="GDBusInterfaceSkeleton*"/>
      </parameters>
    </callback>
    <callback name="GAuthorizeMethod" cname="GioGAuthorizeMethodFunc">
      <return-type type="gboolean"/>
      <parameters>
        <parameter name="interface_" type="GDBusInterfaceSkeleton*"/>
        <parameter name="invocation" type="GDBusMethodInvocation*"/>
      </parameters>
    </callback>
    <callback name="GetObjectPath" cname="GioGetObjectPathFunc">
      <return-type type="gchar*"/>
      <parameters>
        <parameter name="_object" type="GDBusObject*"/>
      </parameters>
    </callback>
    <callback name="GetInterfaces" cname="GioGetInterfacesFunc">
      <return-type type="GList*">
        <warning>missing glib:type-name</warning>
      </return-type>
      <parameters>
        <parameter name="_object" type="GDBusObject*"/>
      </parameters>
    </callback>
    <callback name="GetInterface" cname="GioGetInterfaceFunc">
      <return-type type="GDBusInterface*"/>
      <parameters>
        <parameter name="_object" type="GDBusObject*"/>
        <parameter name="interface_name" type="const-gchar*"/>
      </parameters>
    </callback>
    <callback name="InterfaceAdded" cname="GioInterfaceAddedFunc">
      <return-type type="void"/>
      <parameters>
        <parameter name="_object" type="GDBusObject*"/>
        <parameter name="interface_" type="GDBusInterface*"/>
      </parameters>
    </callback>
    <callback name="InterfaceRemoved" cname="GioInterfaceRemovedFunc">
      <return-type type="void"/>
      <parameters>
        <parameter name="_object" type="GDBusObject*"/>
        <parameter name="interface_" type="GDBusInterface*"/>
      </parameters>
    </callback>
    <callback name="InterfaceProxySignal" cname="GioInterfaceProxySignalFunc">
      <return-type type="void"/>
      <parameters>
        <parameter name="manager" type="GDBusObjectManagerClient*"/>
        <parameter name="object_proxy" type="GDBusObjectProxy*"/>
        <parameter name="interface_proxy" type="GDBusProxy*"/>
        <parameter name="sender_name" type="const-gchar*"/>
        <parameter name="signal_name" type="const-gchar*"/>
        <parameter name="parameters" type="GVariant*">
          <warning>missing glib:type-name</warning>
        </parameter>
      </parameters>
    </callback>
    <callback name="InterfaceProxyPropertiesChanged" cname="GioInterfaceProxyPropertiesChangedFunc">
      <return-type type="void"/>
      <parameters>
        <parameter name="manager" type="GDBusObjectManagerClient*"/>
        <parameter name="object_proxy" type="GDBusObjectProxy*"/>
        <parameter name="interface_proxy" type="GDBusProxy*"/>
        <parameter name="changed_properties" type="GVariant*">
          <warning>missing glib:type-name</warning>
        </parameter>
        <parameter name="invalidated_properties" type="const-gchar*"/>
      </parameters>
    </callback>
    <callback name="GetObjectPath" cname="GioGetObjectPathFunc">
      <return-type type="gchar*"/>
      <parameters>
        <parameter name="manager" type="GDBusObjectManager*"/>
      </parameters>
    </callback>
    <callback name="GetObjects" cname="GioGetObjectsFunc">
      <return-type type="GList*">
        <warning>missing glib:type-name</warning>
      </return-type>
      <parameters>
        <parameter name="manager" type="GDBusObjectManager*"/>
      </parameters>
    </callback>
    <callback name="GetObject" cname="GioGetObjectFunc">
      <return-type type="GDBusObject*"/>
      <parameters>
        <parameter name="manager" type="GDBusObjectManager*"/>
        <parameter name="object_path" type="const-gchar*"/>
      </parameters>
    </callback>
    <callback name="GetInterface" cname="GioGetInterfaceFunc">
      <return-type type="GDBusInterface*"/>
      <parameters>
        <parameter name="manager" type="GDBusObjectManager*"/>
        <parameter name="object_path" type="const-gchar*"/>
        <parameter name="interface_name" type="const-gchar*"/>
      </parameters>
    </callback>
    <callback name="ObjectAdded" cname="GioObjectAddedFunc">
      <return-type type="void"/>
      <parameters>
        <parameter name="manager" type="GDBusObjectManager*"/>
        <parameter name="_object" type="GDBusObject*"/>
      </parameters>
    </callback>
    <callback name="ObjectRemoved" cname="GioObjectRemovedFunc">
      <return-type type="void"/>
      <parameters>
        <parameter name="manager" type="GDBusObjectManager*"/>
        <parameter name="_object" type="GDBusObject*"/>
      </parameters>
    </callback>
    <callback name="InterfaceAdded" cname="GioInterfaceAddedFunc">
      <return-type type="void"/>
      <parameters>
        <parameter name="manager" type="GDBusObjectManager*"/>
        <parameter name="_object" type="GDBusObject*"/>
        <parameter name="interface_" type="GDBusInterface*"/>
      </parameters>
    </callback>
    <callback name="InterfaceRemoved" cname="GioInterfaceRemovedFunc">
      <return-type type="void"/>
      <parameters>
        <parameter name="manager" type="GDBusObjectManager*"/>
        <parameter name="_object" type="GDBusObject*"/>
        <parameter name="interface_" type="GDBusInterface*"/>
      </parameters>
    </callback>
    <callback name="AuthorizeMethod" cname="GioAuthorizeMethodFunc">
      <return-type type="gboolean"/>
      <parameters>
        <parameter name="_object" type="GDBusObjectSkeleton*"/>
        <parameter name="interface_" type="GDBusInterfaceSkeleton*"/>
        <parameter name="invocation" type="GDBusMethodInvocation*"/>
      </parameters>
    </callback>
    <callback name="GPropertiesChanged" cname="GioGPropertiesChangedFunc">
      <return-type type="void"/>
      <parameters>
        <parameter name="proxy" type="GDBusProxy*"/>
        <parameter name="changed_properties" type="GVariant*">
          <warning>missing glib:type-name</warning>
        </parameter>
        <parameter name="invalidated_properties" type="const-gchar*"/>
      </parameters>
    </callback>
    <callback name="GSignal" cname="GioGSignalFunc">
      <return-type type="void"/>
      <parameters>
        <parameter name="proxy" type="GDBusProxy*"/>
        <parameter name="sender_name" type="const-gchar*"/>
        <parameter name="signal_name" type="const-gchar*"/>
        <parameter name="parameters" type="GVariant*">
          <warning>missing glib:type-name</warning>
        </parameter>
      </parameters>
    </callback>
    <callback name="_gGReserved1" cname="Gio_gGReserved1Func">
      <return-type type="void"/>
    </callback>
    <callback name="_gGReserved2" cname="Gio_gGReserved2Func">
      <return-type type="void"/>
    </callback>
    <callback name="_gGReserved3" cname="Gio_gGReserved3Func">
      <return-type type="void"/>
    </callback>
    <callback name="_gGReserved4" cname="Gio_gGReserved4Func">
      <return-type type="void"/>
    </callback>
    <callback name="_gGReserved5" cname="Gio_gGReserved5Func">
      <return-type type="void"/>
    </callback>
    <callback name="_gGReserved1" cname="Gio_gGReserved1Func">
      <return-type type="void"/>
    </callback>
    <callback name="_gGReserved2" cname="Gio_gGReserved2Func">
      <return-type type="void"/>
    </callback>
    <callback name="_gGReserved3" cname="Gio_gGReserved3Func">
      <return-type type="void"/>
    </callback>
    <callback name="_gGReserved4" cname="Gio_gGReserved4Func">
      <return-type type="void"/>
    </callback>
    <callback name="_gGReserved5" cname="Gio_gGReserved5Func">
      <return-type type="void"/>
    </callback>
    <callback name="GetDefaultForUriScheme" cname="GioGetDefaultForUriSchemeFunc">
      <return-type type="GAppInfo*"/>
      <parameters>
        <parameter name="lookup" type="GDesktopAppInfoLookup*"/>
        <parameter name="uri_scheme" type="const-gchar*"/>
      </parameters>
    </callback>
    <callback name="Changed" cname="GioChangedFunc">
      <return-type type="void"/>
      <parameters>
        <parameter name="drive" type="GDrive*"/>
      </parameters>
    </callback>
    <callback name="Disconnected" cname="GioDisconnectedFunc">
      <return-type type="void"/>
      <parameters>
        <parameter name="drive" type="GDrive*"/>
      </parameters>
    </callback>
    <callback name="EjectButton" cname="GioEjectButtonFunc">
      <return-type type="void"/>
      <parameters>
        <parameter name="drive" type="GDrive*"/>
      </parameters>
    </callback>
    <callback name="GetName" cname="GioGetNameFunc">
      <return-type type="gchar*"/>
      <parameters>
        <parameter name="drive" type="GDrive*"/>
      </parameters>
    </callback>
    <callback name="GetIcon" cname="GioGetIconFunc">
      <return-type type="GIcon*"/>
      <parameters>
        <parameter name="drive" type="GDrive*"/>
      </parameters>
    </callback>
    <callback name="HasVolumes" cname="GioHasVolumesFunc">
      <return-type type="gboolean"/>
      <parameters>
        <parameter name="drive" type="GDrive*"/>
      </parameters>
    </callback>
    <callback name="GetVolumes" cname="GioGetVolumesFunc">
      <return-type type="GList*">
        <warning>missing glib:type-name</warning>
      </return-type>
      <parameters>
        <parameter name="drive" type="GDrive*"/>
      </parameters>
    </callback>
    <callback name="IsMediaRemovable" cname="GioIsMediaRemovableFunc">
      <return-type type="gboolean"/>
      <parameters>
        <parameter name="drive" type="GDrive*"/>
      </parameters>
    </callback>
    <callback name="HasMedia" cname="GioHasMediaFunc">
      <return-type type="gboolean"/>
      <parameters>
        <parameter name="drive" type="GDrive*"/>
      </parameters>
    </callback>
    <callback name="IsMediaCheckAutomatic" cname="GioIsMediaCheckAutomaticFunc">
      <return-type type="gboolean"/>
      <parameters>
        <parameter name="drive" type="GDrive*"/>
      </parameters>
    </callback>
    <callback name="CanEject" cname="GioCanEjectFunc">
      <return-type type="gboolean"/>
      <parameters>
        <parameter name="drive" type="GDrive*"/>
      </parameters>
    </callback>
    <callback name="CanPollForMedia" cname="GioCanPollForMediaFunc">
      <return-type type="gboolean"/>
      <parameters>
        <parameter name="drive" type="GDrive*"/>
      </parameters>
    </callback>
    <callback name="Eject" cname="GioEjectFunc">
      <return-type type="void"/>
      <parameters>
        <parameter name="drive" type="GDrive*"/>
        <parameter name="flags" type="GMountUnmountFlags"/>
        <parameter name="cancellable" type="GCancellable*"/>
        <parameter name="callback" type="GAsyncReadyCallback"/>
        <parameter name="user_data" type="gpointer"/>
      </parameters>
    </callback>
    <callback name="EjectFinish" cname="GioEjectFinishFunc">
      <return-type type="gboolean"/>
      <parameters>
        <parameter name="drive" type="GDrive*"/>
        <parameter name="_result" type="GAsyncResult*"/>
      </parameters>
    </callback>
    <callback name="PollForMedia" cname="GioPollForMediaFunc">
      <return-type type="void"/>
      <parameters>
        <parameter name="drive" type="GDrive*"/>
        <parameter name="cancellable" type="GCancellable*"/>
        <parameter name="callback" type="GAsyncReadyCallback"/>
        <parameter name="user_data" type="gpointer"/>
      </parameters>
    </callback>
    <callback name="PollForMediaFinish" cname="GioPollForMediaFinishFunc">
      <return-type type="gboolean"/>
      <parameters>
        <parameter name="drive" type="GDrive*"/>
        <parameter name="_result" type="GAsyncResult*"/>
      </parameters>
    </callback>
    <callback name="GetIdentifier" cname="GioGetIdentifierFunc">
      <return-type type="gchar*"/>
      <parameters>
        <parameter name="drive" type="GDrive*"/>
        <parameter name="kind" type="const-gchar*"/>
      </parameters>
    </callback>
    <callback name="EnumerateIdentifiers" cname="GioEnumerateIdentifiersFunc">
      <return-type type="char***" array="true"/>
      <parameters>
        <parameter name="drive" type="GDrive*"/>
      </parameters>
    </callback>
    <callback name="GetStartStopType" cname="GioGetStartStopTypeFunc">
      <return-type type="GDriveStartStopType"/>
      <parameters>
        <parameter name="drive" type="GDrive*"/>
      </parameters>
    </callback>
    <callback name="CanStart" cname="GioCanStartFunc">
      <return-type type="gboolean"/>
      <parameters>
        <parameter name="drive" type="GDrive*"/>
      </parameters>
    </callback>
    <callback name="CanStartDegraded" cname="GioCanStartDegradedFunc">
      <return-type type="gboolean"/>
      <parameters>
        <parameter name="drive" type="GDrive*"/>
      </parameters>
    </callback>
    <callback name="Start" cname="GioStartFunc">
      <return-type type="void"/>
      <parameters>
        <parameter name="drive" type="GDrive*"/>
        <parameter name="flags" type="GDriveStartFlags"/>
        <parameter name="mount_operation" type="GMountOperation*"/>
        <parameter name="cancellable" type="GCancellable*"/>
        <parameter name="callback" type="GAsyncReadyCallback"/>
        <parameter name="user_data" type="gpointer"/>
      </parameters>
    </callback>
    <callback name="StartFinish" cname="GioStartFinishFunc">
      <return-type type="gboolean"/>
      <parameters>
        <parameter name="drive" type="GDrive*"/>
        <parameter name="_result" type="GAsyncResult*"/>
      </parameters>
    </callback>
    <callback name="CanStop" cname="GioCanStopFunc">
      <return-type type="gboolean"/>
      <parameters>
        <parameter name="drive" type="GDrive*"/>
      </parameters>
    </callback>
    <callback name="Stop" cname="GioStopFunc">
      <return-type type="void"/>
      <parameters>
        <parameter name="drive" type="GDrive*"/>
        <parameter name="flags" type="GMountUnmountFlags"/>
        <parameter name="mount_operation" type="GMountOperation*"/>
        <parameter name="cancellable" type="GCancellable*"/>
        <parameter name="callback" type="GAsyncReadyCallback"/>
        <parameter name="user_data" type="gpointer"/>
      </parameters>
    </callback>
    <callback name="StopFinish" cname="GioStopFinishFunc">
      <return-type type="gboolean"/>
      <parameters>
        <parameter name="drive" type="GDrive*"/>
        <parameter name="_result" type="GAsyncResult*"/>
      </parameters>
    </callback>
    <callback name="StopButton" cname="GioStopButtonFunc">
      <return-type type="void"/>
      <parameters>
        <parameter name="drive" type="GDrive*"/>
      </parameters>
    </callback>
    <callback name="EjectWithOperation" cname="GioEjectWithOperationFunc">
      <return-type type="void"/>
      <parameters>
        <parameter name="drive" type="GDrive*"/>
        <parameter name="flags" type="GMountUnmountFlags"/>
        <parameter name="mount_operation" type="GMountOperation*"/>
        <parameter name="cancellable" type="GCancellable*"/>
        <parameter name="callback" type="GAsyncReadyCallback"/>
        <parameter name="user_data" type="gpointer"/>
      </parameters>
    </callback>
    <callback name="EjectWithOperationFinish" cname="GioEjectWithOperationFinishFunc">
      <return-type type="gboolean"/>
      <parameters>
        <parameter name="drive" type="GDrive*"/>
        <parameter name="_result" type="GAsyncResult*"/>
      </parameters>
    </callback>
    <callback name="GetSortKey" cname="GioGetSortKeyFunc">
      <return-type type="gchar*"/>
      <parameters>
        <parameter name="drive" type="GDrive*"/>
      </parameters>
    </callback>
    <callback name="GetFd" cname="GioGetFdFunc">
      <return-type type="gint"/>
      <parameters>
        <parameter name="fd_based" type="GFileDescriptorBased*"/>
      </parameters>
    </callback>
    <callback name="NextFile" cname="GioNextFileFunc">
      <return-type type="GFileInfo*"/>
      <parameters>
        <parameter name="enumerator" type="GFileEnumerator*"/>
        <parameter name="cancellable" type="GCancellable*"/>
      </parameters>
    </callback>
    <callback name="CloseFn" cname="GioCloseFnFunc">
      <return-type type="gboolean"/>
      <parameters>
        <parameter name="enumerator" type="GFileEnumerator*"/>
        <parameter name="cancellable" type="GCancellable*"/>
      </parameters>
    </callback>
    <callback name="NextFilesAsync" cname="GioNextFilesAsyncFunc">
      <return-type type="void"/>
      <parameters>
        <parameter name="enumerator" type="GFileEnumerator*"/>
        <parameter name="num_files" type="gint"/>
        <parameter name="io_priority" type="gint"/>
        <parameter name="cancellable" type="GCancellable*"/>
        <parameter name="callback" type="GAsyncReadyCallback"/>
        <parameter name="user_data" type="gpointer"/>
      </parameters>
    </callback>
    <callback name="NextFilesFinish" cname="GioNextFilesFinishFunc">
      <return-type type="GList*">
        <warning>missing glib:type-name</warning>
      </return-type>
      <parameters>
        <parameter name="enumerator" type="GFileEnumerator*"/>
        <parameter name="_result" type="GAsyncResult*"/>
      </parameters>
    </callback>
    <callback name="CloseAsync" cname="GioCloseAsyncFunc">
      <return-type type="void"/>
      <parameters>
        <parameter name="enumerator" type="GFileEnumerator*"/>
        <parameter name="io_priority" type="gint"/>
        <parameter name="cancellable" type="GCancellable*"/>
        <parameter name="callback" type="GAsyncReadyCallback"/>
        <parameter name="user_data" type="gpointer"/>
      </parameters>
    </callback>
    <callback name="CloseFinish" cname="GioCloseFinishFunc">
      <return-type type="gboolean"/>
      <parameters>
        <parameter name="enumerator" type="GFileEnumerator*"/>
        <parameter name="_result" type="GAsyncResult*"/>
      </parameters>
    </callback>
    <callback name="_gGReserved1" cname="Gio_gGReserved1Func">
      <return-type type="void"/>
    </callback>
    <callback name="_gGReserved2" cname="Gio_gGReserved2Func">
      <return-type type="void"/>
    </callback>
    <callback name="_gGReserved3" cname="Gio_gGReserved3Func">
      <return-type type="void"/>
    </callback>
    <callback name="_gGReserved4" cname="Gio_gGReserved4Func">
      <return-type type="void"/>
    </callback>
    <callback name="_gGReserved5" cname="Gio_gGReserved5Func">
      <return-type type="void"/>
    </callback>
    <callback name="_gGReserved6" cname="Gio_gGReserved6Func">
      <return-type type="void"/>
    </callback>
    <callback name="_gGReserved7" cname="Gio_gGReserved7Func">
      <return-type type="void"/>
    </callback>
    <callback name="Tell" cname="GioTellFunc">
      <return-type type="gint64"/>
      <parameters>
        <parameter name="stream" type="GFileIOStream*"/>
      </parameters>
    </callback>
    <callback name="CanSeek" cname="GioCanSeekFunc">
      <return-type type="gboolean"/>
      <parameters>
        <parameter name="stream" type="GFileIOStream*"/>
      </parameters>
    </callback>
    <callback name="Seek" cname="GioSeekFunc">
      <return-type type="gboolean"/>
      <parameters>
        <parameter name="stream" type="GFileIOStream*"/>
        <parameter name="offset" type="gint64"/>
        <parameter name="type" type="GSeekType"/>
        <parameter name="cancellable" type="GCancellable*"/>
      </parameters>
    </callback>
    <callback name="CanTruncate" cname="GioCanTruncateFunc">
      <return-type type="gboolean"/>
      <parameters>
        <parameter name="stream" type="GFileIOStream*"/>
      </parameters>
    </callback>
    <callback name="TruncateFn" cname="GioTruncateFnFunc">
      <return-type type="gboolean"/>
      <parameters>
        <parameter name="stream" type="GFileIOStream*"/>
        <parameter name="size" type="gint64"/>
        <parameter name="cancellable" type="GCancellable*"/>
      </parameters>
    </callback>
    <callback name="QueryInfo" cname="GioQueryInfoFunc">
      <return-type type="GFileInfo*"/>
      <parameters>
        <parameter name="stream" type="GFileIOStream*"/>
        <parameter name="attributes" type="const-gchar*"/>
        <parameter name="cancellable" type="GCancellable*"/>
      </parameters>
    </callback>
    <callback name="QueryInfoAsync" cname="GioQueryInfoAsyncFunc">
      <return-type type="void"/>
      <parameters>
        <parameter name="stream" type="GFileIOStream*"/>
        <parameter name="attributes" type="const-gchar*"/>
        <parameter name="io_priority" type="gint"/>
        <parameter name="cancellable" type="GCancellable*"/>
        <parameter name="callback" type="GAsyncReadyCallback"/>
        <parameter name="user_data" type="gpointer"/>
      </parameters>
    </callback>
    <callback name="QueryInfoFinish" cname="GioQueryInfoFinishFunc">
      <return-type type="GFileInfo*"/>
      <parameters>
        <parameter name="stream" type="GFileIOStream*"/>
        <parameter name="_result" type="GAsyncResult*"/>
      </parameters>
    </callback>
    <callback name="GetEtag" cname="GioGetEtagFunc">
      <return-type type="gchar*"/>
      <parameters>
        <parameter name="stream" type="GFileIOStream*"/>
      </parameters>
    </callback>
    <callback name="_gGReserved1" cname="Gio_gGReserved1Func">
      <return-type type="void"/>
    </callback>
    <callback name="_gGReserved2" cname="Gio_gGReserved2Func">
      <return-type type="void"/>
    </callback>
    <callback name="_gGReserved3" cname="Gio_gGReserved3Func">
      <return-type type="void"/>
    </callback>
    <callback name="_gGReserved4" cname="Gio_gGReserved4Func">
      <return-type type="void"/>
    </callback>
    <callback name="_gGReserved5" cname="Gio_gGReserved5Func">
      <return-type type="void"/>
    </callback>
    <callback name="Dup" cname="GioDupFunc">
      <return-type type="GFile*"/>
      <parameters>
        <parameter name="file" type="GFile*"/>
      </parameters>
    </callback>
    <callback name="Hash" cname="GioHashFunc">
      <return-type type="guint"/>
      <parameters>
        <parameter name="file" type="GFile*"/>
      </parameters>
    </callback>
    <callback name="Equal" cname="GioEqualFunc">
      <return-type type="gboolean"/>
      <parameters>
        <parameter name="file1" type="GFile*"/>
        <parameter name="file2" type="GFile*"/>
      </parameters>
    </callback>
    <callback name="IsNative" cname="GioIsNativeFunc">
      <return-type type="gboolean"/>
      <parameters>
        <parameter name="file" type="GFile*"/>
      </parameters>
    </callback>
    <callback name="HasUriScheme" cname="GioHasUriSchemeFunc">
      <return-type type="gboolean"/>
      <parameters>
        <parameter name="file" type="GFile*"/>
        <parameter name="uri_scheme" type="const-gchar*"/>
      </parameters>
    </callback>
    <callback name="GetUriScheme" cname="GioGetUriSchemeFunc">
      <return-type type="gchar*"/>
      <parameters>
        <parameter name="file" type="GFile*"/>
      </parameters>
    </callback>
    <callback name="GetBasename" cname="GioGetBasenameFunc">
      <return-type type="gchar*"/>
      <parameters>
        <parameter name="file" type="GFile*"/>
      </parameters>
    </callback>
    <callback name="GetPath" cname="GioGetPathFunc">
      <return-type type="gchar*"/>
      <parameters>
        <parameter name="file" type="GFile*"/>
      </parameters>
    </callback>
    <callback name="GetUri" cname="GioGetUriFunc">
      <return-type type="gchar*"/>
      <parameters>
        <parameter name="file" type="GFile*"/>
      </parameters>
    </callback>
    <callback name="GetParseName" cname="GioGetParseNameFunc">
      <return-type type="gchar*"/>
      <parameters>
        <parameter name="file" type="GFile*"/>
      </parameters>
    </callback>
    <callback name="GetParent" cname="GioGetParentFunc">
      <return-type type="GFile*"/>
      <parameters>
        <parameter name="file" type="GFile*"/>
      </parameters>
    </callback>
    <callback name="PrefixMatches" cname="GioPrefixMatchesFunc">
      <return-type type="gboolean"/>
      <parameters>
        <parameter name="prefix" type="GFile*"/>
        <parameter name="file" type="GFile*"/>
      </parameters>
    </callback>
    <callback name="GetRelativePath" cname="GioGetRelativePathFunc">
      <return-type type="gchar*"/>
      <parameters>
        <parameter name="parent" type="GFile*"/>
        <parameter name="descendant" type="GFile*"/>
      </parameters>
    </callback>
    <callback name="ResolveRelativePath" cname="GioResolveRelativePathFunc">
      <return-type type="GFile*"/>
      <parameters>
        <parameter name="file" type="GFile*"/>
        <parameter name="relative_path" type="const-gchar*"/>
      </parameters>
    </callback>
    <callback name="GetChildForDisplayName" cname="GioGetChildForDisplayNameFunc">
      <return-type type="GFile*"/>
      <parameters>
        <parameter name="file" type="GFile*"/>
        <parameter name="display_name" type="const-gchar*"/>
      </parameters>
    </callback>
    <callback name="EnumerateChildren" cname="GioEnumerateChildrenFunc">
      <return-type type="GFileEnumerator*"/>
      <parameters>
        <parameter name="file" type="GFile*"/>
        <parameter name="attributes" type="const-gchar*"/>
        <parameter name="flags" type="GFileQueryInfoFlags"/>
        <parameter name="cancellable" type="GCancellable*"/>
      </parameters>
    </callback>
    <callback name="EnumerateChildrenAsync" cname="GioEnumerateChildrenAsyncFunc">
      <return-type type="void"/>
      <parameters>
        <parameter name="file" type="GFile*"/>
        <parameter name="attributes" type="const-gchar*"/>
        <parameter name="flags" type="GFileQueryInfoFlags"/>
        <parameter name="io_priority" type="gint"/>
        <parameter name="cancellable" type="GCancellable*"/>
        <parameter name="callback" type="GAsyncReadyCallback"/>
        <parameter name="user_data" type="gpointer"/>
      </parameters>
    </callback>
    <callback name="EnumerateChildrenFinish" cname="GioEnumerateChildrenFinishFunc">
      <return-type type="GFileEnumerator*"/>
      <parameters>
        <parameter name="file" type="GFile*"/>
        <parameter name="res" type="GAsyncResult*"/>
      </parameters>
    </callback>
    <callback name="QueryInfo" cname="GioQueryInfoFunc">
      <return-type type="GFileInfo*"/>
      <parameters>
        <parameter name="file" type="GFile*"/>
        <parameter name="attributes" type="const-gchar*"/>
        <parameter name="flags" type="GFileQueryInfoFlags"/>
        <parameter name="cancellable" type="GCancellable*"/>
      </parameters>
    </callback>
    <callback name="QueryInfoAsync" cname="GioQueryInfoAsyncFunc">
      <return-type type="void"/>
      <parameters>
        <parameter name="file" type="GFile*"/>
        <parameter name="attributes" type="const-gchar*"/>
        <parameter name="flags" type="GFileQueryInfoFlags"/>
        <parameter name="io_priority" type="gint"/>
        <parameter name="cancellable" type="GCancellable*"/>
        <parameter name="callback" type="GAsyncReadyCallback"/>
        <parameter name="user_data" type="gpointer"/>
      </parameters>
    </callback>
    <callback name="QueryInfoFinish" cname="GioQueryInfoFinishFunc">
      <return-type type="GFileInfo*"/>
      <parameters>
        <parameter name="file" type="GFile*"/>
        <parameter name="res" type="GAsyncResult*"/>
      </parameters>
    </callback>
    <callback name="QueryFilesystemInfo" cname="GioQueryFilesystemInfoFunc">
      <return-type type="GFileInfo*"/>
      <parameters>
        <parameter name="file" type="GFile*"/>
        <parameter name="attributes" type="const-gchar*"/>
        <parameter name="cancellable" type="GCancellable*"/>
      </parameters>
    </callback>
    <callback name="QueryFilesystemInfoAsync" cname="GioQueryFilesystemInfoAsyncFunc">
      <return-type type="void"/>
      <parameters>
        <parameter name="file" type="GFile*"/>
        <parameter name="attributes" type="const-gchar*"/>
        <parameter name="io_priority" type="gint"/>
        <parameter name="cancellable" type="GCancellable*"/>
        <parameter name="callback" type="GAsyncReadyCallback"/>
        <parameter name="user_data" type="gpointer"/>
      </parameters>
    </callback>
    <callback name="QueryFilesystemInfoFinish" cname="GioQueryFilesystemInfoFinishFunc">
      <return-type type="GFileInfo*"/>
      <parameters>
        <parameter name="file" type="GFile*"/>
        <parameter name="res" type="GAsyncResult*"/>
      </parameters>
    </callback>
    <callback name="FindEnclosingMount" cname="GioFindEnclosingMountFunc">
      <return-type type="GMount*"/>
      <parameters>
        <parameter name="file" type="GFile*"/>
        <parameter name="cancellable" type="GCancellable*"/>
      </parameters>
    </callback>
    <callback name="FindEnclosingMountAsync" cname="GioFindEnclosingMountAsyncFunc">
      <return-type type="void"/>
      <parameters>
        <parameter name="file" type="GFile*"/>
        <parameter name="io_priority" type="gint"/>
        <parameter name="cancellable" type="GCancellable*"/>
        <parameter name="callback" type="GAsyncReadyCallback"/>
        <parameter name="user_data" type="gpointer"/>
      </parameters>
    </callback>
    <callback name="FindEnclosingMountFinish" cname="GioFindEnclosingMountFinishFunc">
      <return-type type="GMount*"/>
      <parameters>
        <parameter name="file" type="GFile*"/>
        <parameter name="res" type="GAsyncResult*"/>
      </parameters>
    </callback>
    <callback name="SetDisplayName" cname="GioSetDisplayNameFunc">
      <return-type type="GFile*"/>
      <parameters>
        <parameter name="file" type="GFile*"/>
        <parameter name="display_name" type="const-gchar*"/>
        <parameter name="cancellable" type="GCancellable*"/>
      </parameters>
    </callback>
    <callback name="SetDisplayNameAsync" cname="GioSetDisplayNameAsyncFunc">
      <return-type type="void"/>
      <parameters>
        <parameter name="file" type="GFile*"/>
        <parameter name="display_name" type="const-gchar*"/>
        <parameter name="io_priority" type="gint"/>
        <parameter name="cancellable" type="GCancellable*"/>
        <parameter name="callback" type="GAsyncReadyCallback"/>
        <parameter name="user_data" type="gpointer"/>
      </parameters>
    </callback>
    <callback name="SetDisplayNameFinish" cname="GioSetDisplayNameFinishFunc">
      <return-type type="GFile*"/>
      <parameters>
        <parameter name="file" type="GFile*"/>
        <parameter name="res" type="GAsyncResult*"/>
      </parameters>
    </callback>
    <callback name="QuerySettableAttributes" cname="GioQuerySettableAttributesFunc">
      <return-type type="GFileAttributeInfoList*">
        <warning>missing glib:type-name</warning>
      </return-type>
      <parameters>
        <parameter name="file" type="GFile*"/>
        <parameter name="cancellable" type="GCancellable*"/>
      </parameters>
    </callback>
    <callback name="_queryQuerySettableAttributesAsync" cname="Gio_queryQuerySettableAttributesAsyncFunc">
      <return-type type="void"/>
    </callback>
    <callback name="_queryQuerySettableAttributesFinish" cname="Gio_queryQuerySettableAttributesFinishFunc">
      <return-type type="void"/>
    </callback>
    <callback name="QueryWritableNamespaces" cname="GioQueryWritableNamespacesFunc">
      <return-type type="GFileAttributeInfoList*">
        <warning>missing glib:type-name</warning>
      </return-type>
      <parameters>
        <parameter name="file" type="GFile*"/>
        <parameter name="cancellable" type="GCancellable*"/>
      </parameters>
    </callback>
    <callback name="_queryQueryWritableNamespacesAsync" cname="Gio_queryQueryWritableNamespacesAsyncFunc">
      <return-type type="void"/>
    </callback>
    <callback name="_queryQueryWritableNamespacesFinish" cname="Gio_queryQueryWritableNamespacesFinishFunc">
      <return-type type="void"/>
    </callback>
    <callback name="SetAttribute" cname="GioSetAttributeFunc">
      <return-type type="gboolean"/>
      <parameters>
        <parameter name="file" type="GFile*"/>
        <parameter name="attribute" type="const-gchar*"/>
        <parameter name="type" type="GFileAttributeType"/>
        <parameter name="value_p" type="gpointer"/>
        <parameter name="flags" type="GFileQueryInfoFlags"/>
        <parameter name="cancellable" type="GCancellable*"/>
      </parameters>
    </callback>
    <callback name="SetAttributesFromInfo" cname="GioSetAttributesFromInfoFunc">
      <return-type type="gboolean"/>
      <parameters>
        <parameter name="file" type="GFile*"/>
        <parameter name="info" type="GFileInfo*"/>
        <parameter name="flags" type="GFileQueryInfoFlags"/>
        <parameter name="cancellable" type="GCancellable*"/>
      </parameters>
    </callback>
    <callback name="SetAttributesAsync" cname="GioSetAttributesAsyncFunc">
      <return-type type="void"/>
      <parameters>
        <parameter name="file" type="GFile*"/>
        <parameter name="info" type="GFileInfo*"/>
        <parameter name="flags" type="GFileQueryInfoFlags"/>
        <parameter name="io_priority" type="gint"/>
        <parameter name="cancellable" type="GCancellable*"/>
        <parameter name="callback" type="GAsyncReadyCallback"/>
        <parameter name="user_data" type="gpointer"/>
      </parameters>
    </callback>
    <callback name="SetAttributesFinish" cname="GioSetAttributesFinishFunc">
      <return-type type="gboolean"/>
      <parameters>
        <parameter name="file" type="GFile*"/>
        <parameter name="_result" type="GAsyncResult*"/>
        <parameter name="info" type="GFileInfo*"/>
      </parameters>
    </callback>
    <callback name="ReadFn" cname="GioReadFnFunc">
      <return-type type="GFileInputStream*"/>
      <parameters>
        <parameter name="file" type="GFile*"/>
        <parameter name="cancellable" type="GCancellable*"/>
      </parameters>
    </callback>
    <callback name="ReadAsync" cname="GioReadAsyncFunc">
      <return-type type="void"/>
      <parameters>
        <parameter name="file" type="GFile*"/>
        <parameter name="io_priority" type="gint"/>
        <parameter name="cancellable" type="GCancellable*"/>
        <parameter name="callback" type="GAsyncReadyCallback"/>
        <parameter name="user_data" type="gpointer"/>
      </parameters>
    </callback>
    <callback name="ReadFinish" cname="GioReadFinishFunc">
      <return-type type="GFileInputStream*"/>
      <parameters>
        <parameter name="file" type="GFile*"/>
        <parameter name="res" type="GAsyncResult*"/>
      </parameters>
    </callback>
    <callback name="AppendTo" cname="GioAppendToFunc">
      <return-type type="GFileOutputStream*"/>
      <parameters>
        <parameter name="file" type="GFile*"/>
        <parameter name="flags" type="GFileCreateFlags"/>
        <parameter name="cancellable" type="GCancellable*"/>
      </parameters>
    </callback>
    <callback name="AppendToAsync" cname="GioAppendToAsyncFunc">
      <return-type type="void"/>
      <parameters>
        <parameter name="file" type="GFile*"/>
        <parameter name="flags" type="GFileCreateFlags"/>
        <parameter name="io_priority" type="gint"/>
        <parameter name="cancellable" type="GCancellable*"/>
        <parameter name="callback" type="GAsyncReadyCallback"/>
        <parameter name="user_data" type="gpointer"/>
      </parameters>
    </callback>
    <callback name="AppendToFinish" cname="GioAppendToFinishFunc">
      <return-type type="GFileOutputStream*"/>
      <parameters>
        <parameter name="file" type="GFile*"/>
        <parameter name="res" type="GAsyncResult*"/>
      </parameters>
    </callback>
    <callback name="Create" cname="GioCreateFunc">
      <return-type type="GFileOutputStream*"/>
      <parameters>
        <parameter name="file" type="GFile*"/>
        <parameter name="flags" type="GFileCreateFlags"/>
        <parameter name="cancellable" type="GCancellable*"/>
      </parameters>
    </callback>
    <callback name="CreateAsync" cname="GioCreateAsyncFunc">
      <return-type type="void"/>
      <parameters>
        <parameter name="file" type="GFile*"/>
        <parameter name="flags" type="GFileCreateFlags"/>
        <parameter name="io_priority" type="gint"/>
        <parameter name="cancellable" type="GCancellable*"/>
        <parameter name="callback" type="GAsyncReadyCallback"/>
        <parameter name="user_data" type="gpointer"/>
      </parameters>
    </callback>
    <callback name="CreateFinish" cname="GioCreateFinishFunc">
      <return-type type="GFileOutputStream*"/>
      <parameters>
        <parameter name="file" type="GFile*"/>
        <parameter name="res" type="GAsyncResult*"/>
      </parameters>
    </callback>
    <callback name="Replace" cname="GioReplaceFunc">
      <return-type type="GFileOutputStream*"/>
      <parameters>
        <parameter name="file" type="GFile*"/>
        <parameter name="etag" type="const-gchar*"/>
        <parameter name="make_backup" type="gboolean"/>
        <parameter name="flags" type="GFileCreateFlags"/>
        <parameter name="cancellable" type="GCancellable*"/>
      </parameters>
    </callback>
    <callback name="ReplaceAsync" cname="GioReplaceAsyncFunc">
      <return-type type="void"/>
      <parameters>
        <parameter name="file" type="GFile*"/>
        <parameter name="etag" type="const-gchar*"/>
        <parameter name="make_backup" type="gboolean"/>
        <parameter name="flags" type="GFileCreateFlags"/>
        <parameter name="io_priority" type="gint"/>
        <parameter name="cancellable" type="GCancellable*"/>
        <parameter name="callback" type="GAsyncReadyCallback"/>
        <parameter name="user_data" type="gpointer"/>
      </parameters>
    </callback>
    <callback name="ReplaceFinish" cname="GioReplaceFinishFunc">
      <return-type type="GFileOutputStream*"/>
      <parameters>
        <parameter name="file" type="GFile*"/>
        <parameter name="res" type="GAsyncResult*"/>
      </parameters>
    </callback>
    <callback name="DeleteFile" cname="GioDeleteFileFunc">
      <return-type type="gboolean"/>
      <parameters>
        <parameter name="file" type="GFile*"/>
        <parameter name="cancellable" type="GCancellable*"/>
      </parameters>
    </callback>
    <callback name="_deleteDeleteFileAsync" cname="Gio_deleteDeleteFileAsyncFunc">
      <return-type type="void"/>
    </callback>
    <callback name="_deleteDeleteFileFinish" cname="Gio_deleteDeleteFileFinishFunc">
      <return-type type="void"/>
    </callback>
    <callback name="Trash" cname="GioTrashFunc">
      <return-type type="gboolean"/>
      <parameters>
        <parameter name="file" type="GFile*"/>
        <parameter name="cancellable" type="GCancellable*"/>
      </parameters>
    </callback>
    <callback name="_trashTrashAsync" cname="Gio_trashTrashAsyncFunc">
      <return-type type="void"/>
    </callback>
    <callback name="_trashTrashFinish" cname="Gio_trashTrashFinishFunc">
      <return-type type="void"/>
    </callback>
    <callback name="MakeDirectory" cname="GioMakeDirectoryFunc">
      <return-type type="gboolean"/>
      <parameters>
        <parameter name="file" type="GFile*"/>
        <parameter name="cancellable" type="GCancellable*"/>
      </parameters>
    </callback>
    <callback name="_makeMakeDirectoryAsync" cname="Gio_makeMakeDirectoryAsyncFunc">
      <return-type type="void"/>
    </callback>
    <callback name="_makeMakeDirectoryFinish" cname="Gio_makeMakeDirectoryFinishFunc">
      <return-type type="void"/>
    </callback>
    <callback name="MakeSymbolicLink" cname="GioMakeSymbolicLinkFunc">
      <return-type type="gboolean"/>
      <parameters>
        <parameter name="file" type="GFile*"/>
        <parameter name="symlink_value" type="const-gchar*"/>
        <parameter name="cancellable" type="GCancellable*"/>
      </parameters>
    </callback>
    <callback name="_makeMakeSymbolicLinkAsync" cname="Gio_makeMakeSymbolicLinkAsyncFunc">
      <return-type type="void"/>
    </callback>
    <callback name="_makeMakeSymbolicLinkFinish" cname="Gio_makeMakeSymbolicLinkFinishFunc">
      <return-type type="void"/>
    </callback>
    <callback name="Copy" cname="GioCopyFunc">
      <return-type type="gboolean"/>
      <parameters>
        <parameter name="source" type="GFile*"/>
        <parameter name="destination" type="GFile*"/>
        <parameter name="flags" type="GFileCopyFlags"/>
        <parameter name="cancellable" type="GCancellable*"/>
        <parameter name="progress_callback" type="GFileProgressCallback"/>
        <parameter name="progress_callback_data" type="gpointer"/>
      </parameters>
    </callback>
    <callback name="CopyAsync" cname="GioCopyAsyncFunc">
      <return-type type="void"/>
      <parameters>
        <parameter name="source" type="GFile*"/>
        <parameter name="destination" type="GFile*"/>
        <parameter name="flags" type="GFileCopyFlags"/>
        <parameter name="io_priority" type="gint"/>
        <parameter name="cancellable" type="GCancellable*"/>
        <parameter name="progress_callback" type="GFileProgressCallback"/>
        <parameter name="progress_callback_data" type="gpointer"/>
        <parameter name="callback" type="GAsyncReadyCallback"/>
        <parameter name="user_data" type="gpointer"/>
      </parameters>
    </callback>
    <callback name="CopyFinish" cname="GioCopyFinishFunc">
      <return-type type="gboolean"/>
      <parameters>
        <parameter name="file" type="GFile*"/>
        <parameter name="res" type="GAsyncResult*"/>
      </parameters>
    </callback>
    <callback name="Move" cname="GioMoveFunc">
      <return-type type="gboolean"/>
      <parameters>
        <parameter name="source" type="GFile*"/>
        <parameter name="destination" type="GFile*"/>
        <parameter name="flags" type="GFileCopyFlags"/>
        <parameter name="cancellable" type="GCancellable*"/>
        <parameter name="progress_callback" type="GFileProgressCallback"/>
        <parameter name="progress_callback_data" type="gpointer"/>
      </parameters>
    </callback>
    <callback name="_moveMoveAsync" cname="Gio_moveMoveAsyncFunc">
      <return-type type="void"/>
    </callback>
    <callback name="_moveMoveFinish" cname="Gio_moveMoveFinishFunc">
      <return-type type="void"/>
    </callback>
    <callback name="MountMountable" cname="GioMountMountableFunc">
      <return-type type="void"/>
      <parameters>
        <parameter name="file" type="GFile*"/>
        <parameter name="flags" type="GMountMountFlags"/>
        <parameter name="mount_operation" type="GMountOperation*"/>
        <parameter name="cancellable" type="GCancellable*"/>
        <parameter name="callback" type="GAsyncReadyCallback"/>
        <parameter name="user_data" type="gpointer"/>
      </parameters>
    </callback>
    <callback name="MountMountableFinish" cname="GioMountMountableFinishFunc">
      <return-type type="GFile*"/>
      <parameters>
        <parameter name="file" type="GFile*"/>
        <parameter name="_result" type="GAsyncResult*"/>
      </parameters>
    </callback>
    <callback name="UnmountMountable" cname="GioUnmountMountableFunc">
      <return-type type="void"/>
      <parameters>
        <parameter name="file" type="GFile*"/>
        <parameter name="flags" type="GMountUnmountFlags"/>
        <parameter name="cancellable" type="GCancellable*"/>
        <parameter name="callback" type="GAsyncReadyCallback"/>
        <parameter name="user_data" type="gpointer"/>
      </parameters>
    </callback>
    <callback name="UnmountMountableFinish" cname="GioUnmountMountableFinishFunc">
      <return-type type="gboolean"/>
      <parameters>
        <parameter name="file" type="GFile*"/>
        <parameter name="_result" type="GAsyncResult*"/>
      </parameters>
    </callback>
    <callback name="EjectMountable" cname="GioEjectMountableFunc">
      <return-type type="void"/>
      <parameters>
        <parameter name="file" type="GFile*"/>
        <parameter name="flags" type="GMountUnmountFlags"/>
        <parameter name="cancellable" type="GCancellable*"/>
        <parameter name="callback" type="GAsyncReadyCallback"/>
        <parameter name="user_data" type="gpointer"/>
      </parameters>
    </callback>
    <callback name="EjectMountableFinish" cname="GioEjectMountableFinishFunc">
      <return-type type="gboolean"/>
      <parameters>
        <parameter name="file" type="GFile*"/>
        <parameter name="_result" type="GAsyncResult*"/>
      </parameters>
    </callback>
    <callback name="MountEnclosingVolume" cname="GioMountEnclosingVolumeFunc">
      <return-type type="void"/>
      <parameters>
        <parameter name="location" type="GFile*"/>
        <parameter name="flags" type="GMountMountFlags"/>
        <parameter name="mount_operation" type="GMountOperation*"/>
        <parameter name="cancellable" type="GCancellable*"/>
        <parameter name="callback" type="GAsyncReadyCallback"/>
        <parameter name="user_data" type="gpointer"/>
      </parameters>
    </callback>
    <callback name="MountEnclosingVolumeFinish" cname="GioMountEnclosingVolumeFinishFunc">
      <return-type type="gboolean"/>
      <parameters>
        <parameter name="location" type="GFile*"/>
        <parameter name="_result" type="GAsyncResult*"/>
      </parameters>
    </callback>
    <callback name="MonitorDir" cname="GioMonitorDirFunc">
      <return-type type="GFileMonitor*"/>
      <parameters>
        <parameter name="file" type="GFile*"/>
        <parameter name="flags" type="GFileMonitorFlags"/>
        <parameter name="cancellable" type="GCancellable*"/>
      </parameters>
    </callback>
    <callback name="MonitorFile" cname="GioMonitorFileFunc">
      <return-type type="GFileMonitor*"/>
      <parameters>
        <parameter name="file" type="GFile*"/>
        <parameter name="flags" type="GFileMonitorFlags"/>
        <parameter name="cancellable" type="GCancellable*"/>
      </parameters>
    </callback>
    <callback name="OpenReadwrite" cname="GioOpenReadwriteFunc">
      <return-type type="GFileIOStream*"/>
      <parameters>
        <parameter name="file" type="GFile*"/>
        <parameter name="cancellable" type="GCancellable*"/>
      </parameters>
    </callback>
    <callback name="OpenReadwriteAsync" cname="GioOpenReadwriteAsyncFunc">
      <return-type type="void"/>
      <parameters>
        <parameter name="file" type="GFile*"/>
        <parameter name="io_priority" type="gint"/>
        <parameter name="cancellable" type="GCancellable*"/>
        <parameter name="callback" type="GAsyncReadyCallback"/>
        <parameter name="user_data" type="gpointer"/>
      </parameters>
    </callback>
    <callback name="OpenReadwriteFinish" cname="GioOpenReadwriteFinishFunc">
      <return-type type="GFileIOStream*"/>
      <parameters>
        <parameter name="file" type="GFile*"/>
        <parameter name="res" type="GAsyncResult*"/>
      </parameters>
    </callback>
    <callback name="CreateReadwrite" cname="GioCreateReadwriteFunc">
      <return-type type="GFileIOStream*"/>
      <parameters>
        <parameter name="file" type="GFile*"/>
        <parameter name="flags" type="GFileCreateFlags"/>
        <parameter name="cancellable" type="GCancellable*"/>
      </parameters>
    </callback>
    <callback name="CreateReadwriteAsync" cname="GioCreateReadwriteAsyncFunc">
      <return-type type="void"/>
      <parameters>
        <parameter name="file" type="GFile*"/>
        <parameter name="flags" type="GFileCreateFlags"/>
        <parameter name="io_priority" type="gint"/>
        <parameter name="cancellable" type="GCancellable*"/>
        <parameter name="callback" type="GAsyncReadyCallback"/>
        <parameter name="user_data" type="gpointer"/>
      </parameters>
    </callback>
    <callback name="CreateReadwriteFinish" cname="GioCreateReadwriteFinishFunc">
      <return-type type="GFileIOStream*"/>
      <parameters>
        <parameter name="file" type="GFile*"/>
        <parameter name="res" type="GAsyncResult*"/>
      </parameters>
    </callback>
    <callback name="ReplaceReadwrite" cname="GioReplaceReadwriteFunc">
      <return-type type="GFileIOStream*"/>
      <parameters>
        <parameter name="file" type="GFile*"/>
        <parameter name="etag" type="const-gchar*"/>
        <parameter name="make_backup" type="gboolean"/>
        <parameter name="flags" type="GFileCreateFlags"/>
        <parameter name="cancellable" type="GCancellable*"/>
      </parameters>
    </callback>
    <callback name="ReplaceReadwriteAsync" cname="GioReplaceReadwriteAsyncFunc">
      <return-type type="void"/>
      <parameters>
        <parameter name="file" type="GFile*"/>
        <parameter name="etag" type="const-gchar*"/>
        <parameter name="make_backup" type="gboolean"/>
        <parameter name="flags" type="GFileCreateFlags"/>
        <parameter name="io_priority" type="gint"/>
        <parameter name="cancellable" type="GCancellable*"/>
        <parameter name="callback" type="GAsyncReadyCallback"/>
        <parameter name="user_data" type="gpointer"/>
      </parameters>
    </callback>
    <callback name="ReplaceReadwriteFinish" cname="GioReplaceReadwriteFinishFunc">
      <return-type type="GFileIOStream*"/>
      <parameters>
        <parameter name="file" type="GFile*"/>
        <parameter name="res" type="GAsyncResult*"/>
      </parameters>
    </callback>
    <callback name="StartMountable" cname="GioStartMountableFunc">
      <return-type type="void"/>
      <parameters>
        <parameter name="file" type="GFile*"/>
        <parameter name="flags" type="GDriveStartFlags"/>
        <parameter name="start_operation" type="GMountOperation*"/>
        <parameter name="cancellable" type="GCancellable*"/>
        <parameter name="callback" type="GAsyncReadyCallback"/>
        <parameter name="user_data" type="gpointer"/>
      </parameters>
    </callback>
    <callback name="StartMountableFinish" cname="GioStartMountableFinishFunc">
      <return-type type="gboolean"/>
      <parameters>
        <parameter name="file" type="GFile*"/>
        <parameter name="_result" type="GAsyncResult*"/>
      </parameters>
    </callback>
    <callback name="StopMountable" cname="GioStopMountableFunc">
      <return-type type="void"/>
      <parameters>
        <parameter name="file" type="GFile*"/>
        <parameter name="flags" type="GMountUnmountFlags"/>
        <parameter name="mount_operation" type="GMountOperation*"/>
        <parameter name="cancellable" type="GCancellable*"/>
        <parameter name="callback" type="GAsyncReadyCallback"/>
        <parameter name="user_data" type="gpointer"/>
      </parameters>
    </callback>
    <callback name="StopMountableFinish" cname="GioStopMountableFinishFunc">
      <return-type type="gboolean"/>
      <parameters>
        <parameter name="file" type="GFile*"/>
        <parameter name="_result" type="GAsyncResult*"/>
      </parameters>
    </callback>
    <callback name="UnmountMountableWithOperation" cname="GioUnmountMountableWithOperationFunc">
      <return-type type="void"/>
      <parameters>
        <parameter name="file" type="GFile*"/>
        <parameter name="flags" type="GMountUnmountFlags"/>
        <parameter name="mount_operation" type="GMountOperation*"/>
        <parameter name="cancellable" type="GCancellable*"/>
        <parameter name="callback" type="GAsyncReadyCallback"/>
        <parameter name="user_data" type="gpointer"/>
      </parameters>
    </callback>
    <callback name="UnmountMountableWithOperationFinish" cname="GioUnmountMountableWithOperationFinishFunc">
      <return-type type="gboolean"/>
      <parameters>
        <parameter name="file" type="GFile*"/>
        <parameter name="_result" type="GAsyncResult*"/>
      </parameters>
    </callback>
    <callback name="EjectMountableWithOperation" cname="GioEjectMountableWithOperationFunc">
      <return-type type="void"/>
      <parameters>
        <parameter name="file" type="GFile*"/>
        <parameter name="flags" type="GMountUnmountFlags"/>
        <parameter name="mount_operation" type="GMountOperation*"/>
        <parameter name="cancellable" type="GCancellable*"/>
        <parameter name="callback" type="GAsyncReadyCallback"/>
        <parameter name="user_data" type="gpointer"/>
      </parameters>
    </callback>
    <callback name="EjectMountableWithOperationFinish" cname="GioEjectMountableWithOperationFinishFunc">
      <return-type type="gboolean"/>
      <parameters>
        <parameter name="file" type="GFile*"/>
        <parameter name="_result" type="GAsyncResult*"/>
      </parameters>
    </callback>
    <callback name="PollMountable" cname="GioPollMountableFunc">
      <return-type type="void"/>
      <parameters>
        <parameter name="file" type="GFile*"/>
        <parameter name="cancellable" type="GCancellable*"/>
        <parameter name="callback" type="GAsyncReadyCallback"/>
        <parameter name="user_data" type="gpointer"/>
      </parameters>
    </callback>
    <callback name="PollMountableFinish" cname="GioPollMountableFinishFunc">
      <return-type type="gboolean"/>
      <parameters>
        <parameter name="file" type="GFile*"/>
        <parameter name="_result" type="GAsyncResult*"/>
      </parameters>
    </callback>
    <callback name="Tell" cname="GioTellFunc">
      <return-type type="gint64"/>
      <parameters>
        <parameter name="stream" type="GFileInputStream*"/>
      </parameters>
    </callback>
    <callback name="CanSeek" cname="GioCanSeekFunc">
      <return-type type="gboolean"/>
      <parameters>
        <parameter name="stream" type="GFileInputStream*"/>
      </parameters>
    </callback>
    <callback name="Seek" cname="GioSeekFunc">
      <return-type type="gboolean"/>
      <parameters>
        <parameter name="stream" type="GFileInputStream*"/>
        <parameter name="offset" type="gint64"/>
        <parameter name="type" type="GSeekType"/>
        <parameter name="cancellable" type="GCancellable*"/>
      </parameters>
    </callback>
    <callback name="QueryInfo" cname="GioQueryInfoFunc">
      <return-type type="GFileInfo*"/>
      <parameters>
        <parameter name="stream" type="GFileInputStream*"/>
        <parameter name="attributes" type="const-gchar*"/>
        <parameter name="cancellable" type="GCancellable*"/>
      </parameters>
    </callback>
    <callback name="QueryInfoAsync" cname="GioQueryInfoAsyncFunc">
      <return-type type="void"/>
      <parameters>
        <parameter name="stream" type="GFileInputStream*"/>
        <parameter name="attributes" type="const-gchar*"/>
        <parameter name="io_priority" type="gint"/>
        <parameter name="cancellable" type="GCancellable*"/>
        <parameter name="callback" type="GAsyncReadyCallback"/>
        <parameter name="user_data" type="gpointer"/>
      </parameters>
    </callback>
    <callback name="QueryInfoFinish" cname="GioQueryInfoFinishFunc">
      <return-type type="GFileInfo*"/>
      <parameters>
        <parameter name="stream" type="GFileInputStream*"/>
        <parameter name="_result" type="GAsyncResult*"/>
      </parameters>
    </callback>
    <callback name="_gGReserved1" cname="Gio_gGReserved1Func">
      <return-type type="void"/>
    </callback>
    <callback name="_gGReserved2" cname="Gio_gGReserved2Func">
      <return-type type="void"/>
    </callback>
    <callback name="_gGReserved3" cname="Gio_gGReserved3Func">
      <return-type type="void"/>
    </callback>
    <callback name="_gGReserved4" cname="Gio_gGReserved4Func">
      <return-type type="void"/>
    </callback>
    <callback name="_gGReserved5" cname="Gio_gGReserved5Func">
      <return-type type="void"/>
    </callback>
    <callback name="Changed" cname="GioChangedFunc">
      <return-type type="void"/>
      <parameters>
        <parameter name="monitor" type="GFileMonitor*"/>
        <parameter name="file" type="GFile*"/>
        <parameter name="other_file" type="GFile*"/>
        <parameter name="event_type" type="GFileMonitorEvent"/>
      </parameters>
    </callback>
    <callback name="Cancel" cname="GioCancelFunc">
      <return-type type="gboolean"/>
      <parameters>
        <parameter name="monitor" type="GFileMonitor*"/>
      </parameters>
    </callback>
    <callback name="_gGReserved1" cname="Gio_gGReserved1Func">
      <return-type type="void"/>
    </callback>
    <callback name="_gGReserved2" cname="Gio_gGReserved2Func">
      <return-type type="void"/>
    </callback>
    <callback name="_gGReserved3" cname="Gio_gGReserved3Func">
      <return-type type="void"/>
    </callback>
    <callback name="_gGReserved4" cname="Gio_gGReserved4Func">
      <return-type type="void"/>
    </callback>
    <callback name="_gGReserved5" cname="Gio_gGReserved5Func">
      <return-type type="void"/>
    </callback>
    <callback name="Tell" cname="GioTellFunc">
      <return-type type="gint64"/>
      <parameters>
        <parameter name="stream" type="GFileOutputStream*"/>
      </parameters>
    </callback>
    <callback name="CanSeek" cname="GioCanSeekFunc">
      <return-type type="gboolean"/>
      <parameters>
        <parameter name="stream" type="GFileOutputStream*"/>
      </parameters>
    </callback>
    <callback name="Seek" cname="GioSeekFunc">
      <return-type type="gboolean"/>
      <parameters>
        <parameter name="stream" type="GFileOutputStream*"/>
        <parameter name="offset" type="gint64"/>
        <parameter name="type" type="GSeekType"/>
        <parameter name="cancellable" type="GCancellable*"/>
      </parameters>
    </callback>
    <callback name="CanTruncate" cname="GioCanTruncateFunc">
      <return-type type="gboolean"/>
      <parameters>
        <parameter name="stream" type="GFileOutputStream*"/>
      </parameters>
    </callback>
    <callback name="TruncateFn" cname="GioTruncateFnFunc">
      <return-type type="gboolean"/>
      <parameters>
        <parameter name="stream" type="GFileOutputStream*"/>
        <parameter name="size" type="gint64"/>
        <parameter name="cancellable" type="GCancellable*"/>
      </parameters>
    </callback>
    <callback name="QueryInfo" cname="GioQueryInfoFunc">
      <return-type type="GFileInfo*"/>
      <parameters>
        <parameter name="stream" type="GFileOutputStream*"/>
        <parameter name="attributes" type="const-gchar*"/>
        <parameter name="cancellable" type="GCancellable*"/>
      </parameters>
    </callback>
    <callback name="QueryInfoAsync" cname="GioQueryInfoAsyncFunc">
      <return-type type="void"/>
      <parameters>
        <parameter name="stream" type="GFileOutputStream*"/>
        <parameter name="attributes" type="const-gchar*"/>
        <parameter name="io_priority" type="gint"/>
        <parameter name="cancellable" type="GCancellable*"/>
        <parameter name="callback" type="GAsyncReadyCallback"/>
        <parameter name="user_data" type="gpointer"/>
      </parameters>
    </callback>
    <callback name="QueryInfoFinish" cname="GioQueryInfoFinishFunc">
      <return-type type="GFileInfo*"/>
      <parameters>
        <parameter name="stream" type="GFileOutputStream*"/>
        <parameter name="_result" type="GAsyncResult*"/>
      </parameters>
    </callback>
    <callback name="GetEtag" cname="GioGetEtagFunc">
      <return-type type="gchar*"/>
      <parameters>
        <parameter name="stream" type="GFileOutputStream*"/>
      </parameters>
    </callback>
    <callback name="_gGReserved1" cname="Gio_gGReserved1Func">
      <return-type type="void"/>
    </callback>
    <callback name="_gGReserved2" cname="Gio_gGReserved2Func">
      <return-type type="void"/>
    </callback>
    <callback name="_gGReserved3" cname="Gio_gGReserved3Func">
      <return-type type="void"/>
    </callback>
    <callback name="_gGReserved4" cname="Gio_gGReserved4Func">
      <return-type type="void"/>
    </callback>
    <callback name="_gGReserved5" cname="Gio_gGReserved5Func">
      <return-type type="void"/>
    </callback>
    <callback name="GotCompletionData" cname="GioGotCompletionDataFunc">
      <return-type type="void"/>
      <parameters>
        <parameter name="filename_completer" type="GFilenameCompleter*"/>
      </parameters>
    </callback>
    <callback name="_gGReserved1" cname="Gio_gGReserved1Func">
      <return-type type="void"/>
    </callback>
    <callback name="_gGReserved2" cname="Gio_gGReserved2Func">
      <return-type type="void"/>
    </callback>
    <callback name="_gGReserved3" cname="Gio_gGReserved3Func">
      <return-type type="void"/>
    </callback>
    <callback name="_gGReserved1" cname="Gio_gGReserved1Func">
      <return-type type="void"/>
    </callback>
    <callback name="_gGReserved2" cname="Gio_gGReserved2Func">
      <return-type type="void"/>
    </callback>
    <callback name="_gGReserved3" cname="Gio_gGReserved3Func">
      <return-type type="void"/>
    </callback>
    <callback name="_gGReserved1" cname="Gio_gGReserved1Func">
      <return-type type="void"/>
    </callback>
    <callback name="_gGReserved2" cname="Gio_gGReserved2Func">
      <return-type type="void"/>
    </callback>
    <callback name="_gGReserved3" cname="Gio_gGReserved3Func">
      <return-type type="void"/>
    </callback>
    <callback name="GetInputStream" cname="GioGetInputStreamFunc">
      <return-type type="GInputStream*"/>
      <parameters>
        <parameter name="stream" type="GIOStream*"/>
      </parameters>
    </callback>
    <callback name="GetOutputStream" cname="GioGetOutputStreamFunc">
      <return-type type="GOutputStream*"/>
      <parameters>
        <parameter name="stream" type="GIOStream*"/>
      </parameters>
    </callback>
    <callback name="CloseFn" cname="GioCloseFnFunc">
      <return-type type="gboolean"/>
      <parameters>
        <parameter name="stream" type="GIOStream*"/>
        <parameter name="cancellable" type="GCancellable*"/>
      </parameters>
    </callback>
    <callback name="CloseAsync" cname="GioCloseAsyncFunc">
      <return-type type="void"/>
      <parameters>
        <parameter name="stream" type="GIOStream*"/>
        <parameter name="io_priority" type="gint"/>
        <parameter name="cancellable" type="GCancellable*"/>
        <parameter name="callback" type="GAsyncReadyCallback"/>
        <parameter name="user_data" type="gpointer"/>
      </parameters>
    </callback>
    <callback name="CloseFinish" cname="GioCloseFinishFunc">
      <return-type type="gboolean"/>
      <parameters>
        <parameter name="stream" type="GIOStream*"/>
        <parameter name="_result" type="GAsyncResult*"/>
      </parameters>
    </callback>
    <callback name="_gGReserved1" cname="Gio_gGReserved1Func">
      <return-type type="void"/>
    </callback>
    <callback name="_gGReserved2" cname="Gio_gGReserved2Func">
      <return-type type="void"/>
    </callback>
    <callback name="_gGReserved3" cname="Gio_gGReserved3Func">
      <return-type type="void"/>
    </callback>
    <callback name="_gGReserved4" cname="Gio_gGReserved4Func">
      <return-type type="void"/>
    </callback>
    <callback name="_gGReserved5" cname="Gio_gGReserved5Func">
      <return-type type="void"/>
    </callback>
    <callback name="_gGReserved6" cname="Gio_gGReserved6Func">
      <return-type type="void"/>
    </callback>
    <callback name="_gGReserved7" cname="Gio_gGReserved7Func">
      <return-type type="void"/>
    </callback>
    <callback name="_gGReserved8" cname="Gio_gGReserved8Func">
      <return-type type="void"/>
    </callback>
    <callback name="_gGReserved9" cname="Gio_gGReserved9Func">
      <return-type type="void"/>
    </callback>
    <callback name="_gGReserved10" cname="Gio_gGReserved10Func">
      <return-type type="void"/>
    </callback>
    <callback name="Hash" cname="GioHashFunc">
      <return-type type="guint"/>
      <parameters>
        <parameter name="icon" type="GIcon*"/>
      </parameters>
    </callback>
    <callback name="Equal" cname="GioEqualFunc">
      <return-type type="gboolean"/>
      <parameters>
        <parameter name="icon1" type="GIcon*"/>
        <parameter name="icon2" type="GIcon*"/>
      </parameters>
    </callback>
    <callback name="ToTokens" cname="GioToTokensFunc">
      <return-type type="gboolean"/>
      <parameters>
        <parameter name="icon" type="GIcon*"/>
        <parameter name="tokens" type="GPtrArray" array="true"/>
        <parameter name="out_version" type="gint"/>
      </parameters>
    </callback>
    <callback name="FromTokens" cname="GioFromTokensFunc">
      <return-type type="GIcon*"/>
      <parameters>
        <parameter name="tokens" type="const-gchar*"/>
        <parameter name="num_tokens" type="gint"/>
        <parameter name="version" type="gint"/>
      </parameters>
    </callback>
    <callback name="ToString" cname="GioToStringFunc">
      <return-type type="gchar*"/>
      <parameters>
        <parameter name="address" type="GInetAddress*"/>
      </parameters>
    </callback>
    <callback name="ToBytes" cname="GioToBytesFunc">
      <return-type type="guint8"/>
      <parameters>
        <parameter name="address" type="GInetAddress*"/>
      </parameters>
    </callback>
    <callback name="Init" cname="GioInitFunc">
      <return-type type="gboolean"/>
      <parameters>
        <parameter name="initable" type="GInitable*"/>
        <parameter name="cancellable" type="GCancellable*"/>
      </parameters>
    </callback>
    <callback name="ReadFn" cname="GioReadFnFunc">
      <return-type type="gssize"/>
      <parameters>
        <parameter name="stream" type="GInputStream*"/>
        <parameter name="buffer" type="gpointer"/>
        <parameter name="count" type="gsize"/>
        <parameter name="cancellable" type="GCancellable*"/>
      </parameters>
    </callback>
    <callback name="Skip" cname="GioSkipFunc">
      <return-type type="gssize"/>
      <parameters>
        <parameter name="stream" type="GInputStream*"/>
        <parameter name="count" type="gsize"/>
        <parameter name="cancellable" type="GCancellable*"/>
      </parameters>
    </callback>
    <callback name="CloseFn" cname="GioCloseFnFunc">
      <return-type type="gboolean"/>
      <parameters>
        <parameter name="stream" type="GInputStream*"/>
        <parameter name="cancellable" type="GCancellable*"/>
      </parameters>
    </callback>
    <callback name="ReadAsync" cname="GioReadAsyncFunc">
      <return-type type="void"/>
      <parameters>
        <parameter name="stream" type="GInputStream*"/>
        <parameter name="buffer" type="gpointer"/>
        <parameter name="count" type="gsize"/>
        <parameter name="io_priority" type="gint"/>
        <parameter name="cancellable" type="GCancellable*"/>
        <parameter name="callback" type="GAsyncReadyCallback"/>
        <parameter name="user_data" type="gpointer"/>
      </parameters>
    </callback>
    <callback name="ReadFinish" cname="GioReadFinishFunc">
      <return-type type="gssize"/>
      <parameters>
        <parameter name="stream" type="GInputStream*"/>
        <parameter name="_result" type="GAsyncResult*"/>
      </parameters>
    </callback>
    <callback name="SkipAsync" cname="GioSkipAsyncFunc">
      <return-type type="void"/>
      <parameters>
        <parameter name="stream" type="GInputStream*"/>
        <parameter name="count" type="gsize"/>
        <parameter name="io_priority" type="gint"/>
        <parameter name="cancellable" type="GCancellable*"/>
        <parameter name="callback" type="GAsyncReadyCallback"/>
        <parameter name="user_data" type="gpointer"/>
      </parameters>
    </callback>
    <callback name="SkipFinish" cname="GioSkipFinishFunc">
      <return-type type="gssize"/>
      <parameters>
        <parameter name="stream" type="GInputStream*"/>
        <parameter name="_result" type="GAsyncResult*"/>
      </parameters>
    </callback>
    <callback name="CloseAsync" cname="GioCloseAsyncFunc">
      <return-type type="void"/>
      <parameters>
        <parameter name="stream" type="GInputStream*"/>
        <parameter name="io_priority" type="gint"/>
        <parameter name="cancellable" type="GCancellable*"/>
        <parameter name="callback" type="GAsyncReadyCallback"/>
        <parameter name="user_data" type="gpointer"/>
      </parameters>
    </callback>
    <callback name="CloseFinish" cname="GioCloseFinishFunc">
      <return-type type="gboolean"/>
      <parameters>
        <parameter name="stream" type="GInputStream*"/>
        <parameter name="_result" type="GAsyncResult*"/>
      </parameters>
    </callback>
    <callback name="_gGReserved1" cname="Gio_gGReserved1Func">
      <return-type type="void"/>
    </callback>
    <callback name="_gGReserved2" cname="Gio_gGReserved2Func">
      <return-type type="void"/>
    </callback>
    <callback name="_gGReserved3" cname="Gio_gGReserved3Func">
      <return-type type="void"/>
    </callback>
    <callback name="_gGReserved4" cname="Gio_gGReserved4Func">
      <return-type type="void"/>
    </callback>
    <callback name="_gGReserved5" cname="Gio_gGReserved5Func">
      <return-type type="void"/>
    </callback>
    <callback name="Load" cname="GioLoadFunc">
      <return-type type="GInputStream*"/>
      <parameters>
        <parameter name="icon" type="GLoadableIcon*"/>
        <parameter name="size" type="gint"/>
        <parameter name="type" type="gchar*"/>
        <parameter name="cancellable" type="GCancellable*"/>
      </parameters>
    </callback>
    <callback name="LoadAsync" cname="GioLoadAsyncFunc">
      <return-type type="void"/>
      <parameters>
        <parameter name="icon" type="GLoadableIcon*"/>
        <parameter name="size" type="gint"/>
        <parameter name="cancellable" type="GCancellable*"/>
        <parameter name="callback" type="GAsyncReadyCallback"/>
        <parameter name="user_data" type="gpointer"/>
      </parameters>
    </callback>
    <callback name="LoadFinish" cname="GioLoadFinishFunc">
      <return-type type="GInputStream*"/>
      <parameters>
        <parameter name="icon" type="GLoadableIcon*"/>
        <parameter name="res" type="GAsyncResult*"/>
        <parameter name="type" type="const-gchar*"/>
      </parameters>
    </callback>
    <callback name="_gGReserved1" cname="Gio_gGReserved1Func">
      <return-type type="void"/>
    </callback>
    <callback name="_gGReserved2" cname="Gio_gGReserved2Func">
      <return-type type="void"/>
    </callback>
    <callback name="_gGReserved3" cname="Gio_gGReserved3Func">
      <return-type type="void"/>
    </callback>
    <callback name="_gGReserved4" cname="Gio_gGReserved4Func">
      <return-type type="void"/>
    </callback>
    <callback name="_gGReserved5" cname="Gio_gGReserved5Func">
      <return-type type="void"/>
    </callback>
    <callback name="_gGReserved1" cname="Gio_gGReserved1Func">
      <return-type type="void"/>
    </callback>
    <callback name="_gGReserved2" cname="Gio_gGReserved2Func">
      <return-type type="void"/>
    </callback>
    <callback name="_gGReserved3" cname="Gio_gGReserved3Func">
      <return-type type="void"/>
    </callback>
    <callback name="_gGReserved4" cname="Gio_gGReserved4Func">
      <return-type type="void"/>
    </callback>
    <callback name="_gGReserved5" cname="Gio_gGReserved5Func">
      <return-type type="void"/>
    </callback>
    <callback name="GetNext" cname="GioGetNextFunc">
      <return-type type="gboolean"/>
      <parameters>
        <parameter name="iter" type="GMenuAttributeIter*"/>
        <parameter name="out_type" type="const-gchar*"/>
        <parameter name="value" type="GVariant**">
          <warning>missing glib:type-name</warning>
        </parameter>
      </parameters>
    </callback>
    <callback name="GetNext" cname="GioGetNextFunc">
      <return-type type="gboolean"/>
      <parameters>
        <parameter name="iter" type="GMenuLinkIter*"/>
        <parameter name="out_name" type="const-gchar*"/>
        <parameter name="value" type="GMenuModel*"/>
      </parameters>
    </callback>
    <callback name="IsMutable" cname="GioIsMutableFunc">
      <return-type type="gboolean"/>
      <parameters>
        <parameter name="model" type="GMenuModel*"/>
      </parameters>
    </callback>
    <callback name="GetNItems" cname="GioGetNItemsFunc">
      <return-type type="gint"/>
      <parameters>
        <parameter name="model" type="GMenuModel*"/>
      </parameters>
    </callback>
    <callback name="GetItemAttributes" cname="GioGetItemAttributesFunc">
      <return-type type="void"/>
      <parameters>
        <parameter name="model" type="GMenuModel*"/>
        <parameter name="item_index" type="gint"/>
        <parameter name="attributes" type="GHashTable**">
          <warning>missing glib:type-name</warning>
        </parameter>
      </parameters>
    </callback>
    <callback name="IterateItemAttributes" cname="GioIterateItemAttributesFunc">
      <return-type type="GMenuAttributeIter*"/>
      <parameters>
        <parameter name="model" type="GMenuModel*"/>
        <parameter name="item_index" type="gint"/>
      </parameters>
    </callback>
    <callback name="GetItemAttributeValue" cname="GioGetItemAttributeValueFunc">
      <return-type type="GVariant*">
        <warning>missing glib:type-name</warning>
      </return-type>
      <parameters>
        <parameter name="model" type="GMenuModel*"/>
        <parameter name="item_index" type="gint"/>
        <parameter name="attribute" type="const-gchar*"/>
        <parameter name="expected_type" type="GVariantType*">
          <warning>missing glib:type-name</warning>
        </parameter>
      </parameters>
    </callback>
    <callback name="GetItemLinks" cname="GioGetItemLinksFunc">
      <return-type type="void"/>
      <parameters>
        <parameter name="model" type="GMenuModel*"/>
        <parameter name="item_index" type="gint"/>
        <parameter name="links" type="GHashTable**">
          <warning>missing glib:type-name</warning>
        </parameter>
      </parameters>
    </callback>
    <callback name="IterateItemLinks" cname="GioIterateItemLinksFunc">
      <return-type type="GMenuLinkIter*"/>
      <parameters>
        <parameter name="model" type="GMenuModel*"/>
        <parameter name="item_index" type="gint"/>
      </parameters>
    </callback>
    <callback name="GetItemLink" cname="GioGetItemLinkFunc">
      <return-type type="GMenuModel*"/>
      <parameters>
        <parameter name="model" type="GMenuModel*"/>
        <parameter name="item_index" type="gint"/>
        <parameter name="link" type="const-gchar*"/>
      </parameters>
    </callback>
    <callback name="Changed" cname="GioChangedFunc">
      <return-type type="void"/>
      <parameters>
        <parameter name="mount" type="GMount*"/>
      </parameters>
    </callback>
    <callback name="Unmounted" cname="GioUnmountedFunc">
      <return-type type="void"/>
      <parameters>
        <parameter name="mount" type="GMount*"/>
      </parameters>
    </callback>
    <callback name="GetRoot" cname="GioGetRootFunc">
      <return-type type="GFile*"/>
      <parameters>
        <parameter name="mount" type="GMount*"/>
      </parameters>
    </callback>
    <callback name="GetName" cname="GioGetNameFunc">
      <return-type type="gchar*"/>
      <parameters>
        <parameter name="mount" type="GMount*"/>
      </parameters>
    </callback>
    <callback name="GetIcon" cname="GioGetIconFunc">
      <return-type type="GIcon*"/>
      <parameters>
        <parameter name="mount" type="GMount*"/>
      </parameters>
    </callback>
    <callback name="GetUuid" cname="GioGetUuidFunc">
      <return-type type="gchar*"/>
      <parameters>
        <parameter name="mount" type="GMount*"/>
      </parameters>
    </callback>
    <callback name="GetVolume" cname="GioGetVolumeFunc">
      <return-type type="GVolume*"/>
      <parameters>
        <parameter name="mount" type="GMount*"/>
      </parameters>
    </callback>
    <callback name="GetDrive" cname="GioGetDriveFunc">
      <return-type type="GDrive*"/>
      <parameters>
        <parameter name="mount" type="GMount*"/>
      </parameters>
    </callback>
    <callback name="CanUnmount" cname="GioCanUnmountFunc">
      <return-type type="gboolean"/>
      <parameters>
        <parameter name="mount" type="GMount*"/>
      </parameters>
    </callback>
    <callback name="CanEject" cname="GioCanEjectFunc">
      <return-type type="gboolean"/>
      <parameters>
        <parameter name="mount" type="GMount*"/>
      </parameters>
    </callback>
    <callback name="Unmount" cname="GioUnmountFunc">
      <return-type type="void"/>
      <parameters>
        <parameter name="mount" type="GMount*"/>
        <parameter name="flags" type="GMountUnmountFlags"/>
        <parameter name="cancellable" type="GCancellable*"/>
        <parameter name="callback" type="GAsyncReadyCallback"/>
        <parameter name="user_data" type="gpointer"/>
      </parameters>
    </callback>
    <callback name="UnmountFinish" cname="GioUnmountFinishFunc">
      <return-type type="gboolean"/>
      <parameters>
        <parameter name="mount" type="GMount*"/>
        <parameter name="_result" type="GAsyncResult*"/>
      </parameters>
    </callback>
    <callback name="Eject" cname="GioEjectFunc">
      <return-type type="void"/>
      <parameters>
        <parameter name="mount" type="GMount*"/>
        <parameter name="flags" type="GMountUnmountFlags"/>
        <parameter name="cancellable" type="GCancellable*"/>
        <parameter name="callback" type="GAsyncReadyCallback"/>
        <parameter name="user_data" type="gpointer"/>
      </parameters>
    </callback>
    <callback name="EjectFinish" cname="GioEjectFinishFunc">
      <return-type type="gboolean"/>
      <parameters>
        <parameter name="mount" type="GMount*"/>
        <parameter name="_result" type="GAsyncResult*"/>
      </parameters>
    </callback>
    <callback name="Remount" cname="GioRemountFunc">
      <return-type type="void"/>
      <parameters>
        <parameter name="mount" type="GMount*"/>
        <parameter name="flags" type="GMountMountFlags"/>
        <parameter name="mount_operation" type="GMountOperation*"/>
        <parameter name="cancellable" type="GCancellable*"/>
        <parameter name="callback" type="GAsyncReadyCallback"/>
        <parameter name="user_data" type="gpointer"/>
      </parameters>
    </callback>
    <callback name="RemountFinish" cname="GioRemountFinishFunc">
      <return-type type="gboolean"/>
      <parameters>
        <parameter name="mount" type="GMount*"/>
        <parameter name="_result" type="GAsyncResult*"/>
      </parameters>
    </callback>
    <callback name="GuessContentType" cname="GioGuessContentTypeFunc">
      <return-type type="void"/>
      <parameters>
        <parameter name="mount" type="GMount*"/>
        <parameter name="force_rescan" type="gboolean"/>
        <parameter name="cancellable" type="GCancellable*"/>
        <parameter name="callback" type="GAsyncReadyCallback"/>
        <parameter name="user_data" type="gpointer"/>
      </parameters>
    </callback>
    <callback name="GuessContentTypeFinish" cname="GioGuessContentTypeFinishFunc">
      <return-type type="gchar***" array="true"/>
      <parameters>
        <parameter name="mount" type="GMount*"/>
        <parameter name="_result" type="GAsyncResult*"/>
      </parameters>
    </callback>
    <callback name="GuessContentTypeSync" cname="GioGuessContentTypeSyncFunc">
      <return-type type="gchar***" array="true"/>
      <parameters>
        <parameter name="mount" type="GMount*"/>
        <parameter name="force_rescan" type="gboolean"/>
        <parameter name="cancellable" type="GCancellable*"/>
      </parameters>
    </callback>
    <callback name="PreUnmount" cname="GioPreUnmountFunc">
      <return-type type="void"/>
      <parameters>
        <parameter name="mount" type="GMount*"/>
      </parameters>
    </callback>
    <callback name="UnmountWithOperation" cname="GioUnmountWithOperationFunc">
      <return-type type="void"/>
      <parameters>
        <parameter name="mount" type="GMount*"/>
        <parameter name="flags" type="GMountUnmountFlags"/>
        <parameter name="mount_operation" type="GMountOperation*"/>
        <parameter name="cancellable" type="GCancellable*"/>
        <parameter name="callback" type="GAsyncReadyCallback"/>
        <parameter name="user_data" type="gpointer"/>
      </parameters>
    </callback>
    <callback name="UnmountWithOperationFinish" cname="GioUnmountWithOperationFinishFunc">
      <return-type type="gboolean"/>
      <parameters>
        <parameter name="mount" type="GMount*"/>
        <parameter name="_result" type="GAsyncResult*"/>
      </parameters>
    </callback>
    <callback name="EjectWithOperation" cname="GioEjectWithOperationFunc">
      <return-type type="void"/>
      <parameters>
        <parameter name="mount" type="GMount*"/>
        <parameter name="flags" type="GMountUnmountFlags"/>
        <parameter name="mount_operation" type="GMountOperation*"/>
        <parameter name="cancellable" type="GCancellable*"/>
        <parameter name="callback" type="GAsyncReadyCallback"/>
        <parameter name="user_data" type="gpointer"/>
      </parameters>
    </callback>
    <callback name="EjectWithOperationFinish" cname="GioEjectWithOperationFinishFunc">
      <return-type type="gboolean"/>
      <parameters>
        <parameter name="mount" type="GMount*"/>
        <parameter name="_result" type="GAsyncResult*"/>
      </parameters>
    </callback>
    <callback name="GetDefaultLocation" cname="GioGetDefaultLocationFunc">
      <return-type type="GFile*"/>
      <parameters>
        <parameter name="mount" type="GMount*"/>
      </parameters>
    </callback>
    <callback name="GetSortKey" cname="GioGetSortKeyFunc">
      <return-type type="gchar*"/>
      <parameters>
        <parameter name="mount" type="GMount*"/>
      </parameters>
    </callback>
    <callback name="AskPassword" cname="GioAskPasswordFunc">
      <return-type type="void"/>
      <parameters>
        <parameter name="op" type="GMountOperation*"/>
        <parameter name="message" type="const-gchar*"/>
        <parameter name="default_user" type="const-gchar*"/>
        <parameter name="default_domain" type="const-gchar*"/>
        <parameter name="flags" type="GAskPasswordFlags"/>
      </parameters>
    </callback>
    <callback name="AskQuestion" cname="GioAskQuestionFunc">
      <return-type type="void"/>
      <parameters>
        <parameter name="op" type="GMountOperation*"/>
        <parameter name="message" type="const-gchar*"/>
        <parameter name="choices" type="const-gchar*"/>
      </parameters>
    </callback>
    <callback name="Reply" cname="GioReplyFunc">
      <return-type type="void"/>
      <parameters>
        <parameter name="op" type="GMountOperation*"/>
        <parameter name="_result" type="GMountOperationResult"/>
      </parameters>
    </callback>
    <callback name="Aborted" cname="GioAbortedFunc">
      <return-type type="void"/>
      <parameters>
        <parameter name="op" type="GMountOperation*"/>
      </parameters>
    </callback>
    <callback name="ShowProcesses" cname="GioShowProcessesFunc">
      <return-type type="void"/>
      <parameters>
        <parameter name="op" type="GMountOperation*"/>
        <parameter name="message" type="const-gchar*"/>
        <parameter name="processes" type="GArray*" array="true"/>
        <parameter name="choices" type="const-gchar*"/>
      </parameters>
    </callback>
    <callback name="_gGReserved1" cname="Gio_gGReserved1Func">
      <return-type type="void"/>
    </callback>
    <callback name="_gGReserved2" cname="Gio_gGReserved2Func">
      <return-type type="void"/>
    </callback>
    <callback name="_gGReserved3" cname="Gio_gGReserved3Func">
      <return-type type="void"/>
    </callback>
    <callback name="_gGReserved4" cname="Gio_gGReserved4Func">
      <return-type type="void"/>
    </callback>
    <callback name="_gGReserved5" cname="Gio_gGReserved5Func">
      <return-type type="void"/>
    </callback>
    <callback name="_gGReserved6" cname="Gio_gGReserved6Func">
      <return-type type="void"/>
    </callback>
    <callback name="_gGReserved7" cname="Gio_gGReserved7Func">
      <return-type type="void"/>
    </callback>
    <callback name="_gGReserved8" cname="Gio_gGReserved8Func">
      <return-type type="void"/>
    </callback>
    <callback name="_gGReserved9" cname="Gio_gGReserved9Func">
      <return-type type="void"/>
    </callback>
    <callback name="_gGReserved10" cname="Gio_gGReserved10Func">
      <return-type type="void"/>
    </callback>
    <callback name="GetMountForMountPath" cname="GioGetMountForMountPathFunc">
      <return-type type="GMount*"/>
      <parameters>
        <parameter name="mount_path" type="const-gchar*"/>
        <parameter name="cancellable" type="GCancellable*"/>
      </parameters>
    </callback>
    <callback name="NetworkChanged" cname="GioNetworkChangedFunc">
      <return-type type="void"/>
      <parameters>
        <parameter name="monitor" type="GNetworkMonitor*"/>
        <parameter name="available" type="gboolean"/>
      </parameters>
    </callback>
    <callback name="CanReach" cname="GioCanReachFunc">
      <return-type type="gboolean"/>
      <parameters>
        <parameter name="monitor" type="GNetworkMonitor*"/>
        <parameter name="connectable" type="GSocketConnectable*"/>
        <parameter name="cancellable" type="GCancellable*"/>
      </parameters>
    </callback>
    <callback name="CanReachAsync" cname="GioCanReachAsyncFunc">
      <return-type type="void"/>
      <parameters>
        <parameter name="monitor" type="GNetworkMonitor*"/>
        <parameter name="connectable" type="GSocketConnectable*"/>
        <parameter name="cancellable" type="GCancellable*"/>
        <parameter name="callback" type="GAsyncReadyCallback"/>
        <parameter name="user_data" type="gpointer"/>
      </parameters>
    </callback>
    <callback name="CanReachFinish" cname="GioCanReachFinishFunc">
      <return-type type="gboolean"/>
      <parameters>
        <parameter name="monitor" type="GNetworkMonitor*"/>
        <parameter name="_result" type="GAsyncResult*"/>
      </parameters>
    </callback>
    <callback name="WriteFn" cname="GioWriteFnFunc">
      <return-type type="gssize"/>
      <parameters>
        <parameter name="stream" type="GOutputStream*"/>
        <parameter name="buffer" type="void*" array_len="2"/>
        <parameter name="count" type="gsize"/>
        <parameter name="cancellable" type="GCancellable*"/>
      </parameters>
    </callback>
    <callback name="Splice" cname="GioSpliceFunc">
      <return-type type="gssize"/>
      <parameters>
        <parameter name="stream" type="GOutputStream*"/>
        <parameter name="source" type="GInputStream*"/>
        <parameter name="flags" type="GOutputStreamSpliceFlags"/>
        <parameter name="cancellable" type="GCancellable*"/>
      </parameters>
    </callback>
    <callback name="Flush" cname="GioFlushFunc">
      <return-type type="gboolean"/>
      <parameters>
        <parameter name="stream" type="GOutputStream*"/>
        <parameter name="cancellable" type="GCancellable*"/>
      </parameters>
    </callback>
    <callback name="CloseFn" cname="GioCloseFnFunc">
      <return-type type="gboolean"/>
      <parameters>
        <parameter name="stream" type="GOutputStream*"/>
        <parameter name="cancellable" type="GCancellable*"/>
      </parameters>
    </callback>
    <callback name="WriteAsync" cname="GioWriteAsyncFunc">
      <return-type type="void"/>
      <parameters>
        <parameter name="stream" type="GOutputStream*"/>
        <parameter name="buffer" type="void*" array_len="2"/>
        <parameter name="count" type="gsize"/>
        <parameter name="io_priority" type="gint"/>
        <parameter name="cancellable" type="GCancellable*"/>
        <parameter name="callback" type="GAsyncReadyCallback"/>
        <parameter name="user_data" type="gpointer"/>
      </parameters>
    </callback>
    <callback name="WriteFinish" cname="GioWriteFinishFunc">
      <return-type type="gssize"/>
      <parameters>
        <parameter name="stream" type="GOutputStream*"/>
        <parameter name="_result" type="GAsyncResult*"/>
      </parameters>
    </callback>
    <callback name="SpliceAsync" cname="GioSpliceAsyncFunc">
      <return-type type="void"/>
      <parameters>
        <parameter name="stream" type="GOutputStream*"/>
        <parameter name="source" type="GInputStream*"/>
        <parameter name="flags" type="GOutputStreamSpliceFlags"/>
        <parameter name="io_priority" type="gint"/>
        <parameter name="cancellable" type="GCancellable*"/>
        <parameter name="callback" type="GAsyncReadyCallback"/>
        <parameter name="user_data" type="gpointer"/>
      </parameters>
    </callback>
    <callback name="SpliceFinish" cname="GioSpliceFinishFunc">
      <return-type type="gssize"/>
      <parameters>
        <parameter name="stream" type="GOutputStream*"/>
        <parameter name="_result" type="GAsyncResult*"/>
      </parameters>
    </callback>
    <callback name="FlushAsync" cname="GioFlushAsyncFunc">
      <return-type type="void"/>
      <parameters>
        <parameter name="stream" type="GOutputStream*"/>
        <parameter name="io_priority" type="gint"/>
        <parameter name="cancellable" type="GCancellable*"/>
        <parameter name="callback" type="GAsyncReadyCallback"/>
        <parameter name="user_data" type="gpointer"/>
      </parameters>
    </callback>
    <callback name="FlushFinish" cname="GioFlushFinishFunc">
      <return-type type="gboolean"/>
      <parameters>
        <parameter name="stream" type="GOutputStream*"/>
        <parameter name="_result" type="GAsyncResult*"/>
      </parameters>
    </callback>
    <callback name="CloseAsync" cname="GioCloseAsyncFunc">
      <return-type type="void"/>
      <parameters>
        <parameter name="stream" type="GOutputStream*"/>
        <parameter name="io_priority" type="gint"/>
        <parameter name="cancellable" type="GCancellable*"/>
        <parameter name="callback" type="GAsyncReadyCallback"/>
        <parameter name="user_data" type="gpointer"/>
      </parameters>
    </callback>
    <callback name="CloseFinish" cname="GioCloseFinishFunc">
      <return-type type="gboolean"/>
      <parameters>
        <parameter name="stream" type="GOutputStream*"/>
        <parameter name="_result" type="GAsyncResult*"/>
      </parameters>
    </callback>
    <callback name="_gGReserved1" cname="Gio_gGReserved1Func">
      <return-type type="void"/>
    </callback>
    <callback name="_gGReserved2" cname="Gio_gGReserved2Func">
      <return-type type="void"/>
    </callback>
    <callback name="_gGReserved3" cname="Gio_gGReserved3Func">
      <return-type type="void"/>
    </callback>
    <callback name="_gGReserved4" cname="Gio_gGReserved4Func">
      <return-type type="void"/>
    </callback>
    <callback name="_gGReserved5" cname="Gio_gGReserved5Func">
      <return-type type="void"/>
    </callback>
    <callback name="_gGReserved6" cname="Gio_gGReserved6Func">
      <return-type type="void"/>
    </callback>
    <callback name="_gGReserved7" cname="Gio_gGReserved7Func">
      <return-type type="void"/>
    </callback>
    <callback name="_gGReserved8" cname="Gio_gGReserved8Func">
      <return-type type="void"/>
    </callback>
    <callback name="Acquire" cname="GioAcquireFunc">
      <return-type type="gboolean"/>
      <parameters>
        <parameter name="permission" type="GPermission*"/>
        <parameter name="cancellable" type="GCancellable*"/>
      </parameters>
    </callback>
    <callback name="AcquireAsync" cname="GioAcquireAsyncFunc">
      <return-type type="void"/>
      <parameters>
        <parameter name="permission" type="GPermission*"/>
        <parameter name="cancellable" type="GCancellable*"/>
        <parameter name="callback" type="GAsyncReadyCallback"/>
        <parameter name="user_data" type="gpointer"/>
      </parameters>
    </callback>
    <callback name="AcquireFinish" cname="GioAcquireFinishFunc">
      <return-type type="gboolean"/>
      <parameters>
        <parameter name="permission" type="GPermission*"/>
        <parameter name="_result" type="GAsyncResult*"/>
      </parameters>
    </callback>
    <callback name="Release" cname="GioReleaseFunc">
      <return-type type="gboolean"/>
      <parameters>
        <parameter name="permission" type="GPermission*"/>
        <parameter name="cancellable" type="GCancellable*"/>
      </parameters>
    </callback>
    <callback name="ReleaseAsync" cname="GioReleaseAsyncFunc">
      <return-type type="void"/>
      <parameters>
        <parameter name="permission" type="GPermission*"/>
        <parameter name="cancellable" type="GCancellable*"/>
        <parameter name="callback" type="GAsyncReadyCallback"/>
        <parameter name="user_data" type="gpointer"/>
      </parameters>
    </callback>
    <callback name="ReleaseFinish" cname="GioReleaseFinishFunc">
      <return-type type="gboolean"/>
      <parameters>
        <parameter name="permission" type="GPermission*"/>
        <parameter name="_result" type="GAsyncResult*"/>
      </parameters>
    </callback>
    <callback name="CanPoll" cname="GioCanPollFunc">
      <return-type type="gboolean"/>
      <parameters>
        <parameter name="stream" type="GPollableInputStream*"/>
      </parameters>
    </callback>
    <callback name="IsReadable" cname="GioIsReadableFunc">
      <return-type type="gboolean"/>
      <parameters>
        <parameter name="stream" type="GPollableInputStream*"/>
      </parameters>
    </callback>
    <callback name="CreateSource" cname="GioCreateSourceFunc">
      <return-type type="GSource*">
        <warning>missing glib:type-name</warning>
      </return-type>
      <parameters>
        <parameter name="stream" type="GPollableInputStream*"/>
        <parameter name="cancellable" type="GCancellable*"/>
      </parameters>
    </callback>
    <callback name="ReadNonblocking" cname="GioReadNonblockingFunc">
      <return-type type="gssize"/>
      <parameters>
        <parameter name="stream" type="GPollableInputStream*"/>
        <parameter name="buffer" type="gpointer"/>
        <parameter name="size" type="gsize"/>
      </parameters>
    </callback>
    <callback name="CanPoll" cname="GioCanPollFunc">
      <return-type type="gboolean"/>
      <parameters>
        <parameter name="stream" type="GPollableOutputStream*"/>
      </parameters>
    </callback>
    <callback name="IsWritable" cname="GioIsWritableFunc">
      <return-type type="gboolean"/>
      <parameters>
        <parameter name="stream" type="GPollableOutputStream*"/>
      </parameters>
    </callback>
    <callback name="CreateSource" cname="GioCreateSourceFunc">
      <return-type type="GSource*">
        <warning>missing glib:type-name</warning>
      </return-type>
      <parameters>
        <parameter name="stream" type="GPollableOutputStream*"/>
        <parameter name="cancellable" type="GCancellable*"/>
      </parameters>
    </callback>
    <callback name="WriteNonblocking" cname="GioWriteNonblockingFunc">
      <return-type type="gssize"/>
      <parameters>
        <parameter name="stream" type="GPollableOutputStream*"/>
        <parameter name="buffer" type="void*" array_len="2"/>
        <parameter name="size" type="gsize"/>
      </parameters>
    </callback>
    <callback name="_gGReserved1" cname="Gio_gGReserved1Func">
      <return-type type="void"/>
    </callback>
    <callback name="_gGReserved2" cname="Gio_gGReserved2Func">
      <return-type type="void"/>
    </callback>
    <callback name="_gGReserved3" cname="Gio_gGReserved3Func">
      <return-type type="void"/>
    </callback>
    <callback name="_gGReserved4" cname="Gio_gGReserved4Func">
      <return-type type="void"/>
    </callback>
    <callback name="_gGReserved5" cname="Gio_gGReserved5Func">
      <return-type type="void"/>
    </callback>
    <callback name="_gGReserved6" cname="Gio_gGReserved6Func">
      <return-type type="void"/>
    </callback>
    <callback name="_gGReserved7" cname="Gio_gGReserved7Func">
      <return-type type="void"/>
    </callback>
    <callback name="Connect" cname="GioConnectFunc">
      <return-type type="GIOStream*"/>
      <parameters>
        <parameter name="proxy" type="GProxy*"/>
        <parameter name="connection" type="GIOStream*"/>
        <parameter name="proxy_address" type="GProxyAddress*"/>
        <parameter name="cancellable" type="GCancellable*"/>
      </parameters>
    </callback>
    <callback name="ConnectAsync" cname="GioConnectAsyncFunc">
      <return-type type="void"/>
      <parameters>
        <parameter name="proxy" type="GProxy*"/>
        <parameter name="connection" type="GIOStream*"/>
        <parameter name="proxy_address" type="GProxyAddress*"/>
        <parameter name="cancellable" type="GCancellable*"/>
        <parameter name="callback" type="GAsyncReadyCallback"/>
        <parameter name="user_data" type="gpointer"/>
      </parameters>
    </callback>
    <callback name="ConnectFinish" cname="GioConnectFinishFunc">
      <return-type type="GIOStream*"/>
      <parameters>
        <parameter name="proxy" type="GProxy*"/>
        <parameter name="_result" type="GAsyncResult*"/>
      </parameters>
    </callback>
    <callback name="SupportsHostname" cname="GioSupportsHostnameFunc">
      <return-type type="gboolean"/>
      <parameters>
        <parameter name="proxy" type="GProxy*"/>
      </parameters>
    </callback>
    <callback name="IsSupported" cname="GioIsSupportedFunc">
      <return-type type="gboolean"/>
      <parameters>
        <parameter name="resolver" type="GProxyResolver*"/>
      </parameters>
    </callback>
    <callback name="Lookup" cname="GioLookupFunc">
      <return-type type="gchar***" array="true"/>
      <parameters>
        <parameter name="resolver" type="GProxyResolver*"/>
        <parameter name="uri" type="const-gchar*"/>
        <parameter name="cancellable" type="GCancellable*"/>
      </parameters>
    </callback>
    <callback name="LookupAsync" cname="GioLookupAsyncFunc">
      <return-type type="void"/>
      <parameters>
        <parameter name="resolver" type="GProxyResolver*"/>
        <parameter name="uri" type="const-gchar*"/>
        <parameter name="cancellable" type="GCancellable*"/>
        <parameter name="callback" type="GAsyncReadyCallback"/>
        <parameter name="user_data" type="gpointer"/>
      </parameters>
    </callback>
    <callback name="LookupFinish" cname="GioLookupFinishFunc">
      <return-type type="gchar***" array="true"/>
      <parameters>
        <parameter name="resolver" type="GProxyResolver*"/>
        <parameter name="_result" type="GAsyncResult*"/>
      </parameters>
    </callback>
    <callback name="ActivateActionFull" cname="GioActivateActionFullFunc">
      <return-type type="void"/>
      <parameters>
        <parameter name="remote" type="GRemoteActionGroup*"/>
        <parameter name="action_name" type="const-gchar*"/>
        <parameter name="parameter" type="GVariant*">
          <warning>missing glib:type-name</warning>
        </parameter>
        <parameter name="platform_data" type="GVariant*">
          <warning>missing glib:type-name</warning>
        </parameter>
      </parameters>
    </callback>
    <callback name="ChangeActionStateFull" cname="GioChangeActionStateFullFunc">
      <return-type type="void"/>
      <parameters>
        <parameter name="remote" type="GRemoteActionGroup*"/>
        <parameter name="action_name" type="const-gchar*"/>
        <parameter name="value" type="GVariant*">
          <warning>missing glib:type-name</warning>
        </parameter>
        <parameter name="platform_data" type="GVariant*">
          <warning>missing glib:type-name</warning>
        </parameter>
      </parameters>
    </callback>
    <callback name="Reload" cname="GioReloadFunc">
      <return-type type="void"/>
      <parameters>
        <parameter name="resolver" type="GResolver*"/>
      </parameters>
    </callback>
    <callback name="LookupByName" cname="GioLookupByNameFunc">
      <return-type type="GList*">
        <warning>missing glib:type-name</warning>
      </return-type>
      <parameters>
        <parameter name="resolver" type="GResolver*"/>
        <parameter name="hostname" type="const-gchar*"/>
        <parameter name="cancellable" type="GCancellable*"/>
      </parameters>
    </callback>
    <callback name="LookupByNameAsync" cname="GioLookupByNameAsyncFunc">
      <return-type type="void"/>
      <parameters>
        <parameter name="resolver" type="GResolver*"/>
        <parameter name="hostname" type="const-gchar*"/>
        <parameter name="cancellable" type="GCancellable*"/>
        <parameter name="callback" type="GAsyncReadyCallback"/>
        <parameter name="user_data" type="gpointer"/>
      </parameters>
    </callback>
    <callback name="LookupByNameFinish" cname="GioLookupByNameFinishFunc">
      <return-type type="GList*">
        <warning>missing glib:type-name</warning>
      </return-type>
      <parameters>
        <parameter name="resolver" type="GResolver*"/>
        <parameter name="_result" type="GAsyncResult*"/>
      </parameters>
    </callback>
    <callback name="LookupByAddress" cname="GioLookupByAddressFunc">
      <return-type type="gchar*"/>
      <parameters>
        <parameter name="resolver" type="GResolver*"/>
        <parameter name="address" type="GInetAddress*"/>
        <parameter name="cancellable" type="GCancellable*"/>
      </parameters>
    </callback>
    <callback name="LookupByAddressAsync" cname="GioLookupByAddressAsyncFunc">
      <return-type type="void"/>
      <parameters>
        <parameter name="resolver" type="GResolver*"/>
        <parameter name="address" type="GInetAddress*"/>
        <parameter name="cancellable" type="GCancellable*"/>
        <parameter name="callback" type="GAsyncReadyCallback"/>
        <parameter name="user_data" type="gpointer"/>
      </parameters>
    </callback>
    <callback name="LookupByAddressFinish" cname="GioLookupByAddressFinishFunc">
      <return-type type="gchar*"/>
      <parameters>
        <parameter name="resolver" type="GResolver*"/>
        <parameter name="_result" type="GAsyncResult*"/>
      </parameters>
    </callback>
    <callback name="LookupService" cname="GioLookupServiceFunc">
      <return-type type="GList*">
        <warning>missing glib:type-name</warning>
      </return-type>
      <parameters>
        <parameter name="resolver" type="GResolver*"/>
        <parameter name="rrname" type="const-gchar*"/>
        <parameter name="cancellable" type="GCancellable*"/>
      </parameters>
    </callback>
    <callback name="LookupServiceAsync" cname="GioLookupServiceAsyncFunc">
      <return-type type="void"/>
      <parameters>
        <parameter name="resolver" type="GResolver*"/>
        <parameter name="rrname" type="const-gchar*"/>
        <parameter name="cancellable" type="GCancellable*"/>
        <parameter name="callback" type="GAsyncReadyCallback"/>
        <parameter name="user_data" type="gpointer"/>
      </parameters>
    </callback>
    <callback name="LookupServiceFinish" cname="GioLookupServiceFinishFunc">
      <return-type type="GList*">
        <warning>missing glib:type-name</warning>
      </return-type>
      <parameters>
        <parameter name="resolver" type="GResolver*"/>
        <parameter name="_result" type="GAsyncResult*"/>
      </parameters>
    </callback>
    <callback name="_gGReserved1" cname="Gio_gGReserved1Func">
      <return-type type="void"/>
    </callback>
    <callback name="_gGReserved2" cname="Gio_gGReserved2Func">
      <return-type type="void"/>
    </callback>
    <callback name="_gGReserved3" cname="Gio_gGReserved3Func">
      <return-type type="void"/>
    </callback>
    <callback name="_gGReserved4" cname="Gio_gGReserved4Func">
      <return-type type="void"/>
    </callback>
    <callback name="_gGReserved5" cname="Gio_gGReserved5Func">
      <return-type type="void"/>
    </callback>
    <callback name="_gGReserved6" cname="Gio_gGReserved6Func">
      <return-type type="void"/>
    </callback>
    <callback name="Tell" cname="GioTellFunc">
      <return-type type="gint64"/>
      <parameters>
        <parameter name="seekable" type="GSeekable*"/>
      </parameters>
    </callback>
    <callback name="CanSeek" cname="GioCanSeekFunc">
      <return-type type="gboolean"/>
      <parameters>
        <parameter name="seekable" type="GSeekable*"/>
      </parameters>
    </callback>
    <callback name="Seek" cname="GioSeekFunc">
      <return-type type="gboolean"/>
      <parameters>
        <parameter name="seekable" type="GSeekable*"/>
        <parameter name="offset" type="gint64"/>
        <parameter name="type" type="GSeekType"/>
        <parameter name="cancellable" type="GCancellable*"/>
      </parameters>
    </callback>
    <callback name="CanTruncate" cname="GioCanTruncateFunc">
      <return-type type="gboolean"/>
      <parameters>
        <parameter name="seekable" type="GSeekable*"/>
      </parameters>
    </callback>
    <callback name="TruncateFn" cname="GioTruncateFnFunc">
      <return-type type="gboolean"/>
      <parameters>
        <parameter name="seekable" type="GSeekable*"/>
        <parameter name="offset" type="gint64"/>
        <parameter name="cancellable" type="GCancellable*"/>
      </parameters>
    </callback>
    <callback name="WritableChanged" cname="GioWritableChangedFunc">
      <return-type type="void"/>
      <parameters>
        <parameter name="settings" type="GSettings*"/>
        <parameter name="key" type="const-gchar*"/>
      </parameters>
    </callback>
    <callback name="Changed" cname="GioChangedFunc">
      <return-type type="void"/>
      <parameters>
        <parameter name="settings" type="GSettings*"/>
        <parameter name="key" type="const-gchar*"/>
      </parameters>
    </callback>
    <callback name="WritableChangeEvent" cname="GioWritableChangeEventFunc">
      <return-type type="gboolean"/>
      <parameters>
        <parameter name="settings" type="GSettings*"/>
        <parameter name="key" type="guint32"/>
      </parameters>
    </callback>
    <callback name="ChangeEvent" cname="GioChangeEventFunc">
      <return-type type="gboolean"/>
      <parameters>
        <parameter name="settings" type="GSettings*"/>
        <parameter name="keys" type="guint32"/>
        <parameter name="n_keys" type="gint"/>
      </parameters>
    </callback>
    <callback name="GetFamily" cname="GioGetFamilyFunc">
      <return-type type="GSocketFamily"/>
      <parameters>
        <parameter name="address" type="GSocketAddress*"/>
      </parameters>
    </callback>
    <callback name="GetNativeSize" cname="GioGetNativeSizeFunc">
      <return-type type="gssize"/>
      <parameters>
        <parameter name="address" type="GSocketAddress*"/>
      </parameters>
    </callback>
    <callback name="ToNative" cname="GioToNativeFunc">
      <return-type type="gboolean"/>
      <parameters>
        <parameter name="address" type="GSocketAddress*"/>
        <parameter name="dest" type="gpointer"/>
        <parameter name="destlen" type="gsize"/>
      </parameters>
    </callback>
    <callback name="Next" cname="GioNextFunc">
      <return-type type="GSocketAddress*"/>
      <parameters>
        <parameter name="enumerator" type="GSocketAddressEnumerator*"/>
        <parameter name="cancellable" type="GCancellable*"/>
      </parameters>
    </callback>
    <callback name="NextAsync" cname="GioNextAsyncFunc">
      <return-type type="void"/>
      <parameters>
        <parameter name="enumerator" type="GSocketAddressEnumerator*"/>
        <parameter name="cancellable" type="GCancellable*"/>
        <parameter name="callback" type="GAsyncReadyCallback"/>
        <parameter name="user_data" type="gpointer"/>
      </parameters>
    </callback>
    <callback name="NextFinish" cname="GioNextFinishFunc">
      <return-type type="GSocketAddress*"/>
      <parameters>
        <parameter name="enumerator" type="GSocketAddressEnumerator*"/>
        <parameter name="_result" type="GAsyncResult*"/>
      </parameters>
    </callback>
    <callback name="_gGReserved1" cname="Gio_gGReserved1Func">
      <return-type type="void"/>
    </callback>
    <callback name="_gGReserved2" cname="Gio_gGReserved2Func">
      <return-type type="void"/>
    </callback>
    <callback name="_gGReserved3" cname="Gio_gGReserved3Func">
      <return-type type="void"/>
    </callback>
    <callback name="_gGReserved4" cname="Gio_gGReserved4Func">
      <return-type type="void"/>
    </callback>
    <callback name="_gGReserved5" cname="Gio_gGReserved5Func">
      <return-type type="void"/>
    </callback>
    <callback name="_gGReserved6" cname="Gio_gGReserved6Func">
      <return-type type="void"/>
    </callback>
    <callback name="_gGReserved7" cname="Gio_gGReserved7Func">
      <return-type type="void"/>
    </callback>
    <callback name="_gGReserved8" cname="Gio_gGReserved8Func">
      <return-type type="void"/>
    </callback>
    <callback name="_gGReserved9" cname="Gio_gGReserved9Func">
      <return-type type="void"/>
    </callback>
    <callback name="_gGReserved10" cname="Gio_gGReserved10Func">
      <return-type type="void"/>
    </callback>
    <callback name="Event" cname="GioEventFunc">
      <return-type type="void"/>
      <parameters>
        <parameter name="client" type="GSocketClient*"/>
        <parameter name="event" type="GSocketClientEvent"/>
        <parameter name="connectable" type="GSocketConnectable*"/>
        <parameter name="connection" type="GIOStream*"/>
      </parameters>
    </callback>
    <callback name="_gGReserved1" cname="Gio_gGReserved1Func">
      <return-type type="void"/>
    </callback>
    <callback name="_gGReserved2" cname="Gio_gGReserved2Func">
      <return-type type="void"/>
    </callback>
    <callback name="_gGReserved3" cname="Gio_gGReserved3Func">
      <return-type type="void"/>
    </callback>
    <callback name="_gGReserved4" cname="Gio_gGReserved4Func">
      <return-type type="void"/>
    </callback>
    <callback name="Enumerate" cname="GioEnumerateFunc">
      <return-type type="GSocketAddressEnumerator*"/>
      <parameters>
        <parameter name="connectable" type="GSocketConnectable*"/>
      </parameters>
    </callback>
    <callback name="ProxyEnumerate" cname="GioProxyEnumerateFunc">
      <return-type type="GSocketAddressEnumerator*"/>
      <parameters>
        <parameter name="connectable" type="GSocketConnectable*"/>
      </parameters>
    </callback>
    <callback name="_gGReserved1" cname="Gio_gGReserved1Func">
      <return-type type="void"/>
    </callback>
    <callback name="_gGReserved2" cname="Gio_gGReserved2Func">
      <return-type type="void"/>
    </callback>
    <callback name="_gGReserved3" cname="Gio_gGReserved3Func">
      <return-type type="void"/>
    </callback>
    <callback name="_gGReserved4" cname="Gio_gGReserved4Func">
      <return-type type="void"/>
    </callback>
    <callback name="_gGReserved5" cname="Gio_gGReserved5Func">
      <return-type type="void"/>
    </callback>
    <callback name="_gGReserved6" cname="Gio_gGReserved6Func">
      <return-type type="void"/>
    </callback>
    <callback name="GetSize" cname="GioGetSizeFunc">
      <return-type type="gsize"/>
      <parameters>
        <parameter name="message" type="GSocketControlMessage*"/>
      </parameters>
    </callback>
    <callback name="GetLevel" cname="GioGetLevelFunc">
      <return-type type="gint"/>
      <parameters>
        <parameter name="message" type="GSocketControlMessage*"/>
      </parameters>
    </callback>
    <callback name="GetType" cname="GioGetTypeFunc">
      <return-type type="gint"/>
      <parameters>
        <parameter name="message" type="GSocketControlMessage*"/>
      </parameters>
    </callback>
    <callback name="Serialize" cname="GioSerializeFunc">
      <return-type type="void"/>
      <parameters>
        <parameter name="message" type="GSocketControlMessage*"/>
        <parameter name="data" type="gpointer"/>
      </parameters>
    </callback>
    <callback name="Deserialize" cname="GioDeserializeFunc">
      <return-type type="GSocketControlMessage*"/>
      <parameters>
        <parameter name="level" type="gint"/>
        <parameter name="type" type="gint"/>
        <parameter name="size" type="gsize"/>
        <parameter name="data" type="gpointer"/>
      </parameters>
    </callback>
    <callback name="_gGReserved1" cname="Gio_gGReserved1Func">
      <return-type type="void"/>
    </callback>
    <callback name="_gGReserved2" cname="Gio_gGReserved2Func">
      <return-type type="void"/>
    </callback>
    <callback name="_gGReserved3" cname="Gio_gGReserved3Func">
      <return-type type="void"/>
    </callback>
    <callback name="_gGReserved4" cname="Gio_gGReserved4Func">
      <return-type type="void"/>
    </callback>
    <callback name="_gGReserved5" cname="Gio_gGReserved5Func">
      <return-type type="void"/>
    </callback>
    <callback name="Changed" cname="GioChangedFunc">
      <return-type type="void"/>
      <parameters>
        <parameter name="listener" type="GSocketListener*"/>
      </parameters>
    </callback>
    <callback name="_gGReserved1" cname="Gio_gGReserved1Func">
      <return-type type="void"/>
    </callback>
    <callback name="_gGReserved2" cname="Gio_gGReserved2Func">
      <return-type type="void"/>
    </callback>
    <callback name="_gGReserved3" cname="Gio_gGReserved3Func">
      <return-type type="void"/>
    </callback>
    <callback name="_gGReserved4" cname="Gio_gGReserved4Func">
      <return-type type="void"/>
    </callback>
    <callback name="_gGReserved5" cname="Gio_gGReserved5Func">
      <return-type type="void"/>
    </callback>
    <callback name="_gGReserved6" cname="Gio_gGReserved6Func">
      <return-type type="void"/>
    </callback>
    <callback name="Incoming" cname="GioIncomingFunc">
      <return-type type="gboolean"/>
      <parameters>
        <parameter name="service" type="GSocketService*"/>
        <parameter name="connection" type="GSocketConnection*"/>
        <parameter name="source_object" type="GObject*"/>
      </parameters>
    </callback>
    <callback name="_gGReserved1" cname="Gio_gGReserved1Func">
      <return-type type="void"/>
    </callback>
    <callback name="_gGReserved2" cname="Gio_gGReserved2Func">
      <return-type type="void"/>
    </callback>
    <callback name="_gGReserved3" cname="Gio_gGReserved3Func">
      <return-type type="void"/>
    </callback>
    <callback name="_gGReserved4" cname="Gio_gGReserved4Func">
      <return-type type="void"/>
    </callback>
    <callback name="_gGReserved5" cname="Gio_gGReserved5Func">
      <return-type type="void"/>
    </callback>
    <callback name="_gGReserved6" cname="Gio_gGReserved6Func">
      <return-type type="void"/>
    </callback>
    <callback name="Run" cname="GioRunFunc">
      <return-type type="gboolean"/>
      <parameters>
        <parameter name="service" type="GThreadedSocketService*"/>
        <parameter name="connection" type="GSocketConnection*"/>
        <parameter name="source_object" type="GObject*"/>
      </parameters>
    </callback>
    <callback name="_gGReserved1" cname="Gio_gGReserved1Func">
      <return-type type="void"/>
    </callback>
    <callback name="_gGReserved2" cname="Gio_gGReserved2Func">
      <return-type type="void"/>
    </callback>
    <callback name="_gGReserved3" cname="Gio_gGReserved3Func">
      <return-type type="void"/>
    </callback>
    <callback name="_gGReserved4" cname="Gio_gGReserved4Func">
      <return-type type="void"/>
    </callback>
    <callback name="_gGReserved5" cname="Gio_gGReserved5Func">
      <return-type type="void"/>
    </callback>
    <callback name="SupportsTls" cname="GioSupportsTlsFunc">
      <return-type type="gboolean"/>
      <parameters>
        <parameter name="backend" type="GTlsBackend*"/>
      </parameters>
    </callback>
    <callback name="GetCertificateType" cname="GioGetCertificateTypeFunc">
      <return-type type="GType"/>
    </callback>
    <callback name="GetClientConnectionType" cname="GioGetClientConnectionTypeFunc">
      <return-type type="GType"/>
    </callback>
    <callback name="GetServerConnectionType" cname="GioGetServerConnectionTypeFunc">
      <return-type type="GType"/>
    </callback>
    <callback name="GetFileDatabaseType" cname="GioGetFileDatabaseTypeFunc">
      <return-type type="GType"/>
    </callback>
    <callback name="GetDefaultDatabase" cname="GioGetDefaultDatabaseFunc">
      <return-type type="GTlsDatabase*"/>
      <parameters>
        <parameter name="backend" type="GTlsBackend*"/>
      </parameters>
    </callback>
    <callback name="Verify" cname="GioVerifyFunc">
      <return-type type="GTlsCertificateFlags"/>
      <parameters>
        <parameter name="cert" type="GTlsCertificate*"/>
        <parameter name="identity" type="GSocketConnectable*"/>
        <parameter name="trusted_ca" type="GTlsCertificate*"/>
      </parameters>
    </callback>
    <callback name="AcceptCertificate" cname="GioAcceptCertificateFunc">
      <return-type type="gboolean"/>
      <parameters>
        <parameter name="connection" type="GTlsConnection*"/>
        <parameter name="peer_cert" type="GTlsCertificate*"/>
        <parameter name="errors" type="GTlsCertificateFlags"/>
      </parameters>
    </callback>
    <callback name="Handshake" cname="GioHandshakeFunc">
      <return-type type="gboolean"/>
      <parameters>
        <parameter name="conn" type="GTlsConnection*"/>
        <parameter name="cancellable" type="GCancellable*"/>
      </parameters>
    </callback>
    <callback name="HandshakeAsync" cname="GioHandshakeAsyncFunc">
      <return-type type="void"/>
      <parameters>
        <parameter name="conn" type="GTlsConnection*"/>
        <parameter name="io_priority" type="gint"/>
        <parameter name="cancellable" type="GCancellable*"/>
        <parameter name="callback" type="GAsyncReadyCallback"/>
        <parameter name="user_data" type="gpointer"/>
      </parameters>
    </callback>
    <callback name="HandshakeFinish" cname="GioHandshakeFinishFunc">
      <return-type type="gboolean"/>
      <parameters>
        <parameter name="conn" type="GTlsConnection*"/>
        <parameter name="_result" type="GAsyncResult*"/>
      </parameters>
    </callback>
    <callback name="VerifyChain" cname="GioVerifyChainFunc">
      <return-type type="GTlsCertificateFlags"/>
      <parameters>
        <parameter name="self" type="GTlsDatabase*"/>
        <parameter name="chain" type="GTlsCertificate*"/>
        <parameter name="purpose" type="const-gchar*"/>
        <parameter name="identity" type="GSocketConnectable*"/>
        <parameter name="interaction" type="GTlsInteraction*"/>
        <parameter name="flags" type="GTlsDatabaseVerifyFlags"/>
        <parameter name="cancellable" type="GCancellable*"/>
      </parameters>
    </callback>
    <callback name="VerifyChainAsync" cname="GioVerifyChainAsyncFunc">
      <return-type type="void"/>
      <parameters>
        <parameter name="self" type="GTlsDatabase*"/>
        <parameter name="chain" type="GTlsCertificate*"/>
        <parameter name="purpose" type="const-gchar*"/>
        <parameter name="identity" type="GSocketConnectable*"/>
        <parameter name="interaction" type="GTlsInteraction*"/>
        <parameter name="flags" type="GTlsDatabaseVerifyFlags"/>
        <parameter name="cancellable" type="GCancellable*"/>
        <parameter name="callback" type="GAsyncReadyCallback"/>
        <parameter name="user_data" type="gpointer"/>
      </parameters>
    </callback>
    <callback name="VerifyChainFinish" cname="GioVerifyChainFinishFunc">
      <return-type type="GTlsCertificateFlags"/>
      <parameters>
        <parameter name="self" type="GTlsDatabase*"/>
        <parameter name="_result" type="GAsyncResult*"/>
      </parameters>
    </callback>
    <callback name="CreateCertificateHandle" cname="GioCreateCertificateHandleFunc">
      <return-type type="gchar*"/>
      <parameters>
        <parameter name="self" type="GTlsDatabase*"/>
        <parameter name="certificate" type="GTlsCertificate*"/>
      </parameters>
    </callback>
    <callback name="LookupCertificateForHandle" cname="GioLookupCertificateForHandleFunc">
      <return-type type="GTlsCertificate*"/>
      <parameters>
        <parameter name="self" type="GTlsDatabase*"/>
        <parameter name="handle" type="const-gchar*"/>
        <parameter name="interaction" type="GTlsInteraction*"/>
        <parameter name="flags" type="GTlsDatabaseLookupFlags"/>
        <parameter name="cancellable" type="GCancellable*"/>
      </parameters>
    </callback>
    <callback name="LookupCertificateForHandleAsync" cname="GioLookupCertificateForHandleAsyncFunc">
      <return-type type="void"/>
      <parameters>
        <parameter name="self" type="GTlsDatabase*"/>
        <parameter name="handle" type="const-gchar*"/>
        <parameter name="interaction" type="GTlsInteraction*"/>
        <parameter name="flags" type="GTlsDatabaseLookupFlags"/>
        <parameter name="cancellable" type="GCancellable*"/>
        <parameter name="callback" type="GAsyncReadyCallback"/>
        <parameter name="user_data" type="gpointer"/>
      </parameters>
    </callback>
    <callback name="LookupCertificateForHandleFinish" cname="GioLookupCertificateForHandleFinishFunc">
      <return-type type="GTlsCertificate*"/>
      <parameters>
        <parameter name="self" type="GTlsDatabase*"/>
        <parameter name="_result" type="GAsyncResult*"/>
      </parameters>
    </callback>
    <callback name="LookupCertificateIssuer" cname="GioLookupCertificateIssuerFunc">
      <return-type type="GTlsCertificate*"/>
      <parameters>
        <parameter name="self" type="GTlsDatabase*"/>
        <parameter name="certificate" type="GTlsCertificate*"/>
        <parameter name="interaction" type="GTlsInteraction*"/>
        <parameter name="flags" type="GTlsDatabaseLookupFlags"/>
        <parameter name="cancellable" type="GCancellable*"/>
      </parameters>
    </callback>
    <callback name="LookupCertificateIssuerAsync" cname="GioLookupCertificateIssuerAsyncFunc">
      <return-type type="void"/>
      <parameters>
        <parameter name="self" type="GTlsDatabase*"/>
        <parameter name="certificate" type="GTlsCertificate*"/>
        <parameter name="interaction" type="GTlsInteraction*"/>
        <parameter name="flags" type="GTlsDatabaseLookupFlags"/>
        <parameter name="cancellable" type="GCancellable*"/>
        <parameter name="callback" type="GAsyncReadyCallback"/>
        <parameter name="user_data" type="gpointer"/>
      </parameters>
    </callback>
    <callback name="LookupCertificateIssuerFinish" cname="GioLookupCertificateIssuerFinishFunc">
      <return-type type="GTlsCertificate*"/>
      <parameters>
        <parameter name="self" type="GTlsDatabase*"/>
        <parameter name="_result" type="GAsyncResult*"/>
      </parameters>
    </callback>
    <callback name="LookupCertificatesIssuedBy" cname="GioLookupCertificatesIssuedByFunc">
      <return-type type="GList*">
        <warning>missing glib:type-name</warning>
      </return-type>
      <parameters>
        <parameter name="self" type="GTlsDatabase*"/>
        <parameter name="issuer_raw_dn" type="GByteArray*" array="true"/>
        <parameter name="interaction" type="GTlsInteraction*"/>
        <parameter name="flags" type="GTlsDatabaseLookupFlags"/>
        <parameter name="cancellable" type="GCancellable*"/>
      </parameters>
    </callback>
    <callback name="LookupCertificatesIssuedByAsync" cname="GioLookupCertificatesIssuedByAsyncFunc">
      <return-type type="void"/>
      <parameters>
        <parameter name="self" type="GTlsDatabase*"/>
        <parameter name="issuer_raw_dn" type="GByteArray*" array="true"/>
        <parameter name="interaction" type="GTlsInteraction*"/>
        <parameter name="flags" type="GTlsDatabaseLookupFlags"/>
        <parameter name="cancellable" type="GCancellable*"/>
        <parameter name="callback" type="GAsyncReadyCallback"/>
        <parameter name="user_data" type="gpointer"/>
      </parameters>
    </callback>
    <callback name="LookupCertificatesIssuedByFinish" cname="GioLookupCertificatesIssuedByFinishFunc">
      <return-type type="GList*">
        <warning>missing glib:type-name</warning>
      </return-type>
      <parameters>
        <parameter name="self" type="GTlsDatabase*"/>
        <parameter name="_result" type="GAsyncResult*"/>
      </parameters>
    </callback>
    <callback name="AskPassword" cname="GioAskPasswordFunc">
      <return-type type="GTlsInteractionResult"/>
      <parameters>
        <parameter name="interaction" type="GTlsInteraction*"/>
        <parameter name="password" type="GTlsPassword*"/>
        <parameter name="cancellable" type="GCancellable*"/>
      </parameters>
    </callback>
    <callback name="AskPasswordAsync" cname="GioAskPasswordAsyncFunc">
      <return-type type="void"/>
      <parameters>
        <parameter name="interaction" type="GTlsInteraction*"/>
        <parameter name="password" type="GTlsPassword*"/>
        <parameter name="cancellable" type="GCancellable*"/>
        <parameter name="callback" type="GAsyncReadyCallback"/>
        <parameter name="user_data" type="gpointer"/>
      </parameters>
    </callback>
    <callback name="AskPasswordFinish" cname="GioAskPasswordFinishFunc">
      <return-type type="GTlsInteractionResult"/>
      <parameters>
        <parameter name="interaction" type="GTlsInteraction*"/>
        <parameter name="_result" type="GAsyncResult*"/>
      </parameters>
    </callback>
    <callback name="GetValue" cname="GioGetValueFunc">
      <return-type type="guint8"/>
      <parameters>
        <parameter name="password" type="GTlsPassword*"/>
        <parameter name="length" type="gsize"/>
      </parameters>
    </callback>
    <callback name="SetValue" cname="GioSetValueFunc">
      <return-type type="void"/>
      <parameters>
        <parameter name="password" type="GTlsPassword*"/>
        <parameter name="value" type="guint8"/>
        <parameter name="length" type="gssize"/>
        <parameter name="destroy" type="GDestroyNotify"/>
      </parameters>
    </callback>
    <callback name="GetDefaultWarning" cname="GioGetDefaultWarningFunc">
      <return-type type="gchar*"/>
      <parameters>
        <parameter name="password" type="GTlsPassword*"/>
      </parameters>
    </callback>
    <callback name="_gGReserved1" cname="Gio_gGReserved1Func">
      <return-type type="void"/>
    </callback>
    <callback name="_gGReserved2" cname="Gio_gGReserved2Func">
      <return-type type="void"/>
    </callback>
    <callback name="_gGReserved1" cname="Gio_gGReserved1Func">
      <return-type type="void"/>
    </callback>
    <callback name="_gGReserved2" cname="Gio_gGReserved2Func">
      <return-type type="void"/>
    </callback>
    <callback name="_gGReserved3" cname="Gio_gGReserved3Func">
      <return-type type="void"/>
    </callback>
    <callback name="_gGReserved4" cname="Gio_gGReserved4Func">
      <return-type type="void"/>
    </callback>
    <callback name="_gGReserved5" cname="Gio_gGReserved5Func">
      <return-type type="void"/>
    </callback>
    <callback name="_gGReserved1" cname="Gio_gGReserved1Func">
      <return-type type="void"/>
    </callback>
    <callback name="_gGReserved2" cname="Gio_gGReserved2Func">
      <return-type type="void"/>
    </callback>
    <callback name="_gGReserved1" cname="Gio_gGReserved1Func">
      <return-type type="void"/>
    </callback>
    <callback name="_gGReserved2" cname="Gio_gGReserved2Func">
      <return-type type="void"/>
    </callback>
    <callback name="_gGReserved3" cname="Gio_gGReserved3Func">
      <return-type type="void"/>
    </callback>
    <callback name="_gGReserved4" cname="Gio_gGReserved4Func">
      <return-type type="void"/>
    </callback>
    <callback name="_gGReserved5" cname="Gio_gGReserved5Func">
      <return-type type="void"/>
    </callback>
    <callback name="_gGReserved1" cname="Gio_gGReserved1Func">
      <return-type type="void"/>
    </callback>
    <callback name="_gGReserved2" cname="Gio_gGReserved2Func">
      <return-type type="void"/>
    </callback>
    <callback name="_gGReserved3" cname="Gio_gGReserved3Func">
      <return-type type="void"/>
    </callback>
    <callback name="_gGReserved4" cname="Gio_gGReserved4Func">
      <return-type type="void"/>
    </callback>
    <callback name="_gGReserved5" cname="Gio_gGReserved5Func">
      <return-type type="void"/>
    </callback>
    <callback name="IsActive" cname="GioIsActiveFunc">
      <return-type type="gboolean"/>
      <parameters>
        <parameter name="vfs" type="GVfs*"/>
      </parameters>
    </callback>
    <callback name="GetFileForPath" cname="GioGetFileForPathFunc">
      <return-type type="GFile*"/>
      <parameters>
        <parameter name="vfs" type="GVfs*"/>
        <parameter name="path" type="const-gchar*"/>
      </parameters>
    </callback>
    <callback name="GetFileForUri" cname="GioGetFileForUriFunc">
      <return-type type="GFile*"/>
      <parameters>
        <parameter name="vfs" type="GVfs*"/>
        <parameter name="uri" type="const-gchar*"/>
      </parameters>
    </callback>
    <callback name="GetSupportedUriSchemes" cname="GioGetSupportedUriSchemesFunc">
      <return-type type="gchar**" array="true"/>
      <parameters>
        <parameter name="vfs" type="GVfs*"/>
      </parameters>
    </callback>
    <callback name="ParseName" cname="GioParseNameFunc">
      <return-type type="GFile*"/>
      <parameters>
        <parameter name="vfs" type="GVfs*"/>
        <parameter name="parse_name" type="const-gchar*"/>
      </parameters>
    </callback>
    <callback name="LocalFileAddInfo" cname="GioLocalFileAddInfoFunc">
      <return-type type="void"/>
      <parameters>
        <parameter name="vfs" type="GVfs*"/>
        <parameter name="filename" type="const-gchar*"/>
        <parameter name="device" type="guint64"/>
        <parameter name="attribute_matcher" type="GFileAttributeMatcher*">
          <warning>missing glib:type-name</warning>
        </parameter>
        <parameter name="info" type="GFileInfo*"/>
        <parameter name="cancellable" type="GCancellable*"/>
        <parameter name="extra_data" type="gpointer"/>
        <parameter name="free_extra_data" type="GDestroyNotify"/>
      </parameters>
    </callback>
    <callback name="AddWritableNamespaces" cname="GioAddWritableNamespacesFunc">
      <return-type type="void"/>
      <parameters>
        <parameter name="vfs" type="GVfs*"/>
        <parameter name="list" type="GFileAttributeInfoList*">
          <warning>missing glib:type-name</warning>
        </parameter>
      </parameters>
    </callback>
    <callback name="LocalFileSetAttributes" cname="GioLocalFileSetAttributesFunc">
      <return-type type="gboolean"/>
      <parameters>
        <parameter name="vfs" type="GVfs*"/>
        <parameter name="filename" type="const-gchar*"/>
        <parameter name="info" type="GFileInfo*"/>
        <parameter name="flags" type="GFileQueryInfoFlags"/>
        <parameter name="cancellable" type="GCancellable*"/>
      </parameters>
    </callback>
    <callback name="LocalFileRemoved" cname="GioLocalFileRemovedFunc">
      <return-type type="void"/>
      <parameters>
        <parameter name="vfs" type="GVfs*"/>
        <parameter name="filename" type="const-gchar*"/>
      </parameters>
    </callback>
    <callback name="LocalFileMoved" cname="GioLocalFileMovedFunc">
      <return-type type="void"/>
      <parameters>
        <parameter name="vfs" type="GVfs*"/>
        <parameter name="source" type="const-gchar*"/>
        <parameter name="dest" type="const-gchar*"/>
      </parameters>
    </callback>
    <callback name="_gGReserved1" cname="Gio_gGReserved1Func">
      <return-type type="void"/>
    </callback>
    <callback name="_gGReserved2" cname="Gio_gGReserved2Func">
      <return-type type="void"/>
    </callback>
    <callback name="_gGReserved3" cname="Gio_gGReserved3Func">
      <return-type type="void"/>
    </callback>
    <callback name="_gGReserved4" cname="Gio_gGReserved4Func">
      <return-type type="void"/>
    </callback>
    <callback name="_gGReserved5" cname="Gio_gGReserved5Func">
      <return-type type="void"/>
    </callback>
    <callback name="_gGReserved6" cname="Gio_gGReserved6Func">
      <return-type type="void"/>
    </callback>
    <callback name="_gGReserved7" cname="Gio_gGReserved7Func">
      <return-type type="void"/>
    </callback>
    <callback name="Changed" cname="GioChangedFunc">
      <return-type type="void"/>
      <parameters>
        <parameter name="volume" type="GVolume*"/>
      </parameters>
    </callback>
    <callback name="Removed" cname="GioRemovedFunc">
      <return-type type="void"/>
      <parameters>
        <parameter name="volume" type="GVolume*"/>
      </parameters>
    </callback>
    <callback name="GetName" cname="GioGetNameFunc">
      <return-type type="gchar*"/>
      <parameters>
        <parameter name="volume" type="GVolume*"/>
      </parameters>
    </callback>
    <callback name="GetIcon" cname="GioGetIconFunc">
      <return-type type="GIcon*"/>
      <parameters>
        <parameter name="volume" type="GVolume*"/>
      </parameters>
    </callback>
    <callback name="GetUuid" cname="GioGetUuidFunc">
      <return-type type="gchar*"/>
      <parameters>
        <parameter name="volume" type="GVolume*"/>
      </parameters>
    </callback>
    <callback name="GetDrive" cname="GioGetDriveFunc">
      <return-type type="GDrive*"/>
      <parameters>
        <parameter name="volume" type="GVolume*"/>
      </parameters>
    </callback>
    <callback name="GetMount" cname="GioGetMountFunc">
      <return-type type="GMount*"/>
      <parameters>
        <parameter name="volume" type="GVolume*"/>
      </parameters>
    </callback>
    <callback name="CanMount" cname="GioCanMountFunc">
      <return-type type="gboolean"/>
      <parameters>
        <parameter name="volume" type="GVolume*"/>
      </parameters>
    </callback>
    <callback name="CanEject" cname="GioCanEjectFunc">
      <return-type type="gboolean"/>
      <parameters>
        <parameter name="volume" type="GVolume*"/>
      </parameters>
    </callback>
    <callback name="MountFn" cname="GioMountFnFunc">
      <return-type type="void"/>
      <parameters>
        <parameter name="volume" type="GVolume*"/>
        <parameter name="flags" type="GMountMountFlags"/>
        <parameter name="mount_operation" type="GMountOperation*"/>
        <parameter name="cancellable" type="GCancellable*"/>
        <parameter name="callback" type="GAsyncReadyCallback"/>
        <parameter name="user_data" type="gpointer"/>
      </parameters>
    </callback>
    <callback name="MountFinish" cname="GioMountFinishFunc">
      <return-type type="gboolean"/>
      <parameters>
        <parameter name="volume" type="GVolume*"/>
        <parameter name="_result" type="GAsyncResult*"/>
      </parameters>
    </callback>
    <callback name="Eject" cname="GioEjectFunc">
      <return-type type="void"/>
      <parameters>
        <parameter name="volume" type="GVolume*"/>
        <parameter name="flags" type="GMountUnmountFlags"/>
        <parameter name="cancellable" type="GCancellable*"/>
        <parameter name="callback" type="GAsyncReadyCallback"/>
        <parameter name="user_data" type="gpointer"/>
      </parameters>
    </callback>
    <callback name="EjectFinish" cname="GioEjectFinishFunc">
      <return-type type="gboolean"/>
      <parameters>
        <parameter name="volume" type="GVolume*"/>
        <parameter name="_result" type="GAsyncResult*"/>
      </parameters>
    </callback>
    <callback name="GetIdentifier" cname="GioGetIdentifierFunc">
      <return-type type="gchar*"/>
      <parameters>
        <parameter name="volume" type="GVolume*"/>
        <parameter name="kind" type="const-gchar*"/>
      </parameters>
    </callback>
    <callback name="EnumerateIdentifiers" cname="GioEnumerateIdentifiersFunc">
      <return-type type="char***" array="true"/>
      <parameters>
        <parameter name="volume" type="GVolume*"/>
      </parameters>
    </callback>
    <callback name="ShouldAutomount" cname="GioShouldAutomountFunc">
      <return-type type="gboolean"/>
      <parameters>
        <parameter name="volume" type="GVolume*"/>
      </parameters>
    </callback>
    <callback name="GetActivationRoot" cname="GioGetActivationRootFunc">
      <return-type type="GFile*"/>
      <parameters>
        <parameter name="volume" type="GVolume*"/>
      </parameters>
    </callback>
    <callback name="EjectWithOperation" cname="GioEjectWithOperationFunc">
      <return-type type="void"/>
      <parameters>
        <parameter name="volume" type="GVolume*"/>
        <parameter name="flags" type="GMountUnmountFlags"/>
        <parameter name="mount_operation" type="GMountOperation*"/>
        <parameter name="cancellable" type="GCancellable*"/>
        <parameter name="callback" type="GAsyncReadyCallback"/>
        <parameter name="user_data" type="gpointer"/>
      </parameters>
    </callback>
    <callback name="EjectWithOperationFinish" cname="GioEjectWithOperationFinishFunc">
      <return-type type="gboolean"/>
      <parameters>
        <parameter name="volume" type="GVolume*"/>
        <parameter name="_result" type="GAsyncResult*"/>
      </parameters>
    </callback>
    <callback name="GetSortKey" cname="GioGetSortKeyFunc">
      <return-type type="gchar*"/>
      <parameters>
        <parameter name="volume" type="GVolume*"/>
      </parameters>
    </callback>
    <callback name="VolumeAdded" cname="GioVolumeAddedFunc">
      <return-type type="void"/>
      <parameters>
        <parameter name="volume_monitor" type="GVolumeMonitor*"/>
        <parameter name="volume" type="GVolume*"/>
      </parameters>
    </callback>
    <callback name="VolumeRemoved" cname="GioVolumeRemovedFunc">
      <return-type type="void"/>
      <parameters>
        <parameter name="volume_monitor" type="GVolumeMonitor*"/>
        <parameter name="volume" type="GVolume*"/>
      </parameters>
    </callback>
    <callback name="VolumeChanged" cname="GioVolumeChangedFunc">
      <return-type type="void"/>
      <parameters>
        <parameter name="volume_monitor" type="GVolumeMonitor*"/>
        <parameter name="volume" type="GVolume*"/>
      </parameters>
    </callback>
    <callback name="MountAdded" cname="GioMountAddedFunc">
      <return-type type="void"/>
      <parameters>
        <parameter name="volume_monitor" type="GVolumeMonitor*"/>
        <parameter name="mount" type="GMount*"/>
      </parameters>
    </callback>
    <callback name="MountRemoved" cname="GioMountRemovedFunc">
      <return-type type="void"/>
      <parameters>
        <parameter name="volume_monitor" type="GVolumeMonitor*"/>
        <parameter name="mount" type="GMount*"/>
      </parameters>
    </callback>
    <callback name="MountPreUnmount" cname="GioMountPreUnmountFunc">
      <return-type type="void"/>
      <parameters>
        <parameter name="volume_monitor" type="GVolumeMonitor*"/>
        <parameter name="mount" type="GMount*"/>
      </parameters>
    </callback>
    <callback name="MountChanged" cname="GioMountChangedFunc">
      <return-type type="void"/>
      <parameters>
        <parameter name="volume_monitor" type="GVolumeMonitor*"/>
        <parameter name="mount" type="GMount*"/>
      </parameters>
    </callback>
    <callback name="DriveConnected" cname="GioDriveConnectedFunc">
      <return-type type="void"/>
      <parameters>
        <parameter name="volume_monitor" type="GVolumeMonitor*"/>
        <parameter name="drive" type="GDrive*"/>
      </parameters>
    </callback>
    <callback name="DriveDisconnected" cname="GioDriveDisconnectedFunc">
      <return-type type="void"/>
      <parameters>
        <parameter name="volume_monitor" type="GVolumeMonitor*"/>
        <parameter name="drive" type="GDrive*"/>
      </parameters>
    </callback>
    <callback name="DriveChanged" cname="GioDriveChangedFunc">
      <return-type type="void"/>
      <parameters>
        <parameter name="volume_monitor" type="GVolumeMonitor*"/>
        <parameter name="drive" type="GDrive*"/>
      </parameters>
    </callback>
    <callback name="IsSupported" cname="GioIsSupportedFunc">
      <return-type type="gboolean"/>
    </callback>
    <callback name="GetConnectedDrives" cname="GioGetConnectedDrivesFunc">
      <return-type type="GList*">
        <warning>missing glib:type-name</warning>
      </return-type>
      <parameters>
        <parameter name="volume_monitor" type="GVolumeMonitor*"/>
      </parameters>
    </callback>
    <callback name="GetVolumes" cname="GioGetVolumesFunc">
      <return-type type="GList*">
        <warning>missing glib:type-name</warning>
      </return-type>
      <parameters>
        <parameter name="volume_monitor" type="GVolumeMonitor*"/>
      </parameters>
    </callback>
    <callback name="GetMounts" cname="GioGetMountsFunc">
      <return-type type="GList*">
        <warning>missing glib:type-name</warning>
      </return-type>
      <parameters>
        <parameter name="volume_monitor" type="GVolumeMonitor*"/>
      </parameters>
    </callback>
    <callback name="GetVolumeForUuid" cname="GioGetVolumeForUuidFunc">
      <return-type type="GVolume*"/>
      <parameters>
        <parameter name="volume_monitor" type="GVolumeMonitor*"/>
        <parameter name="uuid" type="const-gchar*"/>
      </parameters>
    </callback>
    <callback name="GetMountForUuid" cname="GioGetMountForUuidFunc">
      <return-type type="GMount*"/>
      <parameters>
        <parameter name="volume_monitor" type="GVolumeMonitor*"/>
        <parameter name="uuid" type="const-gchar*"/>
      </parameters>
    </callback>
    <callback name="AdoptOrphanMount" cname="GioAdoptOrphanMountFunc">
      <return-type type="GVolume*"/>
      <parameters>
        <parameter name="mount" type="GMount*"/>
        <parameter name="volume_monitor" type="GVolumeMonitor*"/>
      </parameters>
    </callback>
    <callback name="DriveEjectButton" cname="GioDriveEjectButtonFunc">
      <return-type type="void"/>
      <parameters>
        <parameter name="volume_monitor" type="GVolumeMonitor*"/>
        <parameter name="drive" type="GDrive*"/>
      </parameters>
    </callback>
    <callback name="DriveStopButton" cname="GioDriveStopButtonFunc">
      <return-type type="void"/>
      <parameters>
        <parameter name="volume_monitor" type="GVolumeMonitor*"/>
        <parameter name="drive" type="GDrive*"/>
      </parameters>
    </callback>
    <callback name="_gGReserved1" cname="Gio_gGReserved1Func">
      <return-type type="void"/>
    </callback>
    <callback name="_gGReserved2" cname="Gio_gGReserved2Func">
      <return-type type="void"/>
    </callback>
    <callback name="_gGReserved3" cname="Gio_gGReserved3Func">
      <return-type type="void"/>
    </callback>
    <callback name="_gGReserved4" cname="Gio_gGReserved4Func">
      <return-type type="void"/>
    </callback>
    <callback name="_gGReserved5" cname="Gio_gGReserved5Func">
      <return-type type="void"/>
    </callback>
    <callback name="_gGReserved6" cname="Gio_gGReserved6Func">
      <return-type type="void"/>
    </callback>
    <object name="Global" cname="GioGlobal" opaque="true">
      <method name="AppInfoCreateFromCommandline" cname="g_app_info_create_from_commandline" shared="true">
        <return-type type="GAppInfo*"/>
        <parameters>
          <parameter name="commandline" type="const-gchar*"/>
          <parameter name="application_name" type="const-gchar*"/>
          <parameter name="flags" type="GAppInfoCreateFlags"/>
        </parameters>
      </method>
      <method name="AppInfoGetAll" cname="g_app_info_get_all" shared="true">
        <return-type type="GList*">
          <warning>missing glib:type-name</warning>
        </return-type>
      </method>
      <method name="AppInfoGetAllForType" cname="g_app_info_get_all_for_type" shared="true">
        <return-type type="GList*">
          <warning>missing glib:type-name</warning>
        </return-type>
        <parameters>
          <parameter name="content_type" type="const-gchar*"/>
        </parameters>
      </method>
      <method name="AppInfoGetDefaultForType" cname="g_app_info_get_default_for_type" shared="true">
        <return-type type="GAppInfo*"/>
        <parameters>
          <parameter name="content_type" type="const-gchar*"/>
          <parameter name="must_support_uris" type="gboolean"/>
        </parameters>
      </method>
      <method name="AppInfoGetDefaultForUriScheme" cname="g_app_info_get_default_for_uri_scheme" shared="true">
        <return-type type="GAppInfo*"/>
        <parameters>
          <parameter name="uri_scheme" type="const-gchar*"/>
        </parameters>
      </method>
      <method name="AppInfoGetFallbackForType" cname="g_app_info_get_fallback_for_type" shared="true">
        <return-type type="GList*">
          <warning>missing glib:type-name</warning>
        </return-type>
        <parameters>
          <parameter name="content_type" type="const-gchar*"/>
        </parameters>
      </method>
      <method name="AppInfoGetRecommendedForType" cname="g_app_info_get_recommended_for_type" shared="true">
        <return-type type="GList*">
          <warning>missing glib:type-name</warning>
        </return-type>
        <parameters>
          <parameter name="content_type" type="const-gchar*"/>
        </parameters>
      </method>
      <method name="AppInfoLaunchDefaultForUri" cname="g_app_info_launch_default_for_uri" shared="true">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="uri" type="const-gchar*"/>
          <parameter name="launch_context" type="GAppLaunchContext*"/>
        </parameters>
      </method>
      <method name="AppInfoResetTypeAssociations" cname="g_app_info_reset_type_associations" shared="true">
        <return-type type="void"/>
        <parameters>
          <parameter name="content_type" type="const-gchar*"/>
        </parameters>
      </method>
      <method name="AsyncInitableNewvAsync" cname="g_async_initable_newv_async" shared="true">
        <return-type type="void"/>
        <parameters>
          <parameter name="object_type" type="GType"/>
          <parameter name="n_parameters" type="guint"/>
          <parameter name="parameters" type="GParameter*">
            <warning>missing glib:type-name</warning>
          </parameter>
          <parameter name="io_priority" type="gint"/>
          <parameter name="cancellable" type="GCancellable*"/>
          <parameter name="callback" type="GAsyncReadyCallback"/>
          <parameter name="user_data" type="gpointer"/>
        </parameters>
      </method>
      <method name="BusGet" cname="g_bus_get" shared="true">
        <return-type type="void"/>
        <parameters>
          <parameter name="bus_type" type="GBusType"/>
          <parameter name="cancellable" type="GCancellable*"/>
          <parameter name="callback" type="GAsyncReadyCallback"/>
          <parameter name="user_data" type="gpointer"/>
        </parameters>
      </method>
      <method name="BusGetFinish" cname="g_bus_get_finish" shared="true">
        <return-type type="GDBusConnection*"/>
        <parameters>
          <parameter name="res" type="GAsyncResult*"/>
        </parameters>
      </method>
      <method name="BusGetSync" cname="g_bus_get_sync" shared="true">
        <return-type type="GDBusConnection*"/>
        <parameters>
          <parameter name="bus_type" type="GBusType"/>
          <parameter name="cancellable" type="GCancellable*"/>
        </parameters>
      </method>
      <method name="BusOwnName" cname="g_bus_own_name" shared="true">
        <return-type type="guint"/>
        <parameters>
          <parameter name="bus_type" type="GBusType"/>
          <parameter name="name" type="const-gchar*"/>
          <parameter name="flags" type="GBusNameOwnerFlags"/>
          <parameter name="bus_acquired_handler" type="GBusAcquiredCallback"/>
          <parameter name="name_acquired_handler" type="GBusNameAcquiredCallback"/>
          <parameter name="name_lost_handler" type="GBusNameLostCallback"/>
          <parameter name="user_data" type="gpointer"/>
          <parameter name="user_data_free_func" type="GDestroyNotify"/>
        </parameters>
      </method>
      <method name="BusOwnNameOnConnection" cname="g_bus_own_name_on_connection" shared="true">
        <return-type type="guint"/>
        <parameters>
          <parameter name="connection" type="GDBusConnection*"/>
          <parameter name="name" type="const-gchar*"/>
          <parameter name="flags" type="GBusNameOwnerFlags"/>
          <parameter name="name_acquired_handler" type="GBusNameAcquiredCallback"/>
          <parameter name="name_lost_handler" type="GBusNameLostCallback"/>
          <parameter name="user_data" type="gpointer"/>
          <parameter name="user_data_free_func" type="GDestroyNotify"/>
        </parameters>
      </method>
      <method name="BusOwnNameOnConnectionWithClosures" cname="g_bus_own_name_on_connection_with_closures" shared="true">
        <return-type type="guint"/>
        <parameters>
          <parameter name="connection" type="GDBusConnection*"/>
          <parameter name="name" type="const-gchar*"/>
          <parameter name="flags" type="GBusNameOwnerFlags"/>
          <parameter name="name_acquired_closure" type="GClosure*">
            <warning>missing glib:type-name</warning>
          </parameter>
          <parameter name="name_lost_closure" type="GClosure*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="BusOwnNameWithClosures" cname="g_bus_own_name_with_closures" shared="true">
        <return-type type="guint"/>
        <parameters>
          <parameter name="bus_type" type="GBusType"/>
          <parameter name="name" type="const-gchar*"/>
          <parameter name="flags" type="GBusNameOwnerFlags"/>
          <parameter name="bus_acquired_closure" type="GClosure*">
            <warning>missing glib:type-name</warning>
          </parameter>
          <parameter name="name_acquired_closure" type="GClosure*">
            <warning>missing glib:type-name</warning>
          </parameter>
          <parameter name="name_lost_closure" type="GClosure*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="BusUnownName" cname="g_bus_unown_name" shared="true">
        <return-type type="void"/>
        <parameters>
          <parameter name="owner_id" type="guint"/>
        </parameters>
      </method>
      <method name="BusUnwatchName" cname="g_bus_unwatch_name" shared="true">
        <return-type type="void"/>
        <parameters>
          <parameter name="watcher_id" type="guint"/>
        </parameters>
      </method>
      <method name="BusWatchName" cname="g_bus_watch_name" shared="true">
        <return-type type="guint"/>
        <parameters>
          <parameter name="bus_type" type="GBusType"/>
          <parameter name="name" type="const-gchar*"/>
          <parameter name="flags" type="GBusNameWatcherFlags"/>
          <parameter name="name_appeared_handler" type="GBusNameAppearedCallback"/>
          <parameter name="name_vanished_handler" type="GBusNameVanishedCallback"/>
          <parameter name="user_data" type="gpointer"/>
          <parameter name="user_data_free_func" type="GDestroyNotify"/>
        </parameters>
      </method>
      <method name="BusWatchNameOnConnection" cname="g_bus_watch_name_on_connection" shared="true">
        <return-type type="guint"/>
        <parameters>
          <parameter name="connection" type="GDBusConnection*"/>
          <parameter name="name" type="const-gchar*"/>
          <parameter name="flags" type="GBusNameWatcherFlags"/>
          <parameter name="name_appeared_handler" type="GBusNameAppearedCallback"/>
          <parameter name="name_vanished_handler" type="GBusNameVanishedCallback"/>
          <parameter name="user_data" type="gpointer"/>
          <parameter name="user_data_free_func" type="GDestroyNotify"/>
        </parameters>
      </method>
      <method name="BusWatchNameOnConnectionWithClosures" cname="g_bus_watch_name_on_connection_with_closures" shared="true">
        <return-type type="guint"/>
        <parameters>
          <parameter name="connection" type="GDBusConnection*"/>
          <parameter name="name" type="const-gchar*"/>
          <parameter name="flags" type="GBusNameWatcherFlags"/>
          <parameter name="name_appeared_closure" type="GClosure*">
            <warning>missing glib:type-name</warning>
          </parameter>
          <parameter name="name_vanished_closure" type="GClosure*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="BusWatchNameWithClosures" cname="g_bus_watch_name_with_closures" shared="true">
        <return-type type="guint"/>
        <parameters>
          <parameter name="bus_type" type="GBusType"/>
          <parameter name="name" type="const-gchar*"/>
          <parameter name="flags" type="GBusNameWatcherFlags"/>
          <parameter name="name_appeared_closure" type="GClosure*">
            <warning>missing glib:type-name</warning>
          </parameter>
          <parameter name="name_vanished_closure" type="GClosure*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="ContentTypeCanBeExecutable" cname="g_content_type_can_be_executable" shared="true">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="type" type="const-gchar*"/>
        </parameters>
      </method>
      <method name="ContentTypeEquals" cname="g_content_type_equals" shared="true">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="type1" type="const-gchar*"/>
          <parameter name="type2" type="const-gchar*"/>
        </parameters>
      </method>
      <method name="ContentTypeFromMimeType" cname="g_content_type_from_mime_type" shared="true">
        <return-type type="gchar*"/>
        <parameters>
          <parameter name="mime_type" type="const-gchar*"/>
        </parameters>
      </method>
      <method name="ContentTypeGetDescription" cname="g_content_type_get_description" shared="true">
        <return-type type="gchar*"/>
        <parameters>
          <parameter name="type" type="const-gchar*"/>
        </parameters>
      </method>
      <method name="ContentTypeGetIcon" cname="g_content_type_get_icon" shared="true">
        <return-type type="GIcon*"/>
        <parameters>
          <parameter name="type" type="const-gchar*"/>
        </parameters>
      </method>
      <method name="ContentTypeGetMimeType" cname="g_content_type_get_mime_type" shared="true">
        <return-type type="gchar*"/>
        <parameters>
          <parameter name="type" type="const-gchar*"/>
        </parameters>
      </method>
      <method name="ContentTypeGuess" cname="g_content_type_guess" shared="true">
        <return-type type="gchar*"/>
        <parameters>
          <parameter name="filename" type="const-gchar*"/>
          <parameter name="data" type="guchar*" array_len="2"/>
          <parameter name="data_size" type="gsize"/>
          <parameter name="result_uncertain" type="gboolean*"/>
        </parameters>
      </method>
      <method name="ContentTypeGuessForTree" cname="g_content_type_guess_for_tree" shared="true">
        <return-type type="gchar***" array="true"/>
        <parameters>
          <parameter name="root" type="GFile*"/>
        </parameters>
      </method>
      <method name="ContentTypeIsA" cname="g_content_type_is_a" shared="true">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="type" type="const-gchar*"/>
          <parameter name="supertype" type="const-gchar*"/>
        </parameters>
      </method>
      <method name="ContentTypeIsUnknown" cname="g_content_type_is_unknown" shared="true">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="type" type="const-gchar*"/>
        </parameters>
      </method>
      <method name="ContentTypesGetRegistered" cname="g_content_types_get_registered" shared="true">
        <return-type type="GList*">
          <warning>missing glib:type-name</warning>
        </return-type>
      </method>
      <method name="DbusAddressGetForBusSync" cname="g_dbus_address_get_for_bus_sync" shared="true">
        <return-type type="gchar*"/>
        <parameters>
          <parameter name="bus_type" type="GBusType"/>
          <parameter name="cancellable" type="GCancellable*"/>
        </parameters>
      </method>
      <method name="DbusAddressGetStream" cname="g_dbus_address_get_stream" shared="true">
        <return-type type="void"/>
        <parameters>
          <parameter name="address" type="const-gchar*"/>
          <parameter name="cancellable" type="GCancellable*"/>
          <parameter name="callback" type="GAsyncReadyCallback"/>
          <parameter name="user_data" type="gpointer"/>
        </parameters>
      </method>
      <method name="DbusAddressGetStreamFinish" cname="g_dbus_address_get_stream_finish" shared="true">
        <return-type type="GIOStream*"/>
        <parameters>
          <parameter name="res" type="GAsyncResult*"/>
          <parameter name="out_guid" type="const-gchar*"/>
        </parameters>
      </method>
      <method name="DbusAddressGetStreamSync" cname="g_dbus_address_get_stream_sync" shared="true">
        <return-type type="GIOStream*"/>
        <parameters>
          <parameter name="address" type="const-gchar*"/>
          <parameter name="out_guid" type="const-gchar*"/>
          <parameter name="cancellable" type="GCancellable*"/>
        </parameters>
      </method>
      <method name="DbusAnnotationInfoLookup" cname="g_dbus_annotation_info_lookup" shared="true">
        <return-type type="const-gchar*"/>
        <parameters>
          <parameter name="annotations" type="GDBusAnnotationInfo**" array="true"/>
          <parameter name="name" type="const-gchar*"/>
        </parameters>
      </method>
      <method name="DbusErrorEncodeGerror" cname="g_dbus_error_encode_gerror" shared="true">
        <return-type type="gchar*"/>
        <parameters>
          <parameter name="error" type="GError*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="DbusErrorGetRemoteError" cname="g_dbus_error_get_remote_error" shared="true">
        <return-type type="gchar*"/>
        <parameters>
          <parameter name="error" type="GError*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="DbusErrorIsRemoteError" cname="g_dbus_error_is_remote_error" shared="true">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="error" type="GError*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="DbusErrorNewForDbusError" cname="g_dbus_error_new_for_dbus_error" shared="true">
        <return-type type="GError*">
          <warning>missing glib:type-name</warning>
        </return-type>
        <parameters>
          <parameter name="dbus_error_name" type="const-gchar*"/>
          <parameter name="dbus_error_message" type="const-gchar*"/>
        </parameters>
      </method>
      <method name="DbusErrorQuark" cname="g_dbus_error_quark" shared="true">
        <return-type type="guint32"/>
      </method>
      <method name="DbusErrorRegisterError" cname="g_dbus_error_register_error" shared="true">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="error_domain" type="guint32"/>
          <parameter name="error_code" type="gint"/>
          <parameter name="dbus_error_name" type="const-gchar*"/>
        </parameters>
      </method>
      <method name="DbusErrorRegisterErrorDomain" cname="g_dbus_error_register_error_domain" shared="true">
        <return-type type="void"/>
        <parameters>
          <parameter name="error_domain_quark_name" type="const-gchar*"/>
          <parameter name="quark_volatile" type="gsize"/>
          <parameter name="entries" type="GDBusErrorEntry*">
            <warning>missing glib:type-name</warning>
          </parameter>
          <parameter name="num_entries" type="guint"/>
        </parameters>
      </method>
      <method name="DbusErrorStripRemoteError" cname="g_dbus_error_strip_remote_error" shared="true">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="error" type="GError*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="DbusErrorUnregisterError" cname="g_dbus_error_unregister_error" shared="true">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="error_domain" type="guint32"/>
          <parameter name="error_code" type="gint"/>
          <parameter name="dbus_error_name" type="const-gchar*"/>
        </parameters>
      </method>
      <method name="DbusGenerateGuid" cname="g_dbus_generate_guid" shared="true">
        <return-type type="gchar*"/>
      </method>
      <method name="DbusGvalueToGvariant" cname="g_dbus_gvalue_to_gvariant" shared="true">
        <return-type type="GVariant*">
          <warning>missing glib:type-name</warning>
        </return-type>
        <parameters>
          <parameter name="gvalue" type="GValue*">
            <warning>missing glib:type-name</warning>
          </parameter>
          <parameter name="type" type="GVariantType*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="DbusGvariantToGvalue" cname="g_dbus_gvariant_to_gvalue" shared="true">
        <return-type type="void"/>
        <parameters>
          <parameter name="value" type="GVariant*">
            <warning>missing glib:type-name</warning>
          </parameter>
          <parameter name="out_gvalue" type="GValue*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="DbusIsAddress" cname="g_dbus_is_address" shared="true">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="string" type="const-gchar*"/>
        </parameters>
      </method>
      <method name="DbusIsGuid" cname="g_dbus_is_guid" shared="true">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="string" type="const-gchar*"/>
        </parameters>
      </method>
      <method name="DbusIsInterfaceName" cname="g_dbus_is_interface_name" shared="true">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="string" type="const-gchar*"/>
        </parameters>
      </method>
      <method name="DbusIsMemberName" cname="g_dbus_is_member_name" shared="true">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="string" type="const-gchar*"/>
        </parameters>
      </method>
      <method name="DbusIsName" cname="g_dbus_is_name" shared="true">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="string" type="const-gchar*"/>
        </parameters>
      </method>
      <method name="DbusIsSupportedAddress" cname="g_dbus_is_supported_address" shared="true">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="string" type="const-gchar*"/>
        </parameters>
      </method>
      <method name="DbusIsUniqueName" cname="g_dbus_is_unique_name" shared="true">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="string" type="const-gchar*"/>
        </parameters>
      </method>
      <method name="FileNewForCommandlineArg" cname="g_file_new_for_commandline_arg" shared="true">
        <return-type type="GFile*"/>
        <parameters>
          <parameter name="arg" type="const-gchar*"/>
        </parameters>
      </method>
      <method name="FileNewForPath" cname="g_file_new_for_path" shared="true">
        <return-type type="GFile*"/>
        <parameters>
          <parameter name="path" type="const-gchar*"/>
        </parameters>
      </method>
      <method name="FileNewForUri" cname="g_file_new_for_uri" shared="true">
        <return-type type="GFile*"/>
        <parameters>
          <parameter name="uri" type="const-gchar*"/>
        </parameters>
      </method>
      <method name="FileNewTmp" cname="g_file_new_tmp" shared="true">
        <return-type type="GFile*"/>
        <parameters>
          <parameter name="tmpl" type="filename"/>
          <parameter name="iostream" type="GFileIOStream*"/>
        </parameters>
      </method>
      <method name="FileParseName" cname="g_file_parse_name" shared="true">
        <return-type type="GFile*"/>
        <parameters>
          <parameter name="parse_name" type="const-gchar*"/>
        </parameters>
      </method>
      <method name="IconHash" cname="g_icon_hash" shared="true">
        <return-type type="guint"/>
        <parameters>
          <parameter name="icon" type="gpointer"/>
        </parameters>
      </method>
      <method name="IconNewForString" cname="g_icon_new_for_string" shared="true">
        <return-type type="GIcon*"/>
        <parameters>
          <parameter name="str" type="const-gchar*"/>
        </parameters>
      </method>
      <method name="InitableNewv" cname="g_initable_newv" shared="true">
        <return-type type="gpointer*"/>
        <parameters>
          <parameter name="object_type" type="GType"/>
          <parameter name="n_parameters" type="guint"/>
          <parameter name="parameters" type="GParameter*" array_len="1"/>
          <parameter name="cancellable" type="GCancellable*"/>
        </parameters>
      </method>
      <method name="IoErrorFromErrno" cname="g_io_error_from_errno" shared="true">
        <return-type type="GIOErrorEnum"/>
        <parameters>
          <parameter name="err_no" type="gint"/>
        </parameters>
      </method>
      <method name="IoErrorQuark" cname="g_io_error_quark" shared="true">
        <return-type type="guint32"/>
      </method>
      <method name="IoExtensionPointImplement" cname="g_io_extension_point_implement" shared="true">
        <return-type type="GIOExtension*">
          <warning>missing glib:type-name</warning>
        </return-type>
        <parameters>
          <parameter name="extension_point_name" type="const-gchar*"/>
          <parameter name="type" type="GType"/>
          <parameter name="extension_name" type="const-gchar*"/>
          <parameter name="priority" type="gint"/>
        </parameters>
      </method>
      <method name="IoExtensionPointLookup" cname="g_io_extension_point_lookup" shared="true">
        <return-type type="GIOExtensionPoint*">
          <warning>missing glib:type-name</warning>
        </return-type>
        <parameters>
          <parameter name="name" type="const-gchar*"/>
        </parameters>
      </method>
      <method name="IoExtensionPointRegister" cname="g_io_extension_point_register" shared="true">
        <return-type type="GIOExtensionPoint*">
          <warning>missing glib:type-name</warning>
        </return-type>
        <parameters>
          <parameter name="name" type="const-gchar*"/>
        </parameters>
      </method>
      <method name="IoModulesLoadAllInDirectory" cname="g_io_modules_load_all_in_directory" shared="true">
        <return-type type="GList*">
          <warning>missing glib:type-name</warning>
        </return-type>
        <parameters>
          <parameter name="dirname" type="const-gchar*"/>
        </parameters>
      </method>
      <method name="IoModulesLoadAllInDirectoryWithScope" cname="g_io_modules_load_all_in_directory_with_scope" shared="true">
        <return-type type="GList*">
          <warning>missing glib:type-name</warning>
        </return-type>
        <parameters>
          <parameter name="dirname" type="const-gchar*"/>
          <parameter name="scope" type="GIOModuleScope*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="IoModulesScanAllInDirectory" cname="g_io_modules_scan_all_in_directory" shared="true">
        <return-type type="void"/>
        <parameters>
          <parameter name="dirname" type="const-gchar*"/>
        </parameters>
      </method>
      <method name="IoModulesScanAllInDirectoryWithScope" cname="g_io_modules_scan_all_in_directory_with_scope" shared="true">
        <return-type type="void"/>
        <parameters>
          <parameter name="dirname" type="const-gchar*"/>
          <parameter name="scope" type="GIOModuleScope*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="IoSchedulerCancelAllJobs" cname="g_io_scheduler_cancel_all_jobs" shared="true">
        <return-type type="void"/>
      </method>
      <method name="IoSchedulerPushJob" cname="g_io_scheduler_push_job" shared="true">
        <return-type type="void"/>
        <parameters>
          <parameter name="job_func" type="GIOSchedulerJobFunc"/>
          <parameter name="user_data" type="gpointer"/>
          <parameter name="notify" type="GDestroyNotify"/>
          <parameter name="io_priority" type="gint"/>
          <parameter name="cancellable" type="GCancellable*"/>
        </parameters>
      </method>
      <method name="NetworkMonitorGetDefault" cname="g_network_monitor_get_default" shared="true">
        <return-type type="GNetworkMonitor*"/>
      </method>
      <method name="PollableSourceNew" cname="g_pollable_source_new" shared="true">
        <return-type type="GSource*">
          <warning>missing glib:type-name</warning>
        </return-type>
        <parameters>
          <parameter name="pollable_stream" type="GObject*"/>
        </parameters>
      </method>
      <method name="ProxyGetDefaultForProtocol" cname="g_proxy_get_default_for_protocol" shared="true">
        <return-type type="GProxy*"/>
        <parameters>
          <parameter name="protocol" type="const-gchar*"/>
        </parameters>
      </method>
      <method name="ProxyResolverGetDefault" cname="g_proxy_resolver_get_default" shared="true">
        <return-type type="GProxyResolver*"/>
      </method>
      <method name="ResolverErrorQuark" cname="g_resolver_error_quark" shared="true">
        <return-type type="guint32"/>
      </method>
      <method name="ResourceErrorQuark" cname="g_resource_error_quark" shared="true">
        <return-type type="guint32"/>
      </method>
      <method name="ResourceLoad" cname="g_resource_load" shared="true">
        <return-type type="GResource*">
          <warning>missing glib:type-name</warning>
        </return-type>
        <parameters>
          <parameter name="filename" type="filename"/>
        </parameters>
      </method>
      <method name="ResourcesEnumerateChildren" cname="g_resources_enumerate_children" shared="true">
        <return-type type="char***" array="true"/>
        <parameters>
          <parameter name="path" type="const-gchar*"/>
          <parameter name="lookup_flags" type="GResourceLookupFlags"/>
        </parameters>
      </method>
      <method name="ResourcesGetInfo" cname="g_resources_get_info" shared="true">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="path" type="const-gchar*"/>
          <parameter name="lookup_flags" type="GResourceLookupFlags"/>
          <parameter name="size" type="gsize*"/>
          <parameter name="flags" type="guint32*"/>
        </parameters>
      </method>
      <method name="ResourcesLookupData" cname="g_resources_lookup_data" shared="true">
        <return-type type="GBytes*">
          <warning>missing glib:type-name</warning>
        </return-type>
        <parameters>
          <parameter name="path" type="const-gchar*"/>
          <parameter name="lookup_flags" type="GResourceLookupFlags"/>
        </parameters>
      </method>
      <method name="ResourcesOpenStream" cname="g_resources_open_stream" shared="true">
        <return-type type="GInputStream*"/>
        <parameters>
          <parameter name="path" type="const-gchar*"/>
          <parameter name="lookup_flags" type="GResourceLookupFlags"/>
        </parameters>
      </method>
      <method name="SettingsSchemaSourceGetDefault" cname="g_settings_schema_source_get_default" shared="true">
        <return-type type="GSettingsSchemaSource*">
          <warning>missing glib:type-name</warning>
        </return-type>
      </method>
      <method name="SimpleAsyncReportErrorInIdle" cname="g_simple_async_report_error_in_idle" shared="true">
        <return-type type="void"/>
        <parameters>
          <parameter name="_object" type="GObject*"/>
          <parameter name="callback" type="GAsyncReadyCallback"/>
          <parameter name="user_data" type="gpointer"/>
          <parameter name="domain" type="guint32"/>
          <parameter name="code" type="gint"/>
          <parameter name="format" type="const-gchar*"/>
          <parameter name="var_args" type="va_list"/>
        </parameters>
      </method>
      <method name="SimpleAsyncReportGerrorInIdle" cname="g_simple_async_report_gerror_in_idle" shared="true">
        <return-type type="void"/>
        <parameters>
          <parameter name="_object" type="GObject*"/>
          <parameter name="callback" type="GAsyncReadyCallback"/>
          <parameter name="user_data" type="gpointer"/>
          <parameter name="error" type="GError*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="SimpleAsyncReportTakeGerrorInIdle" cname="g_simple_async_report_take_gerror_in_idle" shared="true">
        <return-type type="void"/>
        <parameters>
          <parameter name="_object" type="GObject*"/>
          <parameter name="callback" type="GAsyncReadyCallback"/>
          <parameter name="user_data" type="gpointer"/>
          <parameter name="error" type="GError*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="SrvTargetListSort" cname="g_srv_target_list_sort" shared="true">
        <return-type type="GList*">
          <warning>missing glib:type-name</warning>
        </return-type>
        <parameters>
          <parameter name="targets" type="GList*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="TlsBackendGetDefault" cname="g_tls_backend_get_default" shared="true">
        <return-type type="GTlsBackend*"/>
      </method>
      <method name="TlsClientConnectionNew" cname="g_tls_client_connection_new" shared="true">
        <return-type type="GTlsClientConnection*"/>
        <parameters>
          <parameter name="base_io_stream" type="GIOStream*"/>
          <parameter name="server_identity" type="GSocketConnectable*"/>
        </parameters>
      </method>
      <method name="TlsErrorQuark" cname="g_tls_error_quark" shared="true">
        <return-type type="guint32"/>
      </method>
      <method name="TlsFileDatabaseNew" cname="g_tls_file_database_new" shared="true">
        <return-type type="GTlsFileDatabase*"/>
        <parameters>
          <parameter name="anchors" type="const-gchar*"/>
        </parameters>
      </method>
      <method name="TlsServerConnectionNew" cname="g_tls_server_connection_new" shared="true">
        <return-type type="GTlsServerConnection*"/>
        <parameters>
          <parameter name="base_io_stream" type="GIOStream*"/>
          <parameter name="certificate" type="GTlsCertificate*"/>
        </parameters>
      </method>
      <method name="UnixIsMountPathSystemInternal" cname="g_unix_is_mount_path_system_internal" shared="true">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="mount_path" type="const-gchar*"/>
        </parameters>
      </method>
      <method name="UnixMountAt" cname="g_unix_mount_at" shared="true">
        <return-type type="GUnixMountEntry*">
          <warning>missing glib:type-name</warning>
        </return-type>
        <parameters>
          <parameter name="mount_path" type="const-gchar*"/>
          <parameter name="time_read" type="guint64*"/>
        </parameters>
      </method>
      <method name="UnixMountCompare" cname="g_unix_mount_compare" shared="true">
        <return-type type="gint"/>
        <parameters>
          <parameter name="mount1" type="GUnixMountEntry*">
            <warning>missing glib:type-name</warning>
          </parameter>
          <parameter name="mount2" type="GUnixMountEntry*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="UnixMountFree" cname="g_unix_mount_free" shared="true">
        <return-type type="void"/>
        <parameters>
          <parameter name="mount_entry" type="GUnixMountEntry*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="UnixMountGetDevicePath" cname="g_unix_mount_get_device_path" shared="true">
        <return-type type="const-gchar*"/>
        <parameters>
          <parameter name="mount_entry" type="GUnixMountEntry*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="UnixMountGetFsType" cname="g_unix_mount_get_fs_type" shared="true">
        <return-type type="const-gchar*"/>
        <parameters>
          <parameter name="mount_entry" type="GUnixMountEntry*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="UnixMountGetMountPath" cname="g_unix_mount_get_mount_path" shared="true">
        <return-type type="const-gchar*"/>
        <parameters>
          <parameter name="mount_entry" type="GUnixMountEntry*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="UnixMountGuessCanEject" cname="g_unix_mount_guess_can_eject" shared="true">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="mount_entry" type="GUnixMountEntry*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="UnixMountGuessIcon" cname="g_unix_mount_guess_icon" shared="true">
        <return-type type="GIcon*"/>
        <parameters>
          <parameter name="mount_entry" type="GUnixMountEntry*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="UnixMountGuessName" cname="g_unix_mount_guess_name" shared="true">
        <return-type type="gchar*"/>
        <parameters>
          <parameter name="mount_entry" type="GUnixMountEntry*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="UnixMountGuessShouldDisplay" cname="g_unix_mount_guess_should_display" shared="true">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="mount_entry" type="GUnixMountEntry*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="UnixMountIsReadonly" cname="g_unix_mount_is_readonly" shared="true">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="mount_entry" type="GUnixMountEntry*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="UnixMountIsSystemInternal" cname="g_unix_mount_is_system_internal" shared="true">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="mount_entry" type="GUnixMountEntry*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="UnixMountPointsChangedSince" cname="g_unix_mount_points_changed_since" shared="true">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="time" type="guint64"/>
        </parameters>
      </method>
      <method name="UnixMountPointsGet" cname="g_unix_mount_points_get" shared="true">
        <return-type type="GList*">
          <warning>missing glib:type-name</warning>
        </return-type>
        <parameters>
          <parameter name="time_read" type="guint64*"/>
        </parameters>
      </method>
      <method name="UnixMountsChangedSince" cname="g_unix_mounts_changed_since" shared="true">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="time" type="guint64"/>
        </parameters>
      </method>
      <method name="UnixMountsGet" cname="g_unix_mounts_get" shared="true">
        <return-type type="GList*">
          <warning>missing glib:type-name</warning>
        </return-type>
        <parameters>
          <parameter name="time_read" type="guint64*"/>
        </parameters>
      </method>
    </object>
  </namespace>
</api>
